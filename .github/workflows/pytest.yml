name: ampl

on: [push]

jobs:
  pytest-unit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
      - name: System Dependencies
        run: |
          sudo apt install -y build-essential \
            libcairo2-dev \
            pkg-config \
            python3-dev \
            python3-openssl
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pip/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python3.9 -m pip install --upgrade pip
          pip install -e .
          if [ -f pip/cpu_requirements.txt ]; then pip install -r pip/cpu_requirements.txt; fi
          if [ -f pip/dev_requirements.txt ]; then pip install -r pip/dev_requirements.txt; fi
          if [ -f pip/ci_requirements.txt ]; then pip install -r pip/ci_requirements.txt; fi

      - name: pytest
        run: |
          # python3.9 -m pytest --capture=sys --capture=fd --cov=atomsci/ -vv atomsci/ddm/test/unit
          cd atomsci/ddm/test/unit && python3.9 -m pytest -n 2 --capture=sys --capture=fd --cov=atomsci/ -vv
        env:
          ENV: test

      # - name: Upload coverage reports to Codecov
      #   uses: codecov/codecov-action@v3
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  pytest-integrative-1:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
      - name: System Dependencies
        run: |
          sudo apt install -y build-essential \
            libcairo2-dev \
            pkg-config \
            python3-dev \
            python3-openssl
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pip/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python3.9 -m pip install --upgrade pip
          pip install -e .
          if [ -f pip/cpu_requirements.txt ]; then pip install -r pip/cpu_requirements.txt; fi
          if [ -f pip/dev_requirements.txt ]; then pip install -r pip/dev_requirements.txt; fi
          if [ -f pip/ci_requirements.txt ]; then pip install -r pip/ci_requirements.txt; fi

      - name: pytest
        run: |
          # TODO: Run this test with pytest for paralell testing
          # python3.9 -m pytest -n 2 --capture=sys --capture=fd --cov=atomsci/ -vv atomsci/ddm/test/integrative
          cd atomsci/ddm/test/integrative && ./integrative_batch_chunk_tests 0
        env:
          ENV: test

      # - name: Upload coverage reports to Codecov
      #   uses: codecov/codecov-action@v3
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  pytest-integrative-2:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
      - name: System Dependencies
        run: |
          sudo apt install -y build-essential \
            libcairo2-dev \
            pkg-config \
            python3-dev \
            python3-openssl
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pip/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python3.9 -m pip install --upgrade pip
          pip install -e .
          if [ -f pip/cpu_requirements.txt ]; then pip install -r pip/cpu_requirements.txt; fi
          if [ -f pip/dev_requirements.txt ]; then pip install -r pip/dev_requirements.txt; fi
          if [ -f pip/ci_requirements.txt ]; then pip install -r pip/ci_requirements.txt; fi

      - name: pytest
        run: |
          # TODO: Run this test with pytest for paralell testing
          # python3.9 -m pytest -n 2 --capture=sys --capture=fd --cov=atomsci/ -vv atomsci/ddm/test/integrative
          cd atomsci/ddm/test/integrative && ./integrative_batch_chunk_tests 1
        env:
          ENV: test

      # - name: Upload coverage reports to Codecov
      #   uses: codecov/codecov-action@v3
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  pytest-integrative-3:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
      - name: System Dependencies
        run: |
          sudo apt install -y build-essential \
            libcairo2-dev \
            pkg-config \
            python3-dev \
            python3-openssl
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pip/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python3.9 -m pip install --upgrade pip
          pip install -e .
          if [ -f pip/cpu_requirements.txt ]; then pip install -r pip/cpu_requirements.txt; fi
          if [ -f pip/dev_requirements.txt ]; then pip install -r pip/dev_requirements.txt; fi
          if [ -f pip/ci_requirements.txt ]; then pip install -r pip/ci_requirements.txt; fi

      - name: pytest
        run: |
          # TODO: Run this test with pytest for paralell testing
          # python3.9 -m pytest -n 2 --capture=sys --capture=fd --cov=atomsci/ -vv atomsci/ddm/test/integrative
          cd atomsci/ddm/test/integrative && ./integrative_batch_chunk_tests 2
        env:
          ENV: test

      # - name: Upload coverage reports to Codecov
      #   uses: codecov/codecov-action@v3
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  pytest-integrative-4:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
      - name: System Dependencies
        run: |
          sudo apt install -y build-essential \
            libcairo2-dev \
            pkg-config \
            python3-dev \
            python3-openssl
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pip/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python3.9 -m pip install --upgrade pip
          pip install -e .
          if [ -f pip/cpu_requirements.txt ]; then pip install -r pip/cpu_requirements.txt; fi
          if [ -f pip/dev_requirements.txt ]; then pip install -r pip/dev_requirements.txt; fi
          if [ -f pip/ci_requirements.txt ]; then pip install -r pip/ci_requirements.txt; fi

      - name: pytest
        run: |
          # TODO: Run this test with pytest for paralell testing
          # python3.9 -m pytest -n 2 --capture=sys --capture=fd --cov=atomsci/ -vv atomsci/ddm/test/integrative
          cd atomsci/ddm/test/integrative && ./integrative_batch_chunk_tests 3
        env:
          ENV: test

      # - name: Upload coverage reports to Codecov
      #   uses: codecov/codecov-action@v3
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
