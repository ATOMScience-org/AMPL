Search.setIndex({"docnames": ["ddm", "ddm.pipeline", "ddm.utils", "guide/advanced_ampl_usage", "guide/advanced_installation", "guide/advanced_testing", "guide/getting_started", "guide/install", "guide/running_ampl", "guide/tests", "index", "modules", "pipeline", "utils"], "filenames": ["ddm.rst", "ddm.pipeline.rst", "ddm.utils.rst", "guide/advanced_ampl_usage.rst", "guide/advanced_installation.rst", "guide/advanced_testing.rst", "guide/getting_started.rst", "guide/install.rst", "guide/running_ampl.rst", "guide/tests.rst", "index.rst", "modules.rst", "pipeline.rst", "utils.rst"], "titles": ["ddm package", "ddm.pipeline package", "ddm.utils package", "Advanced AMPL Usage", "Advanced Installation", "Advanced Testing", "Getting started", "Installation", "Running AMPL", "Tests", "ATOM Modeling PipeLine (AMPL) for Drug Discovery", "atomsci", "pipeline package", "utils package"], "terms": {"pipelin": [0, 9, 11, 13], "submodul": [0, 11], "ave_splitt": [0, 11], "chem_divers": [0, 11], "compare_model": [0, 11], "dist_metr": [0, 11], "diversity_plot": [0, 11], "featur": [0, 11], "model_dataset": [0, 11], "model_pipelin": [0, 3, 11], "model_track": [0, 11], "model_wrapp": [0, 11], "parameter_pars": [0, 11, 13], "perf_data": [0, 11], "perf_plot": [0, 11], "predict_from_model": [0, 12], "split": [0, 9, 11, 13], "temporal_splitt": 0, "transform": [0, 11], "util": [0, 10, 11], "curate_data": [0, 11], "data_curation_funct": [0, 11], "datastore_funct": [0, 11], "gentestset": [0, 11], "hyperparam_search_wrapp": [0, 11, 12], "llnl_util": [0, 11], "model_retrain": [0, 11], "process_slurm": [0, 11], "pubchem_util": [0, 11], "rdkit_easi": [0, 11], "struct_util": [0, 11], "verify_result": 0, "can": [3, 5, 6, 7, 8, 9, 10, 12, 13], "fit": [3, 5, 8, 9, 12], "model": [3, 8, 9, 12, 13], "from": [3, 4, 5, 7, 8, 9, 10, 12, 13], "python": [3, 6, 7, 9, 10, 12, 13], "py": [3, 9, 12, 13], "config_fil": 3, "test": [3, 4, 8, 10, 12, 13], "json": [3, 8, 9, 12, 13], "i": [3, 6, 7, 8, 9, 10, 12, 13], "avail": [3, 8, 12], "run": [3, 6, 7, 9, 10, 12, 13], "slurm": [3, 4, 13], "cluster": [3, 5, 12, 13], "hyperopt": [3, 13], "bayesian": [3, 13], "To": [3, 4, 5, 9, 13], "follow": [3, 4, 5, 6, 7, 9, 10, 12, 13], "step": [3, 10, 13], "see": [3, 8, 13], "more": [3, 10, 12, 13], "detail": [3, 8, 9, 10, 12, 13], "ampl": [4, 5, 6, 9, 12, 13], "ha": [4, 6, 7, 10, 12, 13], "been": [4, 6, 7, 10, 12, 13], "develop": [4, 6, 7], "linux": 4, "system": [4, 5, 6, 7, 9, 12, 13], "red": 4, "hat": 4, "enterpris": 4, "7": [4, 12], "ubuntu": 4, "16": [4, 13], "04": 4, "remov": [4, 12, 13], "conda": [4, 5, 6, 9], "environ": [4, 6, 13], "us": [4, 5, 7, 8, 9, 12, 13], "activ": [4, 5, 6, 7, 8, 9, 12, 13], "atomsci": [4, 5, 6, 7, 8, 9, 10, 13], "pip": [4, 6, 7], "entir": [4, 12], "deactiv": 4, "name": [4, 7, 12, 13], "all": [4, 7, 12, 13], "full": [5, 8, 12, 13], "set": [5, 8, 9, 12, 13], "pytest": [5, 9], "directori": [5, 7, 8, 12, 13], "cd": [5, 6, 7, 9], "ddm": [5, 8, 9, 13], "sever": [5, 12], "take": [5, 6, 7, 9, 12, 13], "some": [5, 6, 7, 12, 13], "time": [5, 6, 7, 12, 13], "These": [5, 12, 13], "submit": [5, 13], "batch": [5, 13], "job": [5, 13], "exampl": [5, 8, 13], "gener": [5, 9, 10, 12, 13], "script": [5, 7, 9, 12, 13], "ar": [5, 6, 7, 9, 10, 12, 13], "includ": [5, 8, 9, 12, 13], "pytest_slurm": 5, "sh": [5, 7], "integr": [5, 9], "delaney_nn": 5, "sbatch": 5, "wenzel_nn": 5, "work": [5, 7, 12, 13], "curat": [5, 9, 10, 13], "predict": [5, 8, 9, 10, 12, 13], "do": [5, 12, 13], "requir": [5, 12, 13], "howev": [5, 12], "public": [5, 12, 13], "dataset": [5, 9, 10, 12, 13], "repo": 5, "due": [5, 12], "licens": 5, "concern": 5, "automat": [5, 12, 13], "download": [5, 7], "when": [5, 12, 13], "If": [5, 7, 12, 13], "doe": [5, 12, 13], "have": [5, 7, 12, 13], "need": [5, 12, 13], "befor": [5, 12, 13], "shell": [5, 12, 13], "Then": [5, 13], "copi": [5, 12, 13], "offlin": 5, "bash": 5, "download_datset": 5, "3": [6, 7, 12, 13], "packag": [6, 7, 8, 10, 11], "specif": [6, 7, 10, 12, 13], "The": [6, 7, 8, 9, 10, 12, 13], "necessari": [6, 7, 12, 13], "anaconda": [6, 7], "miniconda": [6, 7], "clone": 6, "git": 6, "repositori": 6, "http": [6, 7, 12, 13], "github": [6, 7, 10, 12, 13], "com": [6, 7, 12, 13], "org": [6, 7, 12, 13], "creat": [6, 9, 12, 13], "y": [6, 7, 12], "n": [6, 7], "file": [6, 7, 8, 9, 12, 13], "conda_package_list": [6, 7], "txt": [6, 7, 13], "r": [6, 7, 12], "pip_requir": [6, 7], "depend": [6, 7, 10, 12, 13], "perform": [6, 7, 12, 13], "go": 7, "root": [7, 12, 13], "build": [7, 8, 10, 12, 13], "command": [7, 8, 9, 12, 13], "directli": [7, 12, 13], "alon": 7, "home": [7, 12, 13], "local": [7, 12, 13], "after": [7, 12, 13], "thi": [7, 9, 12, 13], "process": [7, 12, 13], "you": [7, 12, 13], "an": [7, 9, 10, 12, 13], "": [7, 12, 13], "desktop": 7, "get": [7, 10, 12, 13], "start": [7, 10, 12], "workspac": 7, "folder": [7, 12], "mount": 7, "transfer": 7, "imag": [7, 13], "pull": [7, 12], "paulsonak": 7, "p": [7, 12], "8888": 7, "v": [7, 12, 13], "local_workspace_fold": 7, "directory_in_dock": 7, "insid": 7, "jupyt": 7, "notebook": [7, 12, 13], "ip": 7, "0": [7, 12, 13], "allow": [7, 12, 13], "port": 7, "OR": [7, 12], "lab": 7, "visit": 7, "provid": [7, 12, 13], "url": [7, 13], "your": 7, "browser": 7, "ie": [7, 13], "d33b0faf6bc9": 7, "token": [7, 12, 13], "656b8597498b18db2213b1ec9a00e9d738dfe112bbe7566d": 7, "replac": [7, 12, 13], "localhost": 7, "doesn": [7, 12, 13], "t": [7, 12, 13], "exit": [7, 12, 13], "contain": [7, 8, 12, 13], "chang": [7, 12, 13], "other": [7, 10, 12, 13], "number": [7, 12, 13], "7777": 7, "8899": 7, "place": [7, 12, 13], "written": [7, 12, 13], "rerun": 7, "both": [7, 12, 13], "Be": 7, "sure": [7, 12, 13], "save": [7, 12, 13], "ani": [7, 12, 13], "want": [7, 12, 13], "perman": 7, "shut": 7, "down": [7, 10], "ll": 7, "lose": 7, "anyth": [7, 12, 13], "line": [8, 12, 13], "import": [8, 9, 12], "molecular": [8, 9, 10, 12, 13], "properti": [8, 12, 13], "appropri": [8, 12], "modul": [8, 11], "descript": [8, 12, 13], "how": [8, 9, 12], "make": [8, 9, 12, 13], "mani": [8, 12, 13], "variou": [8, 12, 13], "task": [8, 10, 12], "within": [8, 10, 12, 13], "list": [8, 9, 12, 13], "explan": 8, "each": [8, 12, 13], "found": [8, 9, 12, 13], "atom": [8, 12, 13], "doc": [8, 11], "md": 8, "docstr": 8, "comment": [8, 13], "explain": [8, 9], "html": [8, 12, 13], "index": [8, 12, 13], "advanc": [8, 9, 10], "suit": 9, "softwar": [9, 10], "section": [9, 12], "veri": 9, "simpl": [9, 13], "fast": 9, "random": [9, 12, 13], "forest": [9, 12], "mordr": [9, 10, 12], "descriptor": [9, 10, 12, 13], "compound": [9, 12, 13], "delanei": [9, 12], "et": [9, 12], "al": [9, 12], "solubl": [9, 13], "data": [9, 10, 12, 13], "A": [9, 10, 12, 13], "scaffold": [9, 12, 13], "base": [9, 12, 13], "train": [9, 10, 11, 12, 13], "In": [9, 12], "addit": [9, 12, 13], "extern": [9, 13], "holdout": 9, "demonstr": 9, "new": [9, 12, 13], "delaney_rf": 9, "few": [9, 12], "minut": 9, "modern": 9, "below": [9, 13], "test_delany_rf": 9, "load": [9, 12, 13], "object": [9, 12, 13], "reload": [9, 12], "filesystem": [9, 12, 13], "config_delaney_fit_rf": 9, "basic": [9, 13], "paramet": [9, 10, 13], "config_delaney_predict_rf": 9, "open": [10, 11], "sourc": [10, 12, 13], "modular": 10, "extens": [10, 12, 13], "share": [10, 12, 13], "silico": 10, "extend": 10, "function": [10, 12, 13], "deepchem": [10, 12], "support": [10, 12, 13], "arrai": [10, 12], "machin": [10, 13], "learn": [10, 12, 13], "tool": [10, 13], "end": [10, 12, 13], "driven": [10, 12], "kei": [10, 12, 13], "safeti": 10, "pharmacokinet": 10, "relev": [10, 12, 13], "benchmark": 10, "larg": [10, 12, 13], "collect": [10, 12], "pharmaceut": 10, "cover": 10, "wide": 10, "rang": [10, 12, 13], "enabl": [10, 12, 13], "ingest": 10, "analysi": 10, "broken": [10, 12], "stage": 10, "tune": [10, 12], "visual": [10, 12, 13], "option": [10, 12, 13], "librari": [10, 13], "basi": 10, "graph": [10, 12], "convolut": [10, 12], "rdkit": [10, 12, 13], "informat": 10, "chemic": [10, 12, 13], "molv": 10, "instal": [10, 12], "usag": [10, 13], "aveminsplitt": [11, 12], "analyze_split": [11, 12], "permut": [11, 12, 13], "shuffl": [11, 12], "calc_dist_diskdataset": [11, 12], "calc_dist_feat_arrai": [11, 12], "calc_dist_smil": [11, 12], "calc_summari": [11, 12], "upload_distmatrix_to_d": [11, 12], "copy_best_filesystem_model": [11, 12], "del_ignored_param": [11, 12], "extract_collection_perf_metr": [11, 12], "extract_model_and_feature_paramet": [11, 12], "get_best_models_info": [11, 12], "get_best_perf_t": [11, 12], "get_collection_dataset": [11, 12], "get_dataset_model": [11, 12], "get_filesystem_model": [11, 12], "get_filesystem_perf_result": [11, 12], "get_multitask_perf_from_fil": [11, 12], "get_multitask_perf_from_files_new": [11, 12], "get_multitask_perf_from_track": [11, 12], "get_summary_metadata_t": [11, 12], "get_summary_perf_t": [11, 12], "get_tarball_perf_t": [11, 12], "get_training_dataset": [11, 12], "get_training_perf_t": [11, 12], "get_umap_nn_model_perf_t": [11, 12], "num_trainable_parameters_from_fil": [11, 12], "mc": [11, 12], "tanimoto": [11, 12, 13], "tanimoto_singl": [11, 12], "plot_dataset_dist_distr": [11, 12], "plot_tani_dist_distr": [11, 12], "atomatomtypeest": [11, 12], "my_es_typ": [11, 12], "parameter_nam": [11, 12], "preset": [11, 12], "atommoleculardistanceedg": [11, 12], "computeddescriptorfeatur": [11, 12], "compute_descriptor": [11, 12], "compute_moe_descriptor": [11, 12], "compute_mordred_descriptor": [11, 12], "compute_rdkit_descriptor": [11, 12], "featurize_data": [11, 12], "get_featurized_dset_nam": [11, 12], "scale_moe_descriptor": [11, 12], "descriptorfeatur": [11, 12], "create_feature_transform": [11, 12], "desc_type_col": [11, 12], "desc_type_sc": [11, 12], "desc_type_sourc": [11, 12], "extract_prefeaturized_data": [11, 12], "get_feature_column": [11, 12], "get_feature_count": [11, 12], "get_feature_specific_metadata": [11, 12], "get_featurized_data_subdir": [11, 12], "load_descriptor_spec": [11, 12], "load_descriptor_t": [11, 12], "supported_descriptor_typ": [11, 12], "dynamicfeatur": [11, 12], "embeddingfeatur": [11, 12], "persistentfeatur": [11, 12], "compute_2d_mordred_descr": [11, 12], "compute_all_moe_descriptor": [11, 12], "compute_all_mordred_descr": [11, 12], "compute_all_rdkit_descr": [11, 12], "compute_mordred_descriptors_from_smil": [11, 12], "compute_rdkit_descriptors_from_smil": [11, 12], "create_featur": [11, 12], "featurize_smil": [11, 12], "get_2d_mol": [11, 12], "get_3d_mol": [11, 12], "get_dataset_attribut": [11, 12], "get_mordred_calcul": [11, 12], "get_rdkit_calcul": [11, 12], "get_user_specified_featur": [11, 12], "make_weight": [11, 12], "remove_duplicate_smil": [11, 12], "feature_import": 11, "base_feature_import": [11, 12], "cluster_permutation_import": [11, 12], "display_feature_clust": [11, 12], "permutation_feature_import": [11, 12], "plot_feature_import": [11, 12], "datastoredataset": [11, 12], "get_dataset_task": [11, 12], "load_dataset_split_t": [11, 12], "load_featurized_data": [11, 12], "load_full_dataset": [11, 12], "save_featurized_data": [11, 12], "save_split_dataset": [11, 12], "filedataset": [11, 12], "minimaldataset": [11, 12], "get_featurized_data": [11, 12], "modeldataset": [11, 12], "combined_training_data": [11, 12], "create_dataset_split_t": [11, 12], "get_split_metadata": [11, 12], "get_subset_responses_and_weight": [11, 12], "has_all_feature_column": [11, 12], "load_presplit_dataset": [11, 12], "split_dataset": [11, 12], "check_task_column": [11, 12], "create_minimal_dataset": [11, 12], "create_model_dataset": [11, 12], "create_split_dataset_from_metadata": [11, 12], "key_value_list_to_dict": [11, 12], "save_joined_dataset": [11, 12], "set_group_permiss": [11, 12, 13], "modelpipelin": [11, 12], "calc_train_dset_pair_di": [11, 12], "create_model_metadata": [11, 12], "create_prediction_metadata": [11, 12], "get_metr": [11, 12], "load_featurize_data": [11, 12], "predict_embed": [11, 12], "predict_full_dataset": [11, 12], "predict_on_datafram": [11, 12], "predict_on_smil": [11, 12], "run_predict": [11, 12], "save_metr": [11, 12], "save_model_metadata": [11, 12], "train_model": [11, 12, 13], "build_dataset_nam": [11, 12], "build_tarball_nam": [11, 12], "calc_ad_kmean_dist": [11, 12], "calc_ad_kmean_local_dens": [11, 12], "create_prediction_pipelin": [11, 12], "create_prediction_pipeline_from_fil": [11, 12], "ensemble_predict": [11, 12], "load_from_track": [11, 12], "main": [11, 12, 13], "regenerate_result": [11, 12], "retrain_model": [11, 12], "run_model": [11, 12], "datastoreinsertionexcept": [11, 12], "mlmtclientinstantiationexcept": [11, 12], "convert_metadata": [11, 12], "export_model": [11, 12], "extract_datastore_model_tarbal": [11, 12], "get_full_metadata": [11, 12], "get_full_metadata_by_uuid": [11, 12], "get_metadata_by_uuid": [11, 12], "get_model_collection_by_uuid": [11, 12], "get_model_training_data_by_uuid": [11, 12], "save_model": [11, 12], "save_model_tarbal": [11, 12], "dcrfmodelwrapp": [11, 12], "generate_predict": [11, 12], "get_model_specific_metadata": [11, 12], "make_dc_model": [11, 12], "dcxgboostmodelwrapp": [11, 12], "get_perf_data": [11, 12], "get_pred_result": [11, 12], "reload_model": [11, 12], "forestmodelwrapp": [11, 12], "graphconvdcmodelwrapp": [11, 12], "generate_embed": [11, 12], "recreate_model": [11, 12], "hybridmodelwrapp": [11, 12], "subsetdata": [11, 12], "kerasdeepchemmodelwrapp": [11, 12], "count_param": [11, 12], "restor": [11, 12], "lctimeriter": [11, 12], "lctimerkfolditer": [11, 12], "modelwrapp": [11, 12], "create_transform": [11, 12], "get_full_dataset_perf_data": [11, 12], "get_full_dataset_pred_result": [11, 12], "get_num_featur": [11, 12], "get_test_perf_data": [11, 12], "get_test_pred_result": [11, 12], "get_train_valid_pred_result": [11, 12], "model_sav": [11, 12], "reload_transform": [11, 12], "setup_model_dir": [11, 12], "transform_dataset": [11, 12], "multitaskdcmodelwrapp": [11, 12], "nnmodelwrapp": [11, 12], "train_kfold_cv": [11, 12], "train_with_early_stop": [11, 12], "pytorchdeepchemmodelwrapp": [11, 12], "all_bas": [11, 12], "create_model_wrapp": [11, 12], "dc_restor": [11, 12], "dc_torch_restor": [11, 12], "get_latest_pytorch_checkpoint": [11, 12], "autoargumentadd": [11, 12], "add_to_pars": [11, 12], "all_prefixed_nam": [11, 12], "extract_param": [11, 12], "get_list_arg": [11, 12], "get_list_float_arg": [11, 12], "get_list_int_arg": [11, 12], "all_auto_argu": [11, 12], "all_auto_float_list": [11, 12], "all_auto_int_list": [11, 12], "all_auto_list": [11, 12], "dict_to_list": [11, 12], "extract_featurizer_param": [11, 12], "extract_model_param": [11, 12], "flatten_dict": [11, 12], "get_pars": [11, 12], "is_list": [11, 12], "is_list_float": [11, 12], "is_list_int": [11, 12], "is_primative_typ": [11, 12], "list_default": [11, 12], "make_dataset_key_absolut": [11, 12], "parse_command_lin": [11, 12], "parse_config_fil": [11, 12], "parse_namespac": [11, 12], "postprocess_arg": [11, 12], "primative_type_onli": [11, 12], "prune_default": [11, 12], "remove_unrecognized_argu": [11, 12], "to_str": [11, 12], "wrapper": [11, 12, 13], "classificationperfdata": [11, 12], "accumulate_pr": [11, 12], "get_pred_valu": [11, 12], "get_prediction_result": [11, 12], "model_choice_scor": [11, 12], "epochmanag": [11, 12], "accumul": [11, 12], "comput": [11, 12, 13], "on_new_best_valid": [11, 12], "set_make_pr": [11, 12], "should_stop": [11, 12], "updat": [11, 12, 13], "update_epoch": [11, 12], "update_valid": [11, 12], "epochmanagerkfold": [11, 12], "hybridperfdata": [11, 12], "compute_perf_metr": [11, 12], "kfoldclassificationperfdata": [11, 12], "get_real_valu": [11, 12], "get_weight": [11, 12], "kfoldregressionperfdata": [11, 12], "perfdata": [11, 12], "regressionperfdata": [11, 12], "simpleclassificationperfdata": [11, 12], "simplehybridperfdata": [11, 12], "simpleregressionperfdata": [11, 12], "create_perf_data": [11, 12], "negative_predictive_valu": [11, 12], "rms_error": [11, 12], "plot_roc_curv": [11, 12], "plot_perf_vs_epoch": [11, 12], "plot_prec_recall_curv": [11, 12], "plot_pred_vs_actu": [11, 12], "plot_umap_feature_project": [11, 12], "plot_umap_train_set_neighbor": [11, 12], "datasetmanag": [11, 12], "compact_dataset": [11, 12], "expand_select": [11, 12], "kfoldsplit": [11, 12], "get_split_prefix": [11, 12], "needs_smil": [11, 12], "trainvalidtestsplit": [11, 12], "check_if_dupe_smiles_dataset": [11, 12], "create_split": [11, 12], "select_attrs_by_dset_id": [11, 12], "select_attrs_by_dset_smil": [11, 12], "select_dset_by_attr_id": [11, 12], "select_dset_by_id_list": [11, 12], "normalizationtransformerhybrid": [11, 12], "transform_arrai": [11, 12], "untransform": [11, 12], "normalizationtransformermissingdata": [11, 12], "umaptransform": [11, 12], "create_weight_transform": [11, 12], "get_statistics_missing_ydata": [11, 12], "get_transformer_specific_metadata": [11, 12], "transformers_need": [11, 12], "content": 11, "checksum_util": 11, "create_checksum": [11, 13], "get_dataset_hash_from_tar": [11, 13], "uses_same_training_data_by_dataset": [11, 13], "uses_same_training_data_by_tarbal": [11, 13], "compare_split_csv": 11, "compare_split_fil": [11, 13], "compare_split": [11, 13], "parse_arg": [11, 13], "compare_splits_plot": 11, "splitstat": [11, 13], "dist_hist_plot": [11, 13], "make_all_plot": [11, 13], "print_stat": [11, 13], "subset_frac_plot": [11, 13], "umap_plot": [11, 13], "save_figur": [11, 13], "add_classification_column": [11, 13], "aggregate_assay_data": [11, 13], "average_and_remove_dupl": [11, 13], "create_new_rows_for_extra_result": [11, 13], "filter_in_by_column_valu": [11, 13], "filter_in_out_by_column_valu": [11, 13], "filter_out_by_column_valu": [11, 13], "filter_out_com": [11, 13], "freq_tabl": [11, 13], "get_rdkit_smiles_par": [11, 13], "labeled_freq_t": [11, 13], "mle_censored_mean": [11, 13], "remove_outlier_repl": [11, 13], "replicate_rmsd": [11, 13], "summarize_data": [11, 13], "xc50topxc50_for_nm": [11, 13], "atom_cur": [11, 13], "atom_curation_excap": [11, 13], "down_select": [11, 13], "exclude_organometal": [11, 13], "filter_dtc_data": [11, 13], "get_smiles_4dtc_data": [11, 13], "get_smiles_dtc_data": [11, 13], "get_smiles_excape_data": [11, 13], "ic50topic50": [11, 13], "is_organometal": [11, 13], "set_data_root": [11, 13], "standardize_rel": [11, 13], "upload_df_dtc_base_smiles_al": [11, 13], "upload_df_dtc_mleqonli": [11, 13], "upload_df_dtc_mleqonly_class": [11, 13], "upload_df_dtc_smil": [11, 13], "upload_df_dtc_smiles_regr_all_class": [11, 13], "upload_df_excape_mleqonli": [11, 13], "upload_df_excape_mleqonly_class": [11, 13], "upload_df_excape_smil": [11, 13], "upload_file_dtc_raw_data": [11, 13], "upload_file_dtc_smiles_regr_al": [11, 13], "upload_file_excape_raw_data": [11, 13], "bulk_export_kv_for_fil": [11, 13], "bulk_update_kv": [11, 13], "check_key_v": [11, 13], "config_cli": [11, 13], "copy_datasets_to_bucket": [11, 13], "dataset_key_exist": [11, 13], "filter_datasets_interact": [11, 13], "get_key_v": [11, 13], "get_keyv": [11, 13], "initialize_model_track": [11, 13], "key_exist": [11, 13], "list_key_valu": [11, 13], "repeat_defined_search": [11, 13], "retrieve_bucket_nam": [11, 13], "retrieve_columns_from_dataset": [11, 13], "retrieve_dataset_by_dataset_oid": [11, 13], "retrieve_dataset_by_datasetkei": [11, 13], "retrieve_kei": [11, 13], "retrieve_values_for_kei": [11, 13], "search_datasets_by_key_valu": [11, 13], "search_files_interact": [11, 13], "string_to_dict": [11, 13], "string_to_list": [11, 13], "summarize_dataset": [11, 13], "update_distribution_kv": [11, 13], "update_kv": [11, 13], "upload_df_to_d": [11, 13], "upload_file_to_d": [11, 13], "upload_pickle_to_d": [11, 13], "file_util": 11, "is_within_directori": [11, 13], "safe_extract": [11, 13], "union": [11, 12, 13], "aggregate_basesmil": [11, 13], "genunionset": [11, 13], "generatetestset": [11, 13], "intersect": [11, 13], "geometricsearch": [11, 13], "generate_assay_list": [11, 13], "generate_combo": [11, 13], "generate_param_combo": [11, 13], "split_and_save_dataset": [11, 13], "gridsearch": [11, 13], "hyperoptsearch": [11, 13], "run_search": [11, 13], "hyperparametersearch": [11, 13], "already_run": [11, 13], "assemble_lay": [11, 13], "build_job": [11, 13], "filter_job": [11, 13], "generate_maestro_command": [11, 13], "generate_search": [11, 13], "generate_split_shortlist": [11, 13], "generate_split_shortlist_fil": [11, 13], "get_dataset_metadata": [11, 13], "get_shortlist_df": [11, 13], "return_split_uuid": [11, 13], "return_split_uuid_fil": [11, 13], "submit_job": [11, 13], "randomsearch": [11, 13], "userspecifiedsearch": [11, 13], "build_hyperopt_search_domain": [11, 13], "build_search": [11, 13], "gen_maestro_command": [11, 13], "get_num_param": [11, 13], "parse_param": [11, 13], "permutate_nnlayer_combo_param": [11, 13], "reformat_filter_dict": [11, 13], "run_cmd": [11, 13], "run_command": [11, 13], "get_command_output": [11, 13], "get_my_usernam": [11, 13], "is_lc_system": [11, 13], "throttle_job": [11, 13], "many_to_on": 11, "manytooneexcept": [11, 13], "nancompoundidexcept": [11, 13], "nansmilesexcept": [11, 13], "has_nan": [11, 13], "many_to_one_df": [11, 13], "no_nan_ids_or_smil": [11, 13], "train_model_from_tar": [11, 13], "train_model_from_track": [11, 13], "train_models_from_dataset_kei": [11, 13], "model_version_util": 11, "check_version_compat": [11, 13], "get_ampl_vers": [11, 13], "get_ampl_version_from_dir": [11, 13], "get_ampl_version_from_json": [11, 13], "get_ampl_version_from_model": [11, 13], "get_major_vers": [11, 13], "validate_vers": [11, 13], "get_tim": [11, 13], "move_failed_slurm": [11, 13], "rerun_fail": [11, 13], "download_sid_from_bioactivity_assai": [11, 13], "download_activitytyp": [11, 13], "download_bioactivity_assai": [11, 13], "download_dose_response_from_bioact": [11, 13], "download_smil": [11, 13], "add_mol_column": [11, 13], "calculate_descriptor": [11, 13], "cluster_datafram": [11, 13], "cluster_fingerprint": [11, 13], "matching_atoms_and_bond": [11, 13], "mol_to_html": [11, 13], "mol_to_pil": [11, 13], "mol_to_svg": [11, 13], "save_png": [11, 13], "save_svg": [11, 13], "setup_notebook": [11, 13], "show_df": [11, 13], "show_html": [11, 13], "base_mol_from_inchi": [11, 13], "base_mol_from_smil": [11, 13], "base_smiles_from_inchi": [11, 13], "base_smiles_from_smil": [11, 13], "draw_structur": [11, 13], "fix_moe_smil": [11, 13], "get_rdkit_smil": [11, 13], "kekulize_smil": [11, 13], "mol_wt_from_smil": [11, 13], "mols_from_smil": [11, 13], "rdkit_smiles_from_smil": [11, 13], "smiles_to_inchi_kei": [11, 13], "code": [12, 13], "wai": [12, 13], "minim": 12, "av": 12, "bia": 12, "describ": [12, 13], "paper": 12, "wallach": 12, "heifet": 12, "although": 12, "class": [12, 13], "its": [12, 13], "method": [12, 13], "typic": [12, 13], "call": [12, 13], "them": [12, 13], "instead": [12, 13], "thei": [12, 13], "invok": 12, "splitter": [12, 13], "ave_min": 12, "metric": 12, "jaccard": 12, "verbos": [12, 13], "true": [12, 13], "num_work": 12, "1": [12, 13], "max_it": 12, "300": 12, "ndist": 12, "100": [12, 13], "debug_mod": 12, "fals": [12, 13], "order": [12, 13], "asymmetr": 12, "valid": [12, 13], "embed": [12, 13], "distanc": [12, 13], "between": [12, 13], "vector": [12, 13], "binari": [12, 13], "classif": [12, 13], "candid": 12, "find": [12, 13], "attribut": 12, "str": [12, 13], "bool": [12, 13], "ignor": [12, 13], "int": [12, 13], "thread": [12, 13], "parallel": [12, 13], "maximmum": 12, "iter": [12, 13], "execut": 12, "try": [12, 13], "point": [12, 13], "approxim": 12, "cdf": 12, "distribut": [12, 13], "extra": [12, 13], "plot": [12, 13], "log": [12, 13], "messag": [12, 13], "debug": 12, "frac_train": 12, "8": [12, 13], "frac_valid": 12, "2": [12, 13], "frac_test": 12, "seed": [12, 13], "none": [12, 13], "log_every_n": 12, "twice": 12, "arg": [12, 13], "dc": 12, "float": [12, 13], "fraction": [12, 13], "put": [12, 13], "onli": [12, 13], "compat": [12, 13], "api": [12, 13], "tupl": [12, 13], "indic": [12, 13], "assign": [12, 13], "third": 12, "element": [12, 13], "empti": [12, 13], "becaus": 12, "todo": 12, "one": [12, 13], "rather": [12, 13], "than": [12, 13], "matric": 12, "param": [12, 13], "id_col": [12, 13], "compound_id": [12, 13], "smiles_col": [12, 13], "rdkit_smil": [12, 13], "active_col": 12, "evalu": [12, 13], "given": [12, 13], "show": [12, 13], "frequenc": [12, 13], "subset": [12, 13], "whole": [12, 13], "default": [12, 13], "case": [12, 13], "aren": 12, "metadata": [12, 13], "valu": [12, 13], "argpars": [12, 13], "namespac": [12, 13], "column": [12, 13], "id": [12, 13], "smile": [12, 13], "string": [12, 13], "panda": [12, 13], "datafram": [12, 13], "tabl": [12, 13], "size": [12, 13], "x": [12, 13], "randomli": 12, "sequenc": [12, 13], "multi": 12, "dimension": 12, "along": [12, 13], "first": [12, 13], "should": [12, 13], "default_rng": 12, "instanc": 12, "pleas": 12, "quick": 12, "array_lik": 12, "integ": [12, 13], "np": 12, "arang": 12, "out": [12, 13], "ndarrai": 12, "which": [12, 13], "10": [12, 13], "4": [12, 13], "9": [12, 13], "5": [12, 13], "6": [12, 13], "12": 12, "15": [12, 13], "arr": 12, "reshap": 12, "modifi": [12, 13], "axi": 12, "sub": [12, 13], "remain": [12, 13], "same": [12, 13], "mutablesequ": 12, "mutabl": 12, "feat_typ": 12, "dist_met": 12, "dataset1": 12, "dataset2": 12, "calc_typ": 12, "nearest": 12, "num_nearest": 12, "metric_kwarg": 12, "either": [12, 13], "singl": [12, 13], "two": [12, 13], "wa": [12, 13], "current": [12, 13], "ecfp": 12, "what": [12, 13], "cosin": 12, "cityblock": 12, "euclidean": 12, "scipi": 12, "spatial": 12, "pdist": 12, "compar": [12, 13], "second": [12, 13], "type": [12, 13], "summar": [12, 13], "row": [12, 13], "matrix": 12, "nth_nearest": 12, "avg_n_nearest": 12, "argument": [12, 13], "pass": [12, 13], "calcul": [12, 13], "feat1": 12, "feat2": 12, "numpi": 12, "dist": [12, 13], "smiles_arr1": 12, "smiles_arr2": 12, "pair": [12, 13], "member": [12, 13], "comparison": 12, "fix": [12, 13], "_get_descriptor": 12, "re": [12, 13], "Will": [12, 13], "add": [12, 13], "kind": 12, "dist_arr": 12, "within_dset": 12, "summari": [12, 13], "2d": [12, 13], "1d": 12, "condens": 12, "flatten": 12, "upper": 12, "triangl": 12, "itself": 12, "neighbor": [12, 13], "except": [12, 13], "th": 12, "averag": [12, 13], "farthest": 12, "avg": 12, "input": [12, 13], "For": [12, 13], "otherwis": [12, 13], "dist_matrix": 12, "feature_typ": 12, "bucket": [12, 13], "titl": [12, 13], "tag": [12, 13], "key_valu": [12, 13], "filepath": [12, 13], "dataset_kei": [12, 13], "upload": [12, 13], "store": [12, 13], "correspond": [12, 13], "assum": [12, 13], "squar": [12, 13], "human": [12, 13], "friendli": [12, 13], "format": [12, 13], "long": [12, 13], "text": [12, 13], "box": [12, 13], "background": [12, 13], "note": [12, 13], "datastor": [12, 13], "dict": [12, 13], "dictionari": [12, 13], "path": [12, 13], "where": [12, 13], "pickl": [12, 13], "alreadi": [12, 13], "enter": [12, 13], "leav": [12, 13], "most": [12, 13], "reli": 12, "tracker": [12, 13], "servic": [12, 13], "part": [12, 13], "standard": [12, 13], "result_dir": [12, 13], "dest_dir": 12, "pred_typ": [12, 13], "force_upd": [12, 13], "identifi": [12, 13], "best": [12, 13], "result": [12, 13], "tree": [12, 13], "e": [12, 13], "g": [12, 13], "hyperparamet": [12, 13], "search": [12, 13], "associ": [12, 13], "tarbal": [12, 13], "destin": 12, "wherr": 12, "regress": [12, 13], "overwrit": [12, 13], "exist": [12, 13], "pd": [12, 13], "ignored_param": 12, "delet": [12, 13], "ignored_paramet": 12, "potenti": 12, "collection_nam": 12, "output_dir": [12, 13], "obtain": [12, 13], "csv": [12, 13], "output": [12, 13], "queri": [12, 13], "metadata_dict": 12, "config": [12, 13], "extract": [12, 13], "featuer": 12, "look": [12, 13], "_specif": 12, "nn_specif": 12, "auto_featurizer_specif": 12, "model_metadict": 12, "non": [12, 13], "max_epoch": 12, "best_epoch": 12, "learning_r": [12, 13], "layer_s": [12, 13], "drop_out": 12, "rf_estim": [12, 13], "rf_max_featur": [12, 13], "rf_max_depth": [12, 13], "xgb_gamma": 12, "xgb_learning_r": 12, "featurizer_parameters_dict": 12, "model_parameters_dict": 12, "col_nam": 12, "pk_pipelin": 12, "usr": [12, 13], "shortlist_kei": 12, "input_dset_kei": 12, "save_result": 12, "metric_typ": 12, "selection_typ": 12, "max": [12, 13], "other_filt": 12, "tabul": [12, 13], "accord": [12, 13], "against": [12, 13], "specifi": [12, 13], "we": [12, 13], "being": [12, 13], "pk": 12, "write": [12, 13], "must": [12, 13], "select": [12, 13], "r2_score": 12, "roc_auc_scor": 12, "etc": [12, 13], "score": 12, "criterion": 12, "min": [12, 13], "criteria": [12, 13], "top_models_df": 12, "model_uuid": [12, 13], "pk_pipe": 12, "mai": [12, 13], "db": [12, 13], "origin": [12, 13], "uuid": [12, 13], "model_info": 12, "uniqu": [12, 13], "filter_dict": [12, 13], "under": [12, 13], "map": [12, 13], "filter": [12, 13], "perf_result": 12, "tarball_path": 12, "retriev": [12, 13], "field": 12, "multitask": 12, "per": [12, 13], "combin": [12, 13], "response_col": [12, 13], "expand_respons": 12, "expand_subset": 12, "exhaust": 12, "meant": [12, 13], "nn": [12, 13], "well": [12, 13], "By": [12, 13], "akp": 12, "2020": [12, 13], "respons": [12, 13], "check": [12, 13], "col": [12, 13], "comma": [12, 13], "separ": [12, 13], "ask": 12, "clarif": 12, "recommend": [12, 13], "clarifi": 12, "final": [12, 13], "lot": 12, "expand": 12, "again": 12, "minu": 12, "trim": 12, "length": 12, "prediction_typ": 12, "assai": [12, 13], "target": [12, 13], "total": 12, "fold": [12, 13], "rf": [12, 13], "mae_scor": 12, "rms_score": 12, "roc": 12, "auc": 12, "print": [12, 13], "statu": 12, "model_tarbal": 12, "tar": [12, 13], "gz": [12, 13], "were": [12, 13], "particular": 12, "vari": 12, "umap": [12, 13], "tar_path": 12, "trainabl": 12, "paramt": [12, 13], "tarfil": [12, 13], "rais": [12, 13], "valueerror": 12, "neural": [12, 13], "network": 12, "maximum": [12, 13], "common": [12, 13], "substructur": [12, 13], "mols1": 12, "mols2": 12, "molecul": [12, 13], "m1": 12, "m2": 12, "fmc": 12, "largest": [12, 13], "mol": [12, 13], "pairwis": [12, 13], "fps1": 12, "fps2": 12, "fingerprint": [12, 13], "fp": [12, 13], "routin": 12, "divers": 12, "dset_kei": 12, "title_prefix": 12, "ecfp_radiu": 12, "umap_fil": 12, "out_dir": 12, "is_base_smil": 12, "max_for_mc": 12, "arbitrari": 12, "At": 12, "minimum": [12, 13], "produc": [12, 13], "heatmap": 12, "displai": [12, 13], "project": 12, "color": 12, "variabl": [12, 13], "whether": [12, 13], "prefix": 12, "radiu": 12, "coordin": 12, "pdf": 12, "salt": [12, 13], "strip": [12, 13], "less": [12, 13], "task_nam": 12, "densiti": 12, "abbrevi": 12, "df": [12, 13], "df_name": 12, "subset_col": 12, "ref_subset": 12, "plot_width": 12, "ndist_max": 12, "frame": [12, 13], "mean": [12, 13], "ecfp4": 12, "width": [12, 13], "inch": 12, "Not": [12, 13], "backward": [12, 13], "individu": 12, "belong": [12, 13], "differ": [12, 13], "entiti": 12, "count": [12, 13], "estat": 12, "sli": 12, "atomtypeest": 12, "restrict": [12, 13], "those": [12, 13], "sch3": 12, "dch2": 12, "ssch2": 12, "dsch": 12, "aach": 12, "sssch": 12, "tsc": 12, "dssc": 12, "aasc": 12, "aaac": 12, "ssssc": 12, "snh2": 12, "ssnh": 12, "aanh": 12, "tn": 12, "dsn": 12, "aan": 12, "sssn": 12, "ddsn": 12, "aasn": 12, "soh": 12, "sso": 12, "aao": 12, "sf": 12, "d": 12, "sss": 12, "aa": 12, "ddsss": 12, "scl": 12, "sbr": 12, "classmethod": 12, "version": [12, 13], "valence1": 12, "valence2": 12, "c": 12, "moleculardistanceedg": 12, "subclass": 12, "onlin": 12, "usual": 12, "cach": 12, "precomput": 12, "speed": 12, "up": [12, 13], "access": [12, 13], "persist": 12, "__init_": 12, "super": 12, "__init__": 12, "descriptor_typ": 12, "descriptor_kei": 12, "descriptor_bas": 12, "precomp_descr_t": 12, "initi": 12, "overridden": 12, "smiles_df": [12, 13], "ret_df": 12, "moe": [12, 13], "smiles_str": [12, 13], "desc_df": 12, "is_valid": 12, "dset_df": [12, 13], "contains_respons": 12, "match": [12, 13], "pars": [12, 13], "val": 12, "attr": 12, "weight": [12, 13], "featurized_dset_df": 12, "fail": [12, 13], "side": [12, 13], "effect": [12, 13], "self": [12, 13], "dataset_nam": 12, "filenam": [12, 13], "inform": [12, 13], "deriv": [12, 13], "feautur": 12, "descr_typ": 12, "scale": 12, "divid": [12, 13], "expect": 12, "scaled_df": 12, "merg": [12, 13], "all_desc_col": 12, "center": 12, "hold": [12, 13], "attempt": [12, 13], "prefeatur": 12, "feautirz": 12, "subdirectori": [12, 13], "without": [12, 13], "lead": 12, "goe": 12, "scaled_descriptor": 12, "desc_spec_bucket": 12, "desc_spec_kei": 12, "read": [12, 13], "program": 12, "semicolon": 12, "spec": 12, "locat": [12, 13], "cl": 12, "decriptor": 12, "boolean": [12, 13], "datastore_kei": 12, "descriptor_bucket": 12, "possibl": 12, "least": [12, 13], "record": [12, 13], "twintron": [12, 13], "blue": [12, 13], "taken": 12, "lc_path": 12, "desc_id_col": 12, "desc_smiles_col": 12, "reason": 12, "fly": 12, "inexpens": 12, "handl": 12, "through": [12, 13], "graphconv": 12, "molva": 12, "featurization_obj": 12, "moleculevaefeatur": 12, "determin": [12, 13], "sinc": 12, "dynam": 12, "don": [12, 13], "so": [12, 13], "alwai": 12, "essenti": 12, "meaningless": 12, "c0": 12, "c1": 12, "subdict": 12, "ecfp_specif": 12, "autoencoder_specif": 12, "pretrain": 12, "consist": 12, "layer": [12, 13], "underli": [12, 13], "implement": [12, 13], "embedding_specif": 12, "abstract": 12, "notimplementederror": 12, "concret": 12, "instanti": 12, "storag": 12, "cpu": 12, "memori": 12, "intens": 12, "plan": 12, "umapdescriptorfeatur": 12, "res_df": 12, "317": 12, "compund": 12, "descr_df": 12, "wash": 12, "prepar": 12, "max_cpu": 12, "quiet": 12, "3d": 12, "ones": [12, 13], "core": 12, "avoid": 12, "progress": 12, "mol_df": 12, "mol_col": 12, "suppress": 12, "while": [12, 13], "togeth": [12, 13], "consid": [12, 13], "factori": 12, "correct": [12, 13], "computed_descriptor": 12, "1000": 12, "featurize_smiles_df": 12, "buggi": 12, "yield": 12, "convert": [12, 13], "explicit": 12, "hydrogen": [12, 13], "construct": 12, "possibli": 12, "date": [12, 13], "respect": [12, 13], "date_col": [12, 13], "datetim": 12, "attr_df": 12, "exclud": [12, 13], "ignore_3d": 12, "regist": 12, "whose": [12, 13], "structur": [12, 13], "calc": 12, "desc_list": 12, "temp": [12, 13], "issu": 12, "1841": 12, "sampl": [12, 13], "label": [12, 13], "nan": [12, 13], "w": 12, "shape": [12, 13], "j": [12, 13], "els": [12, 13], "duplic": [12, 13], "filtered_dset_df": 12, "assess": 12, "baselin": 12, "classifi": 12, "statist": [12, 13], "inact": [12, 13], "decreas": 12, "impur": 12, "mdi": 12, "scikit": 12, "feature_importances_": 12, "document": [12, 13], "warn": [12, 13], "about": [12, 13], "interpret": 12, "deviat": [12, 13], "session": 12, "analyz": 12, "imp_df": 12, "pparam": 12, "score_typ": 12, "clust_height": 12, "result_fil": 12, "nrep": 12, "nworker": 12, "correl": 12, "over": [12, 13], "measur": [12, 13], "height": [12, 13], "cut": 12, "dendrogram": 12, "branch": 12, "repetit": 12, "rescor": 12, "procedur": 12, "better": 12, "estim": [12, 13], "cost": 12, "greater": 12, "worker": [12, 13], "multithread": 12, "ad": [12, 13], "futur": [12, 13], "corr_fil": 12, "show_matrix": 12, "show_dendro": 12, "spearman": 12, "similar": [12, 13], "user": [12, 13], "decid": [12, 13], "draw": [12, 13], "corr_linkag": 12, "linkag": 12, "60": [12, 13], "success": 12, "scrambl": 12, "sklearn": 12, "get_scor": 12, "npv": 12, "mcc": 12, "kappa": 12, "mae": 12, "rmse": 12, "ppv": 12, "cross_entropi": 12, "bal_accuraci": 12, "avg_precis": 12, "smaller": [12, 13], "neg": [12, 13], "counterpart": 12, "importance_col": 12, "valid_perm_importance_mean": 12, "max_feat": 12, "20": 12, "ascend": 12, "horizont": 12, "bar": 12, "rel": [12, 13], "someth": 12, "small": 12, "deal": 12, "ds_client": [12, 13], "repres": [12, 13], "live": [12, 13], "logger": 12, "output_dit": 12, "split_strategi": 12, "flag": 12, "strategi": 12, "train_test_valid": 12, "k": [12, 13], "intiail": 12, "combined_train_valid_data": 12, "client": [12, 13], "n_featur": 12, "train_valid_dset": 12, "test_dset": 12, "held": 12, "train_valid_attr": 12, "test_attr": 12, "defin": 12, "guess": 12, "split_df": [12, 13], "split_kv": 12, "futher": 12, "error": [12, 13], "sucess": 12, "suppli": 12, "feather": 12, "lightweight": 12, "therefor": [12, 13], "ground": 12, "truth": 12, "unknown": 12, "is_featur": 12, "noth": [12, 13], "special": [12, 13], "combined_dataset": 12, "reconstruct": [12, 13], "cmpd_id": [12, 13], "train_valid": 12, "rotat": 12, "zero": 12, "whatev": 12, "previously_featur": 12, "raw": [12, 13], "relat": [12, 13], "reproduc": 12, "cv": 12, "response_dict": 12, "weight_dict": 12, "miss": [12, 13], "successfulli": 12, "catch": 12, "tradit": 12, "cross": 12, "disjoint": 12, "overlap": 12, "suitabl": 12, "model_metadata": [12, 13], "save_fil": 12, "join": 12, "info": [12, 13], "disk": [12, 13], "kvp_list": 12, "proper": 12, "kvp": 12, "reformat": [12, 13], "joined_dataset": 12, "split_metadata": 12, "deprec": 12, "absolut": [12, 13], "longer": 12, "data_own": 12, "data_owner_group": 12, "group": [12, 13], "permiss": [12, 13], "proprietari": [12, 13], "ownership": [12, 13], "moment": 12, "lc": [12, 13], "who": [12, 13], "compani": [12, 13], "gsk": [12, 13], "usernam": [12, 13], "hard": 12, "varieti": 12, "mlmt_client": [12, 13], "run_mod": 12, "mode": 12, "eg": 12, "ac": 12, "datastorecli": 12, "interact": [12, 13], "perf_dict": 12, "parent": [12, 13], "mlmt": 12, "featurzi": 12, "featurizatioin": 12, "objct": 12, "zoo": 12, "everyth": 12, "recreat": 12, "prediction_result": 12, "isn": [12, 13], "training_metr": 12, "prediction_metadata": 12, "previou": 12, "diskdataset": 12, "dset_param": 12, "ad_method": 12, "max_train_records_for_ad": 12, "facilit": 12, "probabl": 12, "applic": [12, 13], "domain": [12, 13], "z_score": 12, "local_dens": 12, "With": 12, "manhattan": 12, "equival": 12, "choic": [12, 13], "oper": [12, 13], "continu": 12, "larger": 12, "result_df": [12, 13], "uncertainti": 12, "_std": 12, "abl": 12, "containt": 12, "switch": 12, "disabl": 12, "previous": [12, 13], "wrappr": 12, "model_metr": 12, "retri": 12, "sleep_sec": 12, "databas": [12, 13], "_model_metr": 12, "sleep": 12, "insert": [12, 13], "gzip": 12, "archiv": [12, 13], "checkpoint": 12, "actual": 12, "split_uuid": [12, 13], "train_dset": 12, "pred_dset": 12, "train_dset_pair_dist": 12, "fall": [12, 13], "trane": 12, "neighbour": 12, "pred": 12, "betweenth": 12, "unseen": 12, "ratio": 12, "far": [12, 13], "alt_bucket": 12, "crada": 12, "blind": 12, "known": 12, "fill": [12, 13], "altern": [12, 13], "reload_dir": 12, "model_path": 12, "model_typ": [12, 13], "best_model": 12, "cdsw": 12, "pxc50_nn_graphconv_scaffold_regress": 12, "unpack": 12, "temporari": 12, "state": 12, "mt_client": 12, "aggreg": [12, 13], "seri": [12, 13], "suffix": 12, "pred_": 12, "pred_df": 12, "plu": [12, 13], "ensembl": 12, "higher": 12, "level": 12, "predict_from_tracker_model": 12, "request": [12, 13], "entri": [12, 13], "shared_featur": 12, "model_filt": 12, "across": [12, 13], "ensur": [12, 13], "result_dict": 12, "exactli": 12, "analys": 12, "done": 12, "just": [12, 13], "interfac": [12, 13], "old_metadata": 12, "old": [12, 13], "camel": 12, "new_metadata": 12, "model_dir": 12, "export": [12, 13], "subsequ": 12, "pack": 12, "model_bucket": 12, "style": 12, "extract_dir": 12, "mongoqueryexcept": 12, "datafra": 12, "containint": 12, "mongo": 12, "use_personal_cli": 12, "person": 12, "mongoinsertionexcept": 12, "model_tarball_path": 12, "portabl": 12, "outsid": 12, "transformers_x": 12, "best_model_dir": 12, "sklearn_model": 12, "sklearnmodel": 12, "train_perf_data": 12, "valid_perf_data": 12, "train_perf": 12, "valid_perf": 12, "std": 12, "model_spec_metadata": 12, "rf_specif": 12, "wrap": 12, "transformers_w": 12, "perfobject": 12, "xgboost": 12, "xgb_specif": 12, "epoch_label": 12, "kept": 12, "accordingli": 12, "modelmetr": 12, "reset": 12, "tensorflow": 12, "sess": 12, "tensor": 12, "flow": 12, "graphconvmodel": 12, "multitaskregressor": 12, "multitaskclassifi": 12, "keep": 12, "track": 12, "epoch": 12, "train_epoch_perf": 12, "valid_epoch_perf": 12, "node": [12, 13], "model_spec_metdata": 12, "subdictionari": 12, "hybrid": 12, "pytorch": 12, "sequenti": 12, "dl": 12, "n_ki": 12, "n_bind": 12, "dataload": 12, "ncmpd": 12, "ntask": 12, "nclass": 12, "hybrid_specif": 12, "net": 12, "checkpoint_fil": 12, "opt": 12, "model_dict": 12, "multipl": [12, 13], "choos": 12, "refit": 12, "kera": 12, "limit": [12, 13], "exce": 12, "kfold": 12, "later": [12, 13], "condit": 12, "met": [12, 13], "transformer_kei": 12, "dimens": 12, "space": [12, 13], "account": [12, 13], "inconsist": 12, "save_checkpoint": 12, "workaround": 12, "v1": [12, 13], "transformed_dataset": 12, "fulli": [12, 13], "connect": [12, 13], "reduc": [12, 13], "roc_auc": 12, "model_choice_score_typ": 12, "improv": 12, "threshold": [12, 13], "percentag": 12, "patienc": 12, "stop": 12, "revert": 12, "last": [12, 13], "best_validation_scor": 12, "attain": 12, "dure": [12, 13], "attentivefp": 12, "xiong": 12, "It": [12, 13], "attent": 12, "propag": 12, "bond": [12, 13], "zhaop": 12, "push": 12, "boundari": 12, "represent": [12, 13], "drug": [12, 13], "discoveri": 12, "mechan": [12, 13], "journal": [12, 13], "medicin": 12, "chemistri": 12, "2019": 12, "doi": [12, 13], "1021": 12, "jmedchem": 12, "0b00959": 12, "There": [12, 13], "m": 12, "solut": 12, "here": 12, "discuss": 12, "4325": 12, "25": 12, "kwarg": [12, 13], "manag": [12, 13], "keras_model": 12, "silenc": 12, "caus": 12, "infer": 12, "kerasmodel": 12, "recent": 12, "chosen": 12, "get_checkpoint": 12, "tf": 12, "op": 12, "explicitli": 12, "torch": 12, "devic": 12, "cuda": 12, "latest": 12, "sort": [12, 13], "bigget": 12, "inherit": 12, "torchmodel": 12, "direct": 12, "func": 12, "parser": 12, "recurs": [12, 13], "keyword": 12, "prevent": 12, "collis": 12, "help": [12, 13], "distinguish": 12, "normal": [12, 13], "dcm": 12, "attentivefpmodel": 12, "used_bi": 12, "argumentpars": 12, "synonym": 12, "dest": 12, "strip_prefix": 12, "off": [12, 13], "attentivefp_mod": 12, "becom": 12, "accept": [12, 13], "arug": 12, "could": [12, 13], "inp_dictionari": 12, "replace_spac": 12, "front": 12, "flat": 12, "replae_spac": 12, "replace_spaces_str": 12, "come": 12, "molgraphconvfeaturizer_use_edg": 12, "use_edg": 12, "inp_dict": 12, "newdict": 12, "hierarch": 12, "throw": 12, "immedi": [12, 13], "upon": 12, "detect": 12, "pre": [12, 13], "type_annot": 12, "annot": 12, "earch": 12, "inspect": 12, "hyperparam": 12, "parsed_arg": 12, "aboslut": 12, "arg1": 12, "val1": 12, "arg2": 12, "val2": 12, "arg3": 12, "val3": 12, "sy": 12, "argv": [12, 13], "config_file_path": 12, "configur": [12, 13], "convers": 12, "ident": 12, "inher": 12, "hierarchi": 12, "namespace_param": 12, "simpli": 12, "postprocess": 12, "null_opt": 12, "nonetyp": 12, "replace_with_spac": 12, "whitespac": 12, "convert_to_float_list": 12, "dropout": [12, 13], "001": [12, 13], "002": 12, "03": 12, "003": 12, "convert_to_int_list": 12, "200": [12, 13], "30": [12, 13], "keep_as_list": 12, "even": 12, "item": 12, "convert_to_str_list": 12, "repsons": 12, "stringtyp": 12, "unless": 12, "gboost": 12, "properli": [12, 13], "weight_init_stddev": 12, "bias_init_const": 12, "not_a_list_outside_of_hyperparam": 12, "prim": 12, "commandlin": 12, "add_argu": 12, "One": [12, 13], "keep_param": 12, "get_default": 12, "new_dict": [12, 13], "prune": 12, "recogn": [12, 13], "clean": 12, "heavili": 12, "params_obj": 12, "str_param": 12, "any_arg": [12, 13], "parseparam": 12, "printgpars": 12, "typeerror": 12, "num_task": 12, "num_cmpd": 12, "num_class": 12, "predicted_v": 12, "pred_std": 12, "primit": 12, "easili": 12, "jsonifi": 12, "per_task": 12, "pred_result": 12, "precis": 12, "recal": 12, "f1": 12, "stabl": 12, "model_evalu": 12, "scorer": 12, "complet": 12, "varaibl": 12, "sake": 12, "_subset": 12, "_model_choice_score_typ": 12, "_log": 12, "_should_stop": 12, "satisfi": 12, "reach": 12, "exceed": 12, "early_stopping_pati": 12, "_new_best_valid_scor": 12, "whenev": 12, "achiev": 12, "ei": 12, "dset": 12, "f": [12, 13], "_epoch_perf": 12, "tell": 12, "_make_pr": 12, "loop": [12, 13], "perf": 12, "valid_dset": 12, "test_perf_data": 12, "onc": 12, "best_valid_scor": 12, "earli": 12, "_epoch_perf_std": 12, "unlik": 12, "r2": 12, "predict_prob": 12, "num_cmp": 12, "real_val": 12, "class_nam": 12, "pred_val": 12, "increment": 12, "overal": 12, "report": [12, 13], "roc_auc_mean": 12, "roc_auc_std": 12, "give": 12, "undon": 12, "probabilit": 12, "pred_class": 12, "class_prob": 12, "prob_std": 12, "real": 12, "bit": [12, 13], "r2_mean": 12, "r2_std": 12, "fold_std": 12, "neg_mean_squared_error": 12, "neg_mean_absolute_error": 12, "perf_metr": 12, "placehold": 12, "is_ki": 12, "ki_convert_ratio": 12, "right": [12, 13], "train_valid_test": 12, "k_fold_cv": 12, "y_real": 12, "y_pred": 12, "fn": [12, 13], "mp": 12, "pdf_dir": 12, "curv": 12, "shade": 12, "sd": 12, "retrain": [12, 13], "phase": 12, "rank": 12, "error_bar": 12, "mark": 12, "dash": 12, "ndim": 12, "num_neighbor": 12, "min_dist": 12, "fit_to_train": 12, "dist_metric_kwd": 12, "target_weight": 12, "random_se": 12, "17": 12, "scatterplot": 12, "marker": 12, "correctli": 12, "discrep": 12, "manifold": 12, "global": [12, 13], "view": 12, "preserv": 12, "parameter": 12, "power": 12, "expon": 12, "minkowski": 12, "factor": 12, "balanc": 12, "topologi": 12, "priorit": 12, "tend": 12, "regard": 12, "symbol": [12, 13], "encapsul": 12, "undo": 12, "mayb": 12, "back": 12, "dataset_ori": 12, "butina": [12, 13], "stratifi": 12, "subtyp": 12, "num_fold": 12, "tvt": 12, "append": [12, 13], "hack": 12, "now": [12, 13], "until": [12, 13], "train_attr": 12, "valid_attr": 12, "tempor": 12, "split_valid_frac": [12, 13], "split_test_frac": [12, 13], "train_frac": 12, "qualifi": 12, "placement": 12, "cutoff": [12, 13], "unsupport": 12, "subattr_df": 12, "id_list": 12, "beyond": [12, 13], "transform_x": 12, "transform_i": 12, "transform_w": 12, "move_mean": 12, "normalizationtransform": 12, "intern": 12, "might": 12, "faster": 12, "newli": 12, "z": 12, "isreal": 12, "z_out": 12, "transform_gradi": 12, "overrid": [12, 13], "1821": 12, "reduct": 12, "algorithm": [12, 13], "mapper": 12, "scaler": 12, "robustscal": 12, "xtran": 12, "ytran": 12, "wtran": 12, "idstran": 12, "revers": 12, "still": 12, "meta_dict": 12, "nest": 12, "would": 12, "checksum": 13, "hash": 13, "return": 13, "ds1": 13, "ds2": 13, "tar1": 13, "tar2": 13, "split1": 13, "split2": 13, "total_df": 13, "dist_path": 13, "histogram": 13, "_dist_hist": 13, "diagnost": 13, "_frac_box": 13, "stdout": 13, "10000": 13, "morgan": 13, "_umap_scatt": 13, "figur": 13, "png": 13, "svg": 13, "three": 13, "creation": 13, "value_column": 13, "label_column": 13, "right_inclus": 13, "interv": 13, "close": 13, "left": 13, "behavior": 13, "add_binary_tertiary_classif": 13, "prefer": 13, "censor": 13, "assay_df": 13, "value_col": 13, "value_num": 13, "output_value_col": 13, "label_act": 13, "active_thresh": 13, "cmpd_number": 13, "relation_col": 13, "value_flag": 13, "replic": 13, "mle": 13, "ml": 13, "readi": 13, "abov": 13, "earliest": 13, "among": 13, "toler": 13, "list_bad_dupl": 13, "max_stdev": 13, "100000": 13, "rm_duplicate_onli": 13, "rdkit_smiles_par": 13, "bad": 13, "too": 13, "repeat": 13, "interest": 13, "ye": 13, "good": 13, "fed": 13, "further": 13, "recalcul": 13, "skew": 13, "extra_result_col": 13, "move": 13, "drop": 13, "in_out": 13, "contian": 13, "values_c": 13, "word": 13, "sensit": 13, "min_freq": 13, "tabluat": 13, "requenc": 13, "occur": 13, "violat": 13, "rule": 13, "cmpd_df": 13, "std_est": 13, "pic50": 13, "likelihood": 13, "mix": 13, "uncensor": 13, "gaussian": 13, "max_diff_from_median": 13, "examin": 13, "median": 13, "elimin": 13, "treat": 13, "retain": 13, "outlier": 13, "base_rdkit_smil": 13, "default_v": 13, "rm": 13, "owner": 13, "own": 13, "pharma": 13, "llnl": 13, "num_bin": 13, "unit": 13, "log_column": 13, "No": 13, "stdev": 13, "bin": 13, "also": 13, "consol": 13, "xc50": 13, "nanomolar": 13, "log10": 13, "px50": 13, "kevin": 13, "jonathan": 13, "01": 13, "targ_lst": 13, "smiles_lst": 13, "shared_inchi_kei": 13, "appli": 13, "shared_df": 13, "varianc": 13, "mleqonli": 13, "gene_nam": 13, "standard_typ": 13, "standard_rel": 13, "standard_inchi_kei": 13, "inchi": 13, "value_num_mean": 13, "pxc50": 13, "kv_lst": 13, "kv_list": 13, "organometal": 13, "orig_df": 13, "genenam": 13, "post": 13, "jak1": 13, "dtc": 13, "usabl": 13, "jak2": 13, "jak3": 13, "ic50": 13, "nm": 13, "mappabl": 13, "wildtype_or_mut": 13, "mutat": 13, "standard_valu": 13, "standard_unit": 13, "gene": 13, "nm_df": 13, "save_smiles_df": 13, "And": 13, "base_rdkit_smiles_from_smil": 13, "excap": 13, "ambit_inchikei": 13, "dir": 13, "data_root": 13, "data_dir": 13, "director": 13, "calcuat": 13, "rel_col": 13, "output_rel_col": 13, "invert": 13, "chembl": 13, "around": 13, "relationship": 13, "activity_prefix": 13, "gostar": 13, "unchang": 13, "inequ": 13, "invers": 13, "sybmol": 13, "dset_nam": 13, "functional_area": 13, "target_typ": 13, "assay_categori": 13, "data_df": 13, "dtc_mleqonly_fileid": 13, "data_origin": 13, "speci": 13, "oid": 13, "1016": 13, "chembiol": 13, "2017": 13, "11": 13, "009": 13, "area": 13, "categori": 13, "rat": 13, "dog": 13, "dtc_smiles_fileid": 13, "binary_class": 13, "orig_fileid": 13, "dtc_smiles_regr_all_fileid": 13, "smiles_column": 13, "classici": 13, "classnam": 13, "smiles_fileid": 13, "dx": 13, "1186": 13, "2fs13321": 13, "017": 13, "0203": 13, "original_entry_id": 13, "mleqonly_fileid": 13, "inc": 13, "file_path": 13, "easier": 13, "brows": 13, "intend": 13, "23jul18": 13, "chw": 13, "save_a": 13, "review": 13, "bucket1": 13, "dataset_key1": 13, "bucket2": 13, "dataset_key2": 13, "spell": 13, "head": 13, "kv_add": 13, "kv_del": 13, "enforc": 13, "approv": 13, "AND": 13, "gov": 13, "swagger": 13, "new_inst": 13, "ds_token": 13, "rest": 13, "forc": 13, "singleton": 13, "from_bucket": 13, "to_bucket": 13, "anoth": 13, "present": 13, "resid": 13, "save_search": 13, "restrict_kei": 13, "restrict_valu": 13, "dataset_oid_onli": 13, "display_all_column": 13, "max_row": 13, "accepted_key_valu": 13, "dataset_oid": 13, "meet": 13, "posit": 13, "volume_of_distribut": 13, "mlmtclientsingleton": 13, "input_kei": 13, "experiment": 13, "pdb_bind": 13, "defined_search": 13, "to_return": 13, "design": 13, "gsk_ml": 13, "df_result": 13, "ds_kei": 13, "column_nam": 13, "return_nam": 13, "bz2": 13, "compress": 13, "na": 13, "header": 13, "return_metadata": 13, "nrow": 13, "print_metadata": 13, "sep": 13, "index_col": 13, "tarpath": 13, "num": 13, "ordereddict": 13, "filetyp": 13, "xl": 13, "xlsx": 13, "tgz": 13, "alphabet": 13, "via": 13, "guid": 13, "search_criteria": 13, "dict_str": 13, "list_str": 13, "plot_ht": 13, "prompt": 13, "stat": 13, "override_check": 13, "data_typ": 13, "datatyp": 13, "bz": 13, "file_ref": 13, "NOT": 13, "link": 13, "numeric_own": 13, "vulner": 13, "travers": 13, "attack": 13, "extractal": 13, "bug": 13, "cve": 13, "2007": 13, "4559": 13, "www": 13, "trellix": 13, "en": 13, "u": 13, "newsroom": 13, "stori": 13, "research": 13, "exploit": 13, "world": 13, "uid": 13, "gid": 13, "lst1": 13, "lst2": 13, "lst3": 13, "rep": 13, "licat": 13, "dtc_df": 13, "ex_df": 13, "ch_df": 13, "test_fract": 13, "send": 13, "author": 13, "amanda": 13, "minnich": 13, "logist": 13, "linear": 13, "like": 13, "params_dict": 13, "assay_param": 13, "grid": 13, "optmiz": 13, "parzen": 13, "serach_typ": 13, "1st": 13, "2nd": 13, "lr": 13, "rate": 13, "scheme": 13, "parameter1": 13, "parameter2": 13, "uniform": 13, "loguniform": 13, "uniformint": 13, "wiki": 13, "fmin": 13, "0001": 13, "0005": 13, "0002": 13, "low": 13, "high": 13, "bound": 13, "serach": 13, "00001": 13, "natur": 13, "13": 13, "256": 13, "l": 13, "num_lay": 13, "32": 13, "64": 13, "128": 13, "512": 13, "dp": 13, "rfe": 13, "rfd": 13, "rff": 13, "retry_tim": 13, "built": 13, "job_list": 13, "itertool": 13, "product": 13, "desir": 13, "maestro": 13, "span": 13, "redund": 13, "shortlist": 13, "split_combo": 13, "gather": 13, "sai": 13, "accompani": 13, "form": 13, "driver": 13, "combo": 13, "param_list": 13, "layer_num": 13, "standalon": 13, "hyperparamtersearch": 13, "search_typ": 13, "hyperparamsearch": 13, "flavor": 13, "python_path": 13, "script_dir": 13, "difficult": 13, "shell_script": 13, "networ": 13, "tmp_sum": 13, "unnecessari": 13, "node_num": 13, "dropout_list": 13, "max_final_layer_s": 13, "funnel": 13, "next": 13, "consecut": 13, "max_last_layer_s": 13, "smallest": 13, "paulson": 13, "new_filter_dict": 13, "cmd": 13, "subprocess": 13, "userid": 13, "heurist": 13, "appear": 13, "max_job": 13, "my_usernam": 13, "queu": 13, "indefinit": 13, "everi": 13, "queue": 13, "throttl": 13, "ourselv": 13, "wait": 13, "caller": 13, "whoami": 13, "restraint": 13, "question": 13, "dskei": 13, "excel": 13, "private_fil": 13, "misc": 13, "h": 13, "ignore_check": 13, "dirnam": 13, "metadata_path": 13, "full_vers": 13, "params_str": 13, "bioassayid": 13, "bioactiv": 13, "pubchem": 13, "aid": 13, "sid": 13, "mylist": 13, "sidlst": 13, "yet": 13, "intv": 13, "inchikei": 13, "canon": 13, "discard_lst": 13, "fail_lst": 13, "cid": 13, "molecule_col": 13, "molecule_column": 13, "cluster_column": 13, "cookbook": 13, "docs_temp": 13, "explicitbitvect": 13, "match_mol": 13, "chem": 13, "smart": 13, "pattern": 13, "molfromsmil": 13, "molfromsmart": 13, "match_atom": 13, "match_bond": 13, "highlight": 13, "rdkit_svg": 13, "emb": 13, "400": 13, "referenc": 13, "pil": 13, "pngimagefil": 13, "moldraw2dsvg": 13, "rdmoldraw2d": 13, "pixel": 13, "bokeh": 13, "window": 13, "conveni": 13, "render": 13, "cell": 13, "manipul": 13, "signific": 13, "thousand": 13, "inchi_str": 13, "useisomericsmil": 13, "removecharg": 13, "fragment": 13, "rare": 13, "isotop": 13, "charg": 13, "stereochemistri": 13, "uncharg": 13, "orig_smil": 13, "canonic": 13, "image_path": 13, "image_s": 13, "500": 13, "flexibl": 13, "proton": 13, "regener": 13, "kekul": 13, "aromat": 13, "ring": 13, "uppercas": 13, "letter": 13, "doubl": 13, "lowercas": 13, "spawn": 13, "cannot": 13}, "objects": {"": [[12, 0, 0, "-", "pipeline"], [13, 0, 0, "-", "utils"]], "pipeline": [[12, 0, 0, "-", "ave_splitter"], [12, 0, 0, "-", "chem_diversity"], [12, 0, 0, "-", "compare_models"], [12, 0, 0, "-", "dist_metrics"], [12, 0, 0, "-", "diversity_plots"], [12, 0, 0, "-", "feature_importance"], [12, 0, 0, "-", "featurization"], [12, 0, 0, "-", "model_datasets"], [12, 0, 0, "-", "model_pipeline"], [12, 0, 0, "-", "model_tracker"], [12, 0, 0, "-", "model_wrapper"], [12, 0, 0, "-", "parameter_parser"], [12, 0, 0, "-", "perf_data"], [12, 0, 0, "-", "perf_plots"], [12, 0, 0, "-", "splitting"], [12, 0, 0, "-", "transformations"]], "pipeline.ave_splitter": [[12, 1, 1, "", "AVEMinSplitter"], [12, 3, 1, "", "analyze_split"], [12, 3, 1, "", "permutation"], [12, 3, 1, "", "shuffle"]], "pipeline.ave_splitter.AVEMinSplitter": [[12, 2, 1, "", "split"]], "pipeline.chem_diversity": [[12, 3, 1, "", "calc_dist_diskdataset"], [12, 3, 1, "", "calc_dist_feat_array"], [12, 3, 1, "", "calc_dist_smiles"], [12, 3, 1, "", "calc_summary"], [12, 3, 1, "", "upload_distmatrix_to_DS"]], "pipeline.compare_models": [[12, 3, 1, "", "copy_best_filesystem_models"], [12, 3, 1, "", "del_ignored_params"], [12, 3, 1, "", "extract_collection_perf_metrics"], [12, 3, 1, "", "extract_model_and_feature_parameters"], [12, 3, 1, "", "get_best_models_info"], [12, 3, 1, "", "get_best_perf_table"], [12, 3, 1, "", "get_collection_datasets"], [12, 3, 1, "", "get_dataset_models"], [12, 3, 1, "", "get_filesystem_models"], [12, 3, 1, "", "get_filesystem_perf_results"], [12, 3, 1, "", "get_multitask_perf_from_files"], [12, 3, 1, "", "get_multitask_perf_from_files_new"], [12, 3, 1, "", "get_multitask_perf_from_tracker"], [12, 3, 1, "", "get_summary_metadata_table"], [12, 3, 1, "", "get_summary_perf_tables"], [12, 3, 1, "", "get_tarball_perf_table"], [12, 3, 1, "", "get_training_datasets"], [12, 3, 1, "", "get_training_perf_table"], [12, 3, 1, "", "get_umap_nn_model_perf_table"], [12, 3, 1, "", "num_trainable_parameters_from_file"]], "pipeline.dist_metrics": [[12, 3, 1, "", "mcs"], [12, 3, 1, "", "tanimoto"], [12, 3, 1, "", "tanimoto_single"]], "pipeline.diversity_plots": [[12, 3, 1, "", "diversity_plots"], [12, 3, 1, "", "plot_dataset_dist_distr"], [12, 3, 1, "", "plot_tani_dist_distr"]], "pipeline.feature_importance": [[12, 3, 1, "", "base_feature_importance"], [12, 3, 1, "", "cluster_permutation_importance"], [12, 3, 1, "", "display_feature_clusters"], [12, 3, 1, "", "permutation_feature_importance"], [12, 3, 1, "", "plot_feature_importances"]], "pipeline.featurization": [[12, 1, 1, "", "ATOMAtomTypeEState"], [12, 1, 1, "", "ATOMMolecularDistanceEdge"], [12, 1, 1, "", "ComputedDescriptorFeaturization"], [12, 1, 1, "", "DescriptorFeaturization"], [12, 1, 1, "", "DynamicFeaturization"], [12, 1, 1, "", "EmbeddingFeaturization"], [12, 1, 1, "", "Featurization"], [12, 1, 1, "", "PersistentFeaturization"], [12, 3, 1, "", "compute_2d_mordred_descrs"], [12, 3, 1, "", "compute_all_moe_descriptors"], [12, 3, 1, "", "compute_all_mordred_descrs"], [12, 3, 1, "", "compute_all_rdkit_descrs"], [12, 3, 1, "", "compute_mordred_descriptors_from_smiles"], [12, 3, 1, "", "compute_rdkit_descriptors_from_smiles"], [12, 3, 1, "", "create_featurization"], [12, 3, 1, "", "featurize_smiles"], [12, 3, 1, "", "get_2d_mols"], [12, 3, 1, "", "get_3d_mols"], [12, 3, 1, "", "get_dataset_attributes"], [12, 3, 1, "", "get_mordred_calculator"], [12, 3, 1, "", "get_rdkit_calculator"], [12, 3, 1, "", "get_user_specified_features"], [12, 3, 1, "", "make_weights"], [12, 3, 1, "", "remove_duplicate_smiles"]], "pipeline.featurization.ATOMAtomTypeEState": [[12, 4, 1, "", "my_es_types"], [12, 4, 1, "", "parameter_names"], [12, 2, 1, "", "preset"]], "pipeline.featurization.ATOMMolecularDistanceEdge": [[12, 4, 1, "", "parameter_names"], [12, 2, 1, "", "preset"]], "pipeline.featurization.ComputedDescriptorFeaturization": [[12, 2, 1, "", "compute_descriptors"], [12, 2, 1, "", "compute_moe_descriptors"], [12, 2, 1, "", "compute_mordred_descriptors"], [12, 2, 1, "", "compute_rdkit_descriptors"], [12, 2, 1, "", "featurize_data"], [12, 2, 1, "", "get_featurized_dset_name"], [12, 2, 1, "", "scale_moe_descriptors"]], "pipeline.featurization.DescriptorFeaturization": [[12, 2, 1, "", "create_feature_transformer"], [12, 4, 1, "", "desc_type_cols"], [12, 4, 1, "", "desc_type_scaled"], [12, 4, 1, "", "desc_type_source"], [12, 2, 1, "", "extract_prefeaturized_data"], [12, 2, 1, "", "featurize_data"], [12, 2, 1, "", "get_feature_columns"], [12, 2, 1, "", "get_feature_count"], [12, 2, 1, "", "get_feature_specific_metadata"], [12, 2, 1, "", "get_featurized_data_subdir"], [12, 2, 1, "", "get_featurized_dset_name"], [12, 2, 1, "", "load_descriptor_spec"], [12, 2, 1, "", "load_descriptor_table"], [12, 4, 1, "", "supported_descriptor_types"]], "pipeline.featurization.DynamicFeaturization": [[12, 2, 1, "", "create_feature_transformer"], [12, 2, 1, "", "extract_prefeaturized_data"], [12, 2, 1, "", "featurize"], [12, 2, 1, "", "featurize_data"], [12, 2, 1, "", "get_feature_columns"], [12, 2, 1, "", "get_feature_count"], [12, 2, 1, "", "get_feature_specific_metadata"], [12, 2, 1, "", "get_featurized_data_subdir"], [12, 2, 1, "", "get_featurized_dset_name"]], "pipeline.featurization.EmbeddingFeaturization": [[12, 2, 1, "", "featurize"], [12, 2, 1, "", "featurize_data"], [12, 2, 1, "", "get_feature_count"], [12, 2, 1, "", "get_feature_specific_metadata"]], "pipeline.featurization.Featurization": [[12, 2, 1, "", "create_feature_transformer"], [12, 2, 1, "", "extract_prefeaturized_data"], [12, 2, 1, "", "featurize_data"], [12, 2, 1, "", "get_feature_columns"], [12, 2, 1, "", "get_feature_count"], [12, 2, 1, "", "get_feature_specific_metadata"], [12, 2, 1, "", "get_featurized_data_subdir"], [12, 2, 1, "", "get_featurized_dset_name"]], "pipeline.featurization.PersistentFeaturization": [[12, 2, 1, "", "create_feature_transformer"], [12, 2, 1, "", "extract_prefeaturized_data"], [12, 2, 1, "", "featurize_data"]], "pipeline.model_datasets": [[12, 1, 1, "", "DatastoreDataset"], [12, 1, 1, "", "FileDataset"], [12, 1, 1, "", "MinimalDataset"], [12, 1, 1, "", "ModelDataset"], [12, 3, 1, "", "check_task_columns"], [12, 3, 1, "", "create_minimal_dataset"], [12, 3, 1, "", "create_model_dataset"], [12, 3, 1, "", "create_split_dataset_from_metadata"], [12, 3, 1, "", "key_value_list_to_dict"], [12, 3, 1, "", "save_joined_dataset"], [12, 3, 1, "", "set_group_permissions"]], "pipeline.model_datasets.DatastoreDataset": [[12, 2, 1, "", "get_dataset_tasks"], [12, 2, 1, "", "load_dataset_split_table"], [12, 2, 1, "", "load_featurized_data"], [12, 2, 1, "", "load_full_dataset"], [12, 2, 1, "", "save_featurized_data"], [12, 2, 1, "", "save_split_dataset"]], "pipeline.model_datasets.FileDataset": [[12, 2, 1, "", "get_dataset_tasks"], [12, 2, 1, "", "load_dataset_split_table"], [12, 2, 1, "", "load_featurized_data"], [12, 2, 1, "", "load_full_dataset"], [12, 2, 1, "", "save_featurized_data"], [12, 2, 1, "", "save_split_dataset"]], "pipeline.model_datasets.MinimalDataset": [[12, 2, 1, "", "get_dataset_tasks"], [12, 2, 1, "", "get_featurized_data"], [12, 2, 1, "", "save_featurized_data"]], "pipeline.model_datasets.ModelDataset": [[12, 2, 1, "", "combined_training_data"], [12, 2, 1, "", "create_dataset_split_table"], [12, 2, 1, "", "get_dataset_tasks"], [12, 2, 1, "", "get_featurized_data"], [12, 2, 1, "", "get_split_metadata"], [12, 2, 1, "", "get_subset_responses_and_weights"], [12, 2, 1, "", "has_all_feature_columns"], [12, 2, 1, "", "load_featurized_data"], [12, 2, 1, "", "load_full_dataset"], [12, 2, 1, "", "load_presplit_dataset"], [12, 2, 1, "", "split_dataset"]], "pipeline.model_pipeline": [[12, 1, 1, "", "ModelPipeline"], [12, 3, 1, "", "build_dataset_name"], [12, 3, 1, "", "build_tarball_name"], [12, 3, 1, "", "calc_AD_kmean_dist"], [12, 3, 1, "", "calc_AD_kmean_local_density"], [12, 3, 1, "", "create_prediction_pipeline"], [12, 3, 1, "", "create_prediction_pipeline_from_file"], [12, 3, 1, "", "ensemble_predict"], [12, 3, 1, "", "load_from_tracker"], [12, 3, 1, "", "main"], [12, 3, 1, "", "regenerate_results"], [12, 3, 1, "", "retrain_model"], [12, 3, 1, "", "run_models"]], "pipeline.model_pipeline.ModelPipeline": [[12, 2, 1, "", "calc_train_dset_pair_dis"], [12, 2, 1, "", "create_model_metadata"], [12, 2, 1, "", "create_prediction_metadata"], [12, 2, 1, "", "get_metrics"], [12, 2, 1, "", "load_featurize_data"], [12, 2, 1, "", "predict_embedding"], [12, 2, 1, "", "predict_full_dataset"], [12, 2, 1, "", "predict_on_dataframe"], [12, 2, 1, "", "predict_on_smiles"], [12, 2, 1, "", "run_predictions"], [12, 2, 1, "", "save_metrics"], [12, 2, 1, "", "save_model_metadata"], [12, 2, 1, "", "split_dataset"], [12, 2, 1, "", "train_model"]], "pipeline.model_tracker": [[12, 5, 1, "", "DatastoreInsertionException"], [12, 5, 1, "", "MLMTClientInstantiationException"], [12, 3, 1, "", "convert_metadata"], [12, 3, 1, "", "export_model"], [12, 3, 1, "", "extract_datastore_model_tarball"], [12, 3, 1, "", "get_full_metadata"], [12, 3, 1, "", "get_full_metadata_by_uuid"], [12, 3, 1, "", "get_metadata_by_uuid"], [12, 3, 1, "", "get_model_collection_by_uuid"], [12, 3, 1, "", "get_model_training_data_by_uuid"], [12, 3, 1, "", "save_model"], [12, 3, 1, "", "save_model_tarball"]], "pipeline.model_wrapper": [[12, 1, 1, "", "DCRFModelWrapper"], [12, 1, 1, "", "DCxgboostModelWrapper"], [12, 1, 1, "", "ForestModelWrapper"], [12, 1, 1, "", "GraphConvDCModelWrapper"], [12, 1, 1, "", "HybridModelWrapper"], [12, 1, 1, "", "KerasDeepChemModelWrapper"], [12, 1, 1, "", "LCTimerIterator"], [12, 1, 1, "", "LCTimerKFoldIterator"], [12, 1, 1, "", "ModelWrapper"], [12, 1, 1, "", "MultitaskDCModelWrapper"], [12, 1, 1, "", "NNModelWrapper"], [12, 1, 1, "", "PytorchDeepChemModelWrapper"], [12, 3, 1, "", "all_bases"], [12, 3, 1, "", "create_model_wrapper"], [12, 3, 1, "", "dc_restore"], [12, 3, 1, "", "dc_torch_restore"], [12, 3, 1, "", "get_latest_pytorch_checkpoint"]], "pipeline.model_wrapper.DCRFModelWrapper": [[12, 2, 1, "", "generate_predictions"], [12, 2, 1, "", "get_model_specific_metadata"], [12, 2, 1, "", "make_dc_model"], [12, 2, 1, "", "train"]], "pipeline.model_wrapper.DCxgboostModelWrapper": [[12, 2, 1, "", "generate_predictions"], [12, 2, 1, "", "get_model_specific_metadata"], [12, 2, 1, "", "get_perf_data"], [12, 2, 1, "", "get_pred_results"], [12, 2, 1, "", "make_dc_model"], [12, 2, 1, "", "reload_model"], [12, 2, 1, "", "train"]], "pipeline.model_wrapper.ForestModelWrapper": [[12, 2, 1, "", "get_perf_data"], [12, 2, 1, "", "get_pred_results"], [12, 2, 1, "", "make_dc_model"], [12, 2, 1, "", "reload_model"], [12, 2, 1, "", "train"]], "pipeline.model_wrapper.GraphConvDCModelWrapper": [[12, 2, 1, "", "generate_embeddings"], [12, 2, 1, "", "get_model_specific_metadata"], [12, 2, 1, "", "recreate_model"]], "pipeline.model_wrapper.HybridModelWrapper": [[12, 1, 1, "", "SubsetData"], [12, 2, 1, "", "generate_predictions"], [12, 2, 1, "", "get_model_specific_metadata"], [12, 2, 1, "", "reload_model"], [12, 2, 1, "", "save_model"], [12, 2, 1, "", "train"]], "pipeline.model_wrapper.KerasDeepChemModelWrapper": [[12, 2, 1, "", "count_params"], [12, 2, 1, "", "reload_model"], [12, 2, 1, "", "restore"]], "pipeline.model_wrapper.ModelWrapper": [[12, 2, 1, "", "create_transformers"], [12, 2, 1, "", "generate_embeddings"], [12, 2, 1, "", "generate_predictions"], [12, 2, 1, "", "get_full_dataset_perf_data"], [12, 2, 1, "", "get_full_dataset_pred_results"], [12, 2, 1, "", "get_model_specific_metadata"], [12, 2, 1, "", "get_num_features"], [12, 2, 1, "", "get_test_perf_data"], [12, 2, 1, "", "get_test_pred_results"], [12, 2, 1, "", "get_train_valid_pred_results"], [12, 2, 1, "", "model_save"], [12, 2, 1, "", "reload_model"], [12, 2, 1, "", "reload_transformers"], [12, 2, 1, "", "setup_model_dirs"], [12, 2, 1, "", "train"], [12, 2, 1, "", "transform_dataset"]], "pipeline.model_wrapper.MultitaskDCModelWrapper": [[12, 2, 1, "", "generate_embeddings"], [12, 2, 1, "", "get_model_specific_metadata"], [12, 2, 1, "", "recreate_model"]], "pipeline.model_wrapper.NNModelWrapper": [[12, 2, 1, "", "generate_predictions"], [12, 2, 1, "", "get_perf_data"], [12, 2, 1, "", "get_pred_results"], [12, 2, 1, "", "restore"], [12, 2, 1, "", "train"], [12, 2, 1, "", "train_kfold_cv"], [12, 2, 1, "", "train_with_early_stopping"]], "pipeline.model_wrapper.PytorchDeepChemModelWrapper": [[12, 2, 1, "", "count_params"], [12, 2, 1, "", "get_model_specific_metadata"], [12, 2, 1, "", "recreate_model"], [12, 2, 1, "", "reload_model"], [12, 2, 1, "", "restore"]], "pipeline.parameter_parser": [[12, 1, 1, "", "AutoArgumentAdder"], [12, 3, 1, "", "all_auto_arguments"], [12, 3, 1, "", "all_auto_float_lists"], [12, 3, 1, "", "all_auto_int_lists"], [12, 3, 1, "", "all_auto_lists"], [12, 3, 1, "", "dict_to_list"], [12, 3, 1, "", "extract_featurizer_params"], [12, 3, 1, "", "extract_model_params"], [12, 3, 1, "", "flatten_dict"], [12, 3, 1, "", "get_parser"], [12, 3, 1, "", "is_list"], [12, 3, 1, "", "is_list_float"], [12, 3, 1, "", "is_list_int"], [12, 3, 1, "", "is_primative_type"], [12, 3, 1, "", "list_defaults"], [12, 3, 1, "", "main"], [12, 3, 1, "", "make_dataset_key_absolute"], [12, 3, 1, "", "parse_command_line"], [12, 3, 1, "", "parse_config_file"], [12, 3, 1, "", "parse_namespace"], [12, 3, 1, "", "postprocess_args"], [12, 3, 1, "", "primative_type_only"], [12, 3, 1, "", "prune_defaults"], [12, 3, 1, "", "remove_unrecognized_arguments"], [12, 3, 1, "", "to_str"], [12, 3, 1, "", "wrapper"]], "pipeline.parameter_parser.AutoArgumentAdder": [[12, 2, 1, "", "add_to_parser"], [12, 2, 1, "", "all_prefixed_names"], [12, 2, 1, "", "extract_params"], [12, 2, 1, "", "get_list_args"], [12, 2, 1, "", "get_list_float_args"], [12, 2, 1, "", "get_list_int_args"]], "pipeline.perf_data": [[12, 1, 1, "", "ClassificationPerfData"], [12, 1, 1, "", "EpochManager"], [12, 1, 1, "", "EpochManagerKFold"], [12, 1, 1, "", "HybridPerfData"], [12, 1, 1, "", "KFoldClassificationPerfData"], [12, 1, 1, "", "KFoldRegressionPerfData"], [12, 1, 1, "", "PerfData"], [12, 1, 1, "", "RegressionPerfData"], [12, 1, 1, "", "SimpleClassificationPerfData"], [12, 1, 1, "", "SimpleHybridPerfData"], [12, 1, 1, "", "SimpleRegressionPerfData"], [12, 3, 1, "", "create_perf_data"], [12, 3, 1, "", "negative_predictive_value"], [12, 3, 1, "", "rms_error"]], "pipeline.perf_data.ClassificationPerfData": [[12, 2, 1, "", "accumulate_preds"], [12, 2, 1, "", "get_pred_values"], [12, 2, 1, "", "get_prediction_results"], [12, 2, 1, "", "model_choice_score"]], "pipeline.perf_data.EpochManager": [[12, 2, 1, "", "accumulate"], [12, 2, 1, "", "compute"], [12, 2, 1, "", "on_new_best_valid"], [12, 2, 1, "", "set_make_pred"], [12, 2, 1, "", "should_stop"], [12, 2, 1, "", "update"], [12, 2, 1, "", "update_epoch"], [12, 2, 1, "", "update_valid"]], "pipeline.perf_data.EpochManagerKFold": [[12, 2, 1, "", "compute"]], "pipeline.perf_data.HybridPerfData": [[12, 2, 1, "", "accumulate_preds"], [12, 2, 1, "", "compute_perf_metrics"], [12, 2, 1, "", "get_pred_values"], [12, 2, 1, "", "get_prediction_results"], [12, 2, 1, "", "model_choice_score"]], "pipeline.perf_data.KFoldClassificationPerfData": [[12, 2, 1, "", "accumulate_preds"], [12, 2, 1, "", "compute_perf_metrics"], [12, 2, 1, "", "get_pred_values"], [12, 2, 1, "", "get_real_values"], [12, 2, 1, "", "get_weights"]], "pipeline.perf_data.KFoldRegressionPerfData": [[12, 2, 1, "", "accumulate_preds"], [12, 2, 1, "", "compute_perf_metrics"], [12, 2, 1, "", "get_pred_values"], [12, 2, 1, "", "get_real_values"], [12, 2, 1, "", "get_weights"]], "pipeline.perf_data.PerfData": [[12, 2, 1, "", "accumulate_preds"], [12, 2, 1, "", "compute_perf_metrics"], [12, 2, 1, "", "get_pred_values"], [12, 2, 1, "", "get_prediction_results"], [12, 2, 1, "", "get_real_values"], [12, 2, 1, "", "get_weights"]], "pipeline.perf_data.RegressionPerfData": [[12, 2, 1, "", "accumulate_preds"], [12, 2, 1, "", "compute_perf_metrics"], [12, 2, 1, "", "get_pred_values"], [12, 2, 1, "", "get_prediction_results"], [12, 2, 1, "", "model_choice_score"]], "pipeline.perf_data.SimpleClassificationPerfData": [[12, 2, 1, "", "accumulate_preds"], [12, 2, 1, "", "compute_perf_metrics"], [12, 2, 1, "", "get_pred_values"], [12, 2, 1, "", "get_real_values"], [12, 2, 1, "", "get_weights"]], "pipeline.perf_data.SimpleHybridPerfData": [[12, 2, 1, "", "accumulate_preds"], [12, 2, 1, "", "compute_perf_metrics"], [12, 2, 1, "", "get_pred_values"], [12, 2, 1, "", "get_real_values"], [12, 2, 1, "", "get_weights"]], "pipeline.perf_data.SimpleRegressionPerfData": [[12, 2, 1, "", "accumulate_preds"], [12, 2, 1, "", "compute_perf_metrics"], [12, 2, 1, "", "get_pred_values"], [12, 2, 1, "", "get_real_values"], [12, 2, 1, "", "get_weights"]], "pipeline.perf_plots": [[12, 3, 1, "", "plot_ROC_curve"], [12, 3, 1, "", "plot_perf_vs_epoch"], [12, 3, 1, "", "plot_prec_recall_curve"], [12, 3, 1, "", "plot_pred_vs_actual"], [12, 3, 1, "", "plot_umap_feature_projections"], [12, 3, 1, "", "plot_umap_train_set_neighbors"]], "pipeline.splitting": [[12, 1, 1, "", "DatasetManager"], [12, 1, 1, "", "KFoldSplitting"], [12, 1, 1, "", "Splitting"], [12, 1, 1, "", "TrainValidTestSplitting"], [12, 3, 1, "", "check_if_dupe_smiles_dataset"], [12, 3, 1, "", "create_splitting"], [12, 3, 1, "", "select_attrs_by_dset_ids"], [12, 3, 1, "", "select_attrs_by_dset_smiles"], [12, 3, 1, "", "select_dset_by_attr_ids"], [12, 3, 1, "", "select_dset_by_id_list"]], "pipeline.splitting.DatasetManager": [[12, 2, 1, "", "compact_dataset"], [12, 2, 1, "", "expand_selection"]], "pipeline.splitting.KFoldSplitting": [[12, 2, 1, "", "get_split_prefix"], [12, 2, 1, "", "split_dataset"]], "pipeline.splitting.Splitting": [[12, 2, 1, "", "get_split_prefix"], [12, 2, 1, "", "needs_smiles"], [12, 2, 1, "", "split_dataset"]], "pipeline.splitting.TrainValidTestSplitting": [[12, 2, 1, "", "get_split_prefix"], [12, 2, 1, "", "split_dataset"]], "pipeline.transformations": [[12, 1, 1, "", "NormalizationTransformerHybrid"], [12, 1, 1, "", "NormalizationTransformerMissingData"], [12, 1, 1, "", "UMAPTransformer"], [12, 3, 1, "", "create_feature_transformers"], [12, 3, 1, "", "create_weight_transformers"], [12, 3, 1, "", "get_statistics_missing_ydata"], [12, 3, 1, "", "get_transformer_specific_metadata"], [12, 3, 1, "", "transformers_needed"]], "pipeline.transformations.NormalizationTransformerHybrid": [[12, 2, 1, "", "transform"], [12, 2, 1, "", "transform_array"], [12, 2, 1, "", "untransform"]], "pipeline.transformations.NormalizationTransformerMissingData": [[12, 2, 1, "", "transform"], [12, 2, 1, "", "transform_array"], [12, 2, 1, "", "untransform"]], "pipeline.transformations.UMAPTransformer": [[12, 2, 1, "", "transform"], [12, 2, 1, "", "transform_array"], [12, 2, 1, "", "untransform"]], "utils": [[13, 0, 0, "-", "checksum_utils"], [13, 0, 0, "-", "compare_split_csv"], [13, 0, 0, "-", "compare_splits_plots"], [13, 0, 0, "-", "curate_data"], [13, 0, 0, "-", "data_curation_functions"], [13, 0, 0, "-", "datastore_functions"], [13, 0, 0, "-", "file_utils"], [13, 0, 0, "-", "genTestset"], [13, 0, 0, "-", "hyperparam_search_wrapper"], [13, 0, 0, "-", "llnl_utils"], [13, 0, 0, "-", "many_to_one"], [13, 0, 0, "-", "model_retrain"], [13, 0, 0, "-", "model_version_utils"], [13, 0, 0, "-", "process_slurm"], [13, 0, 0, "-", "pubchem_utils"], [13, 0, 0, "-", "rdkit_easy"], [13, 0, 0, "-", "struct_utils"]], "utils.checksum_utils": [[13, 3, 1, "", "create_checksum"], [13, 3, 1, "", "get_dataset_hash_from_tar"], [13, 3, 1, "", "uses_same_training_data_by_datasets"], [13, 3, 1, "", "uses_same_training_data_by_tarballs"]], "utils.compare_split_csv": [[13, 3, 1, "", "compare_split_files"], [13, 3, 1, "", "compare_splits"], [13, 3, 1, "", "parse_args"]], "utils.compare_splits_plots": [[13, 1, 1, "", "SplitStats"], [13, 3, 1, "", "parse_args"], [13, 3, 1, "", "save_figure"], [13, 3, 1, "", "split"]], "utils.compare_splits_plots.SplitStats": [[13, 2, 1, "", "dist_hist_plot"], [13, 2, 1, "", "make_all_plots"], [13, 2, 1, "", "print_stats"], [13, 2, 1, "", "subset_frac_plot"], [13, 2, 1, "", "umap_plot"]], "utils.curate_data": [[13, 3, 1, "", "add_classification_column"], [13, 3, 1, "", "aggregate_assay_data"], [13, 3, 1, "", "average_and_remove_duplicates"], [13, 3, 1, "", "create_new_rows_for_extra_results"], [13, 3, 1, "", "filter_in_by_column_values"], [13, 3, 1, "", "filter_in_out_by_column_values"], [13, 3, 1, "", "filter_out_by_column_values"], [13, 3, 1, "", "filter_out_comments"], [13, 3, 1, "", "freq_table"], [13, 3, 1, "", "get_rdkit_smiles_parent"], [13, 3, 1, "", "labeled_freq_table"], [13, 3, 1, "", "mle_censored_mean"], [13, 3, 1, "", "remove_outlier_replicates"], [13, 3, 1, "", "replicate_rmsd"], [13, 3, 1, "", "set_group_permissions"], [13, 3, 1, "", "summarize_data"], [13, 3, 1, "", "xc50topxc50_for_nm"]], "utils.data_curation_functions": [[13, 3, 1, "", "atom_curation"], [13, 3, 1, "", "atom_curation_excape"], [13, 3, 1, "", "down_select"], [13, 3, 1, "", "exclude_organometallics"], [13, 3, 1, "", "filter_dtc_data"], [13, 3, 1, "", "get_smiles_4dtc_data"], [13, 3, 1, "", "get_smiles_dtc_data"], [13, 3, 1, "", "get_smiles_excape_data"], [13, 3, 1, "", "ic50topic50"], [13, 3, 1, "", "is_organometallic"], [13, 3, 1, "", "set_data_root"], [13, 3, 1, "", "standardize_relations"], [13, 3, 1, "", "upload_df_dtc_base_smiles_all"], [13, 3, 1, "", "upload_df_dtc_mleqonly"], [13, 3, 1, "", "upload_df_dtc_mleqonly_class"], [13, 3, 1, "", "upload_df_dtc_smiles"], [13, 3, 1, "", "upload_df_dtc_smiles_regr_all_class"], [13, 3, 1, "", "upload_df_excape_mleqonly"], [13, 3, 1, "", "upload_df_excape_mleqonly_class"], [13, 3, 1, "", "upload_df_excape_smiles"], [13, 3, 1, "", "upload_file_dtc_raw_data"], [13, 3, 1, "", "upload_file_dtc_smiles_regr_all"], [13, 3, 1, "", "upload_file_excape_raw_data"]], "utils.datastore_functions": [[13, 3, 1, "", "bulk_export_kv_for_files"], [13, 3, 1, "", "bulk_update_kv"], [13, 3, 1, "", "check_key_val"], [13, 3, 1, "", "config_client"], [13, 3, 1, "", "copy_datasets_to_bucket"], [13, 3, 1, "", "dataset_key_exists"], [13, 3, 1, "", "filter_datasets_interactive"], [13, 3, 1, "", "get_key_val"], [13, 3, 1, "", "get_keyval"], [13, 3, 1, "", "initialize_model_tracker"], [13, 3, 1, "", "key_exists"], [13, 3, 1, "", "list_key_values"], [13, 3, 1, "", "repeat_defined_search"], [13, 3, 1, "", "retrieve_bucket_names"], [13, 3, 1, "", "retrieve_columns_from_dataset"], [13, 3, 1, "", "retrieve_dataset_by_dataset_oid"], [13, 3, 1, "", "retrieve_dataset_by_datasetkey"], [13, 3, 1, "", "retrieve_keys"], [13, 3, 1, "", "retrieve_values_for_key"], [13, 3, 1, "", "search_datasets_by_key_value"], [13, 3, 1, "", "search_files_interactive"], [13, 3, 1, "", "string_to_dict"], [13, 3, 1, "", "string_to_list"], [13, 3, 1, "", "summarize_datasets"], [13, 3, 1, "", "update_distribution_kv"], [13, 3, 1, "", "update_kv"], [13, 3, 1, "", "upload_df_to_DS"], [13, 3, 1, "", "upload_file_to_DS"], [13, 3, 1, "", "upload_pickle_to_DS"]], "utils.file_utils": [[13, 3, 1, "", "is_within_directory"], [13, 3, 1, "", "safe_extract"]], "utils.genTestset": [[13, 3, 1, "", "Union"], [13, 3, 1, "", "aggregate_basesmiles"], [13, 3, 1, "", "genUnionSet"], [13, 3, 1, "", "generateTestset"], [13, 3, 1, "", "intersection"]], "utils.hyperparam_search_wrapper": [[13, 1, 1, "", "GeometricSearch"], [13, 1, 1, "", "GridSearch"], [13, 1, 1, "", "HyperOptSearch"], [13, 1, 1, "", "HyperparameterSearch"], [13, 1, 1, "", "RandomSearch"], [13, 1, 1, "", "UserSpecifiedSearch"], [13, 3, 1, "", "build_hyperopt_search_domain"], [13, 3, 1, "", "build_search"], [13, 3, 1, "", "gen_maestro_command"], [13, 3, 1, "", "get_num_params"], [13, 3, 1, "", "main"], [13, 3, 1, "", "parse_params"], [13, 3, 1, "", "permutate_NNlayer_combo_params"], [13, 3, 1, "", "reformat_filter_dict"], [13, 3, 1, "", "run_cmd"], [13, 3, 1, "", "run_command"]], "utils.hyperparam_search_wrapper.GeometricSearch": [[13, 2, 1, "", "generate_assay_list"], [13, 2, 1, "", "generate_combo"], [13, 2, 1, "", "generate_param_combos"], [13, 2, 1, "", "split_and_save_dataset"]], "utils.hyperparam_search_wrapper.GridSearch": [[13, 2, 1, "", "generate_assay_list"], [13, 2, 1, "", "generate_combo"], [13, 2, 1, "", "generate_param_combos"], [13, 2, 1, "", "split_and_save_dataset"]], "utils.hyperparam_search_wrapper.HyperOptSearch": [[13, 2, 1, "", "run_search"]], "utils.hyperparam_search_wrapper.HyperparameterSearch": [[13, 2, 1, "", "already_run"], [13, 2, 1, "", "assemble_layers"], [13, 2, 1, "", "build_jobs"], [13, 2, 1, "", "filter_jobs"], [13, 2, 1, "", "generate_assay_list"], [13, 2, 1, "", "generate_combo"], [13, 2, 1, "", "generate_combos"], [13, 2, 1, "", "generate_maestro_commands"], [13, 2, 1, "", "generate_param_combos"], [13, 2, 1, "", "generate_searches"], [13, 2, 1, "", "generate_split_shortlist"], [13, 2, 1, "", "generate_split_shortlist_file"], [13, 2, 1, "", "get_dataset_metadata"], [13, 2, 1, "", "get_shortlist_df"], [13, 2, 1, "", "return_split_uuid"], [13, 2, 1, "", "return_split_uuid_file"], [13, 2, 1, "", "run_search"], [13, 2, 1, "", "split_and_save_dataset"], [13, 2, 1, "", "submit_jobs"]], "utils.hyperparam_search_wrapper.RandomSearch": [[13, 2, 1, "", "generate_assay_list"], [13, 2, 1, "", "generate_combo"], [13, 2, 1, "", "generate_param_combos"], [13, 2, 1, "", "split_and_save_dataset"]], "utils.hyperparam_search_wrapper.UserSpecifiedSearch": [[13, 2, 1, "", "generate_assay_list"], [13, 2, 1, "", "generate_combo"], [13, 2, 1, "", "generate_param_combos"], [13, 2, 1, "", "split_and_save_dataset"]], "utils.llnl_utils": [[13, 3, 1, "", "get_command_output"], [13, 3, 1, "", "get_my_username"], [13, 3, 1, "", "is_lc_system"], [13, 3, 1, "", "throttle_jobs"]], "utils.many_to_one": [[13, 5, 1, "", "ManyToOneException"], [13, 5, 1, "", "NANCompoundIDException"], [13, 5, 1, "", "NANSMILESException"], [13, 3, 1, "", "has_nans"], [13, 3, 1, "", "many_to_one"], [13, 3, 1, "", "many_to_one_df"], [13, 3, 1, "", "no_nan_ids_or_smiles"]], "utils.model_retrain": [[13, 3, 1, "", "main"], [13, 3, 1, "", "train_model"], [13, 3, 1, "", "train_model_from_tar"], [13, 3, 1, "", "train_model_from_tracker"], [13, 3, 1, "", "train_models_from_dataset_keys"]], "utils.model_version_utils": [[13, 3, 1, "", "check_version_compatible"], [13, 3, 1, "", "get_ampl_version"], [13, 3, 1, "", "get_ampl_version_from_dir"], [13, 3, 1, "", "get_ampl_version_from_json"], [13, 3, 1, "", "get_ampl_version_from_model"], [13, 3, 1, "", "get_major_version"], [13, 3, 1, "", "main"], [13, 3, 1, "", "validate_version"]], "utils.process_slurm": [[13, 3, 1, "", "get_timings"], [13, 3, 1, "", "main"], [13, 3, 1, "", "move_failed_slurm"], [13, 3, 1, "", "rerun_failed"], [13, 3, 1, "", "run_cmd"], [13, 3, 1, "", "run_command"]], "utils.pubchem_utils": [[13, 3, 1, "", "download_SID_from_bioactivity_assay"], [13, 3, 1, "", "download_activitytype"], [13, 3, 1, "", "download_bioactivity_assay"], [13, 3, 1, "", "download_dose_response_from_bioactivity"], [13, 3, 1, "", "download_smiles"]], "utils.rdkit_easy": [[13, 3, 1, "", "add_mol_column"], [13, 3, 1, "", "calculate_descriptors"], [13, 3, 1, "", "cluster_dataframe"], [13, 3, 1, "", "cluster_fingerprints"], [13, 3, 1, "", "matching_atoms_and_bonds"], [13, 3, 1, "", "mol_to_html"], [13, 3, 1, "", "mol_to_pil"], [13, 3, 1, "", "mol_to_svg"], [13, 3, 1, "", "save_png"], [13, 3, 1, "", "save_svg"], [13, 3, 1, "", "setup_notebook"], [13, 3, 1, "", "show_df"], [13, 3, 1, "", "show_html"]], "utils.struct_utils": [[13, 3, 1, "", "base_mol_from_inchi"], [13, 3, 1, "", "base_mol_from_smiles"], [13, 3, 1, "", "base_smiles_from_inchi"], [13, 3, 1, "", "base_smiles_from_smiles"], [13, 3, 1, "", "draw_structure"], [13, 3, 1, "", "fix_moe_smiles"], [13, 3, 1, "", "get_rdkit_smiles"], [13, 3, 1, "", "kekulize_smiles"], [13, 3, 1, "", "mol_wt_from_smiles"], [13, 3, 1, "", "mols_from_smiles"], [13, 3, 1, "", "rdkit_smiles_from_smiles"], [13, 3, 1, "", "smiles_to_inchi_key"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"ddm": [0, 1, 2], "packag": [0, 1, 2, 12, 13], "subpackag": 0, "modul": [0, 1, 2, 12, 13], "content": [0, 1, 2, 12, 13], "pipelin": [1, 8, 10, 12], "submodul": [1, 2, 12, 13], "ave_splitt": [1, 12], "chem_divers": [1, 12], "compare_model": [1, 12], "dist_metr": [1, 12], "diversity_plot": [1, 12], "featur": [1, 10, 12], "model_dataset": [1, 12], "model_pipelin": [1, 12], "model_track": [1, 12], "model_wrapp": [1, 12], "parameter_pars": [1, 12], "perf_data": [1, 12], "perf_plot": [1, 12], "predict_from_model": 1, "split": [1, 12], "temporal_splitt": 1, "transform": [1, 12], "util": [2, 13], "curate_data": [2, 13], "data_curation_funct": [2, 13], "datastore_funct": [2, 13], "gentestset": [2, 13], "hyperparam_search_wrapp": [2, 13], "llnl_util": [2, 13], "model_retrain": [2, 13], "process_slurm": [2, 13], "pubchem_util": [2, 13], "rdkit_easi": [2, 13], "struct_util": [2, 13], "verify_result": 2, "advanc": [3, 4, 5], "ampl": [3, 7, 8, 10], "usag": [3, 8], "command": 3, "line": 3, "hyperparamet": 3, "optim": 3, "instal": [4, 6, 7], "deploy": 4, "uninstal": 4, "test": [5, 9], "run": [5, 8], "all": 5, "slurm": 5, "without": 5, "internet": 5, "access": 5, "get": 6, "start": 6, "prerequisit": [6, 7], "clone": 7, "git": 7, "repositori": 7, "creat": 7, "conda": 7, "environ": 7, "docker": 7, "python": 8, "script": 8, "jupyt": 8, "notebook": 8, "paramet": [8, 12], "option": 8, "librari": 8, "document": [8, 10], "more": [8, 9], "inform": [8, 9], "exampl": [9, 12], "atom": 10, "model": 10, "drug": 10, "discoveri": 10, "built": 10, "user": 10, "guid": 10, "api": 10, "us": 10, "link": 10, "atomsci": 11, "return": 12, "see": 12, "also": 12, "feature_import": 12, "refer": 12, "checksum_util": 13, "compare_split_csv": 13, "compare_splits_plot": 13, "file_util": 13, "many_to_on": 13, "model_version_util": 13, "open": 13, "doc": 13}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"ddm package": [[0, "ddm-package"]], "Subpackages": [[0, "subpackages"]], "Module contents": [[0, "module-contents"], [1, "module-contents"], [2, "module-contents"], [12, "module-pipeline"], [13, "module-utils"]], "ddm.pipeline package": [[1, "ddm-pipeline-package"]], "Submodules": [[1, "submodules"], [2, "submodules"], [12, "submodules"], [13, "submodules"]], "ddm.pipeline.ave_splitter module": [[1, "ddm-pipeline-ave-splitter-module"]], "ddm.pipeline.chem_diversity module": [[1, "ddm-pipeline-chem-diversity-module"]], "ddm.pipeline.compare_models module": [[1, "ddm-pipeline-compare-models-module"]], "ddm.pipeline.dist_metrics module": [[1, "ddm-pipeline-dist-metrics-module"]], "ddm.pipeline.diversity_plots module": [[1, "ddm-pipeline-diversity-plots-module"]], "ddm.pipeline.featurization module": [[1, "ddm-pipeline-featurization-module"]], "ddm.pipeline.model_datasets module": [[1, "ddm-pipeline-model-datasets-module"]], "ddm.pipeline.model_pipeline module": [[1, "ddm-pipeline-model-pipeline-module"]], "ddm.pipeline.model_tracker module": [[1, "ddm-pipeline-model-tracker-module"]], "ddm.pipeline.model_wrapper module": [[1, "ddm-pipeline-model-wrapper-module"]], "ddm.pipeline.parameter_parser module": [[1, "ddm-pipeline-parameter-parser-module"]], "ddm.pipeline.perf_data module": [[1, "ddm-pipeline-perf-data-module"]], "ddm.pipeline.perf_plots module": [[1, "ddm-pipeline-perf-plots-module"]], "ddm.pipeline.predict_from_model module": [[1, "ddm-pipeline-predict-from-model-module"]], "ddm.pipeline.splitting module": [[1, "ddm-pipeline-splitting-module"]], "ddm.pipeline.temporal_splitter module": [[1, "ddm-pipeline-temporal-splitter-module"]], "ddm.pipeline.transformations module": [[1, "ddm-pipeline-transformations-module"]], "ddm.utils package": [[2, "ddm-utils-package"]], "ddm.utils.curate_data module": [[2, "ddm-utils-curate-data-module"]], "ddm.utils.data_curation_functions module": [[2, "ddm-utils-data-curation-functions-module"]], "ddm.utils.datastore_functions module": [[2, "ddm-utils-datastore-functions-module"]], "ddm.utils.genTestset module": [[2, "ddm-utils-gentestset-module"]], "ddm.utils.hyperparam_search_wrapper module": [[2, "ddm-utils-hyperparam-search-wrapper-module"]], "ddm.utils.llnl_utils module": [[2, "ddm-utils-llnl-utils-module"]], "ddm.utils.model_retrain module": [[2, "ddm-utils-model-retrain-module"]], "ddm.utils.process_slurm module": [[2, "ddm-utils-process-slurm-module"]], "ddm.utils.pubchem_utils module": [[2, "ddm-utils-pubchem-utils-module"]], "ddm.utils.rdkit_easy module": [[2, "ddm-utils-rdkit-easy-module"]], "ddm.utils.struct_utils module": [[2, "ddm-utils-struct-utils-module"]], "ddm.utils.verify_results module": [[2, "ddm-utils-verify-results-module"]], "Advanced AMPL Usage": [[3, "advanced-ampl-usage"]], "Command line": [[3, "command-line"]], "Hyperparameter optimization": [[3, "hyperparameter-optimization"]], "Advanced Installation": [[4, "advanced-installation"]], "Deployment": [[4, "deployment"]], "Uninstallation": [[4, "uninstallation"]], "Advanced Testing": [[5, "advanced-testing"]], "Running all tests": [[5, "running-all-tests"]], "Running SLURM tests": [[5, "running-slurm-tests"]], "Running tests without internet access": [[5, "running-tests-without-internet-access"]], "Getting started": [[6, "getting-started"]], "Prerequisites": [[6, "prerequisites"], [7, "prerequisites"]], "Install": [[6, "install"], [7, "id1"]], "Installation": [[7, "installation"]], "Clone the git repository": [[7, "clone-the-git-repository"]], "Create conda environment": [[7, "create-conda-environment"]], "Install AMPL": [[7, "install-ampl"]], "Install with Docker": [[7, "install-with-docker"]], "Running AMPL": [[8, "running-ampl"]], "Python scripts and Jupyter notebooks": [[8, "python-scripts-and-jupyter-notebooks"]], "Pipeline parameters (options)": [[8, "pipeline-parameters-options"]], "Library documentation": [[8, "library-documentation"]], "More information on AMPL usage": [[8, "more-information-on-ampl-usage"]], "Tests": [[9, "tests"]], "More example and test information": [[9, "more-example-and-test-information"]], "ATOM Modeling PipeLine (AMPL) for Drug Discovery": [[10, "atom-modeling-pipeline-ampl-for-drug-discovery"]], "Features": [[10, "features"]], "Built with": [[10, "built-with"]], "User guide": [[10, "user-guide"]], "API documentation": [[10, "api-documentation"]], "Useful links": [[10, "useful-links"]], "atomsci": [[11, "atomsci"]], "pipeline package": [[12, "pipeline-package"]], "pipeline.ave_splitter module": [[12, "module-pipeline.ave_splitter"]], "Parameters": [[12, "parameters"], [12, "id1"], [12, "id9"], [12, "id14"], [12, "id16"], [12, "id18"], [12, "id20"], [12, "id22"], [12, "id24"]], "Returns": [[12, "returns"], [12, "id2"], [12, "id15"], [12, "id17"], [12, "id19"], [12, "id21"], [12, "id23"], [12, "id25"]], "See Also": [[12, "see-also"], [12, "id3"]], "Examples": [[12, "examples"], [12, "id4"]], "pipeline.chem_diversity module": [[12, "module-pipeline.chem_diversity"]], "pipeline.compare_models module": [[12, "module-pipeline.compare_models"]], "pipeline.dist_metrics module": [[12, "module-pipeline.dist_metrics"]], "pipeline.diversity_plots module": [[12, "module-pipeline.diversity_plots"]], "pipeline.featurization module": [[12, "module-pipeline.featurization"]], "pipeline.feature_importance module": [[12, "module-pipeline.feature_importance"]], "pipeline.model_datasets module": [[12, "module-pipeline.model_datasets"]], "pipeline.model_pipeline module": [[12, "module-pipeline.model_pipeline"]], "pipeline.model_tracker module": [[12, "module-pipeline.model_tracker"]], "pipeline.model_wrapper module": [[12, "module-pipeline.model_wrapper"]], "References": [[12, "references"]], "pipeline.parameter_parser module": [[12, "module-pipeline.parameter_parser"]], "pipeline.perf_data module": [[12, "module-pipeline.perf_data"]], "pipeline.perf_plots module": [[12, "module-pipeline.perf_plots"]], "pipeline.splitting module": [[12, "module-pipeline.splitting"]], "pipeline.transformations module": [[12, "module-pipeline.transformations"]], "utils package": [[13, "utils-package"]], "utils.checksum_utils module": [[13, "module-utils.checksum_utils"]], "utils.compare_split_csv module": [[13, "module-utils.compare_split_csv"]], "utils.compare_splits_plots module": [[13, "module-utils.compare_splits_plots"]], "utils.curate_data module": [[13, "module-utils.curate_data"]], "utils.data_curation_functions module": [[13, "module-utils.data_curation_functions"]], "utils.datastore_functions module": [[13, "module-utils.datastore_functions"]], "utils.file_utils module": [[13, "module-utils.file_utils"]], "utils.genTestset module": [[13, "module-utils.genTestset"]], "utils.hyperparam_search_wrapper module": [[13, "module-utils.hyperparam_search_wrapper"]], "utils.llnl_utils module": [[13, "module-utils.llnl_utils"]], "utils.many_to_one module": [[13, "module-utils.many_to_one"]], "utils.model_retrain module": [[13, "module-utils.model_retrain"]], "utils.model_version_utils module": [[13, "module-utils.model_version_utils"]], "utils.open-docs module": [[13, "utils-open-docs-module"]], "utils.process_slurm module": [[13, "module-utils.process_slurm"]], "utils.pubchem_utils module": [[13, "module-utils.pubchem_utils"]], "utils.rdkit_easy module": [[13, "module-utils.rdkit_easy"]], "utils.struct_utils module": [[13, "module-utils.struct_utils"]]}, "indexentries": {"atomatomtypeestate (class in pipeline.featurization)": [[12, "pipeline.featurization.ATOMAtomTypeEState"]], "atommoleculardistanceedge (class in pipeline.featurization)": [[12, "pipeline.featurization.ATOMMolecularDistanceEdge"]], "aveminsplitter (class in pipeline.ave_splitter)": [[12, "pipeline.ave_splitter.AVEMinSplitter"]], "autoargumentadder (class in pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.AutoArgumentAdder"]], "classificationperfdata (class in pipeline.perf_data)": [[12, "pipeline.perf_data.ClassificationPerfData"]], "computeddescriptorfeaturization (class in pipeline.featurization)": [[12, "pipeline.featurization.ComputedDescriptorFeaturization"]], "dcrfmodelwrapper (class in pipeline.model_wrapper)": [[12, "pipeline.model_wrapper.DCRFModelWrapper"]], "dcxgboostmodelwrapper (class in pipeline.model_wrapper)": [[12, "pipeline.model_wrapper.DCxgboostModelWrapper"]], "datasetmanager (class in pipeline.splitting)": [[12, "pipeline.splitting.DatasetManager"]], "datastoredataset (class in pipeline.model_datasets)": [[12, "pipeline.model_datasets.DatastoreDataset"]], "datastoreinsertionexception": [[12, "pipeline.model_tracker.DatastoreInsertionException"]], "descriptorfeaturization (class in pipeline.featurization)": [[12, "pipeline.featurization.DescriptorFeaturization"]], "dynamicfeaturization (class in pipeline.featurization)": [[12, "pipeline.featurization.DynamicFeaturization"]], "embeddingfeaturization (class in pipeline.featurization)": [[12, "pipeline.featurization.EmbeddingFeaturization"]], "epochmanager (class in pipeline.perf_data)": [[12, "pipeline.perf_data.EpochManager"]], "epochmanagerkfold (class in pipeline.perf_data)": [[12, "pipeline.perf_data.EpochManagerKFold"]], "featurization (class in pipeline.featurization)": [[12, "pipeline.featurization.Featurization"]], "filedataset (class in pipeline.model_datasets)": [[12, "pipeline.model_datasets.FileDataset"]], "forestmodelwrapper (class in pipeline.model_wrapper)": [[12, "pipeline.model_wrapper.ForestModelWrapper"]], "graphconvdcmodelwrapper (class in pipeline.model_wrapper)": [[12, "pipeline.model_wrapper.GraphConvDCModelWrapper"]], "hybridmodelwrapper (class in pipeline.model_wrapper)": [[12, "pipeline.model_wrapper.HybridModelWrapper"]], "hybridmodelwrapper.subsetdata (class in pipeline.model_wrapper)": [[12, "pipeline.model_wrapper.HybridModelWrapper.SubsetData"]], "hybridperfdata (class in pipeline.perf_data)": [[12, "pipeline.perf_data.HybridPerfData"]], "kfoldclassificationperfdata (class in pipeline.perf_data)": [[12, "pipeline.perf_data.KFoldClassificationPerfData"]], "kfoldregressionperfdata (class in pipeline.perf_data)": [[12, "pipeline.perf_data.KFoldRegressionPerfData"]], "kfoldsplitting (class in pipeline.splitting)": [[12, "pipeline.splitting.KFoldSplitting"]], "kerasdeepchemmodelwrapper (class in pipeline.model_wrapper)": [[12, "pipeline.model_wrapper.KerasDeepChemModelWrapper"]], "lctimeriterator (class in pipeline.model_wrapper)": [[12, "pipeline.model_wrapper.LCTimerIterator"]], "lctimerkfolditerator (class in pipeline.model_wrapper)": [[12, "pipeline.model_wrapper.LCTimerKFoldIterator"]], "mlmtclientinstantiationexception": [[12, "pipeline.model_tracker.MLMTClientInstantiationException"]], "minimaldataset (class in pipeline.model_datasets)": [[12, "pipeline.model_datasets.MinimalDataset"]], "modeldataset (class in pipeline.model_datasets)": [[12, "pipeline.model_datasets.ModelDataset"]], "modelpipeline (class in pipeline.model_pipeline)": [[12, "pipeline.model_pipeline.ModelPipeline"]], "modelwrapper (class in pipeline.model_wrapper)": [[12, "pipeline.model_wrapper.ModelWrapper"]], "multitaskdcmodelwrapper (class in pipeline.model_wrapper)": [[12, "pipeline.model_wrapper.MultitaskDCModelWrapper"]], "nnmodelwrapper (class in pipeline.model_wrapper)": [[12, "pipeline.model_wrapper.NNModelWrapper"]], "normalizationtransformerhybrid (class in pipeline.transformations)": [[12, "pipeline.transformations.NormalizationTransformerHybrid"]], "normalizationtransformermissingdata (class in pipeline.transformations)": [[12, "pipeline.transformations.NormalizationTransformerMissingData"]], "perfdata (class in pipeline.perf_data)": [[12, "pipeline.perf_data.PerfData"]], "persistentfeaturization (class in pipeline.featurization)": [[12, "pipeline.featurization.PersistentFeaturization"]], "pytorchdeepchemmodelwrapper (class in pipeline.model_wrapper)": [[12, "pipeline.model_wrapper.PytorchDeepChemModelWrapper"]], "regressionperfdata (class in pipeline.perf_data)": [[12, "pipeline.perf_data.RegressionPerfData"]], "simpleclassificationperfdata (class in pipeline.perf_data)": [[12, "pipeline.perf_data.SimpleClassificationPerfData"]], "simplehybridperfdata (class in pipeline.perf_data)": [[12, "pipeline.perf_data.SimpleHybridPerfData"]], "simpleregressionperfdata (class in pipeline.perf_data)": [[12, "pipeline.perf_data.SimpleRegressionPerfData"]], "splitting (class in pipeline.splitting)": [[12, "pipeline.splitting.Splitting"]], "trainvalidtestsplitting (class in pipeline.splitting)": [[12, "pipeline.splitting.TrainValidTestSplitting"]], "umaptransformer (class in pipeline.transformations)": [[12, "pipeline.transformations.UMAPTransformer"]], "accumulate() (pipeline.perf_data.epochmanager method)": [[12, "pipeline.perf_data.EpochManager.accumulate"]], "accumulate_preds() (pipeline.perf_data.classificationperfdata method)": [[12, "pipeline.perf_data.ClassificationPerfData.accumulate_preds"]], "accumulate_preds() (pipeline.perf_data.hybridperfdata method)": [[12, "pipeline.perf_data.HybridPerfData.accumulate_preds"]], "accumulate_preds() (pipeline.perf_data.kfoldclassificationperfdata method)": [[12, "pipeline.perf_data.KFoldClassificationPerfData.accumulate_preds"]], "accumulate_preds() (pipeline.perf_data.kfoldregressionperfdata method)": [[12, "pipeline.perf_data.KFoldRegressionPerfData.accumulate_preds"]], "accumulate_preds() (pipeline.perf_data.perfdata method)": [[12, "pipeline.perf_data.PerfData.accumulate_preds"]], "accumulate_preds() (pipeline.perf_data.regressionperfdata method)": [[12, "pipeline.perf_data.RegressionPerfData.accumulate_preds"]], "accumulate_preds() (pipeline.perf_data.simpleclassificationperfdata method)": [[12, "pipeline.perf_data.SimpleClassificationPerfData.accumulate_preds"]], "accumulate_preds() (pipeline.perf_data.simplehybridperfdata method)": [[12, "pipeline.perf_data.SimpleHybridPerfData.accumulate_preds"]], "accumulate_preds() (pipeline.perf_data.simpleregressionperfdata method)": [[12, "pipeline.perf_data.SimpleRegressionPerfData.accumulate_preds"]], "add_to_parser() (pipeline.parameter_parser.autoargumentadder method)": [[12, "pipeline.parameter_parser.AutoArgumentAdder.add_to_parser"]], "all_auto_arguments() (in module pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.all_auto_arguments"]], "all_auto_float_lists() (in module pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.all_auto_float_lists"]], "all_auto_int_lists() (in module pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.all_auto_int_lists"]], "all_auto_lists() (in module pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.all_auto_lists"]], "all_bases() (in module pipeline.model_wrapper)": [[12, "pipeline.model_wrapper.all_bases"]], "all_prefixed_names() (pipeline.parameter_parser.autoargumentadder method)": [[12, "pipeline.parameter_parser.AutoArgumentAdder.all_prefixed_names"]], "analyze_split() (in module pipeline.ave_splitter)": [[12, "pipeline.ave_splitter.analyze_split"]], "base_feature_importance() (in module pipeline.feature_importance)": [[12, "pipeline.feature_importance.base_feature_importance"]], "build_dataset_name() (in module pipeline.model_pipeline)": [[12, "pipeline.model_pipeline.build_dataset_name"]], "build_tarball_name() (in module pipeline.model_pipeline)": [[12, "pipeline.model_pipeline.build_tarball_name"]], "calc_ad_kmean_dist() (in module pipeline.model_pipeline)": [[12, "pipeline.model_pipeline.calc_AD_kmean_dist"]], "calc_ad_kmean_local_density() (in module pipeline.model_pipeline)": [[12, "pipeline.model_pipeline.calc_AD_kmean_local_density"]], "calc_dist_diskdataset() (in module pipeline.chem_diversity)": [[12, "pipeline.chem_diversity.calc_dist_diskdataset"]], "calc_dist_feat_array() (in module pipeline.chem_diversity)": [[12, "pipeline.chem_diversity.calc_dist_feat_array"]], "calc_dist_smiles() (in module pipeline.chem_diversity)": [[12, "pipeline.chem_diversity.calc_dist_smiles"]], "calc_summary() (in module pipeline.chem_diversity)": [[12, "pipeline.chem_diversity.calc_summary"]], "calc_train_dset_pair_dis() (pipeline.model_pipeline.modelpipeline method)": [[12, "pipeline.model_pipeline.ModelPipeline.calc_train_dset_pair_dis"]], "check_if_dupe_smiles_dataset() (in module pipeline.splitting)": [[12, "pipeline.splitting.check_if_dupe_smiles_dataset"]], "check_task_columns() (in module pipeline.model_datasets)": [[12, "pipeline.model_datasets.check_task_columns"]], "cluster_permutation_importance() (in module pipeline.feature_importance)": [[12, "pipeline.feature_importance.cluster_permutation_importance"]], "combined_training_data() (pipeline.model_datasets.modeldataset method)": [[12, "pipeline.model_datasets.ModelDataset.combined_training_data"]], "compact_dataset() (pipeline.splitting.datasetmanager method)": [[12, "pipeline.splitting.DatasetManager.compact_dataset"]], "compute() (pipeline.perf_data.epochmanager method)": [[12, "pipeline.perf_data.EpochManager.compute"]], "compute() (pipeline.perf_data.epochmanagerkfold method)": [[12, "pipeline.perf_data.EpochManagerKFold.compute"]], "compute_2d_mordred_descrs() (in module pipeline.featurization)": [[12, "pipeline.featurization.compute_2d_mordred_descrs"]], "compute_all_moe_descriptors() (in module pipeline.featurization)": [[12, "pipeline.featurization.compute_all_moe_descriptors"]], "compute_all_mordred_descrs() (in module pipeline.featurization)": [[12, "pipeline.featurization.compute_all_mordred_descrs"]], "compute_all_rdkit_descrs() (in module pipeline.featurization)": [[12, "pipeline.featurization.compute_all_rdkit_descrs"]], "compute_descriptors() (pipeline.featurization.computeddescriptorfeaturization method)": [[12, "pipeline.featurization.ComputedDescriptorFeaturization.compute_descriptors"]], "compute_moe_descriptors() (pipeline.featurization.computeddescriptorfeaturization method)": [[12, "pipeline.featurization.ComputedDescriptorFeaturization.compute_moe_descriptors"]], "compute_mordred_descriptors() (pipeline.featurization.computeddescriptorfeaturization method)": [[12, "pipeline.featurization.ComputedDescriptorFeaturization.compute_mordred_descriptors"]], "compute_mordred_descriptors_from_smiles() (in module pipeline.featurization)": [[12, "pipeline.featurization.compute_mordred_descriptors_from_smiles"]], "compute_perf_metrics() (pipeline.perf_data.hybridperfdata method)": [[12, "pipeline.perf_data.HybridPerfData.compute_perf_metrics"]], "compute_perf_metrics() (pipeline.perf_data.kfoldclassificationperfdata method)": [[12, "pipeline.perf_data.KFoldClassificationPerfData.compute_perf_metrics"]], "compute_perf_metrics() (pipeline.perf_data.kfoldregressionperfdata method)": [[12, "pipeline.perf_data.KFoldRegressionPerfData.compute_perf_metrics"]], "compute_perf_metrics() (pipeline.perf_data.perfdata method)": [[12, "pipeline.perf_data.PerfData.compute_perf_metrics"]], "compute_perf_metrics() (pipeline.perf_data.regressionperfdata method)": [[12, "pipeline.perf_data.RegressionPerfData.compute_perf_metrics"]], "compute_perf_metrics() (pipeline.perf_data.simpleclassificationperfdata method)": [[12, "pipeline.perf_data.SimpleClassificationPerfData.compute_perf_metrics"]], "compute_perf_metrics() (pipeline.perf_data.simplehybridperfdata method)": [[12, "pipeline.perf_data.SimpleHybridPerfData.compute_perf_metrics"]], "compute_perf_metrics() (pipeline.perf_data.simpleregressionperfdata method)": [[12, "pipeline.perf_data.SimpleRegressionPerfData.compute_perf_metrics"]], "compute_rdkit_descriptors() (pipeline.featurization.computeddescriptorfeaturization method)": [[12, "pipeline.featurization.ComputedDescriptorFeaturization.compute_rdkit_descriptors"]], "compute_rdkit_descriptors_from_smiles() (in module pipeline.featurization)": [[12, "pipeline.featurization.compute_rdkit_descriptors_from_smiles"]], "convert_metadata() (in module pipeline.model_tracker)": [[12, "pipeline.model_tracker.convert_metadata"]], "copy_best_filesystem_models() (in module pipeline.compare_models)": [[12, "pipeline.compare_models.copy_best_filesystem_models"]], "count_params() (pipeline.model_wrapper.kerasdeepchemmodelwrapper method)": [[12, "pipeline.model_wrapper.KerasDeepChemModelWrapper.count_params"]], "count_params() (pipeline.model_wrapper.pytorchdeepchemmodelwrapper method)": [[12, "pipeline.model_wrapper.PytorchDeepChemModelWrapper.count_params"]], "create_dataset_split_table() (pipeline.model_datasets.modeldataset method)": [[12, "pipeline.model_datasets.ModelDataset.create_dataset_split_table"]], "create_feature_transformer() (pipeline.featurization.descriptorfeaturization method)": [[12, "pipeline.featurization.DescriptorFeaturization.create_feature_transformer"]], "create_feature_transformer() (pipeline.featurization.dynamicfeaturization method)": [[12, "pipeline.featurization.DynamicFeaturization.create_feature_transformer"]], "create_feature_transformer() (pipeline.featurization.featurization method)": [[12, "pipeline.featurization.Featurization.create_feature_transformer"]], "create_feature_transformer() (pipeline.featurization.persistentfeaturization method)": [[12, "pipeline.featurization.PersistentFeaturization.create_feature_transformer"]], "create_feature_transformers() (in module pipeline.transformations)": [[12, "pipeline.transformations.create_feature_transformers"]], "create_featurization() (in module pipeline.featurization)": [[12, "pipeline.featurization.create_featurization"]], "create_minimal_dataset() (in module pipeline.model_datasets)": [[12, "pipeline.model_datasets.create_minimal_dataset"]], "create_model_dataset() (in module pipeline.model_datasets)": [[12, "pipeline.model_datasets.create_model_dataset"]], "create_model_metadata() (pipeline.model_pipeline.modelpipeline method)": [[12, "pipeline.model_pipeline.ModelPipeline.create_model_metadata"]], "create_model_wrapper() (in module pipeline.model_wrapper)": [[12, "pipeline.model_wrapper.create_model_wrapper"]], "create_perf_data() (in module pipeline.perf_data)": [[12, "pipeline.perf_data.create_perf_data"]], "create_prediction_metadata() (pipeline.model_pipeline.modelpipeline method)": [[12, "pipeline.model_pipeline.ModelPipeline.create_prediction_metadata"]], "create_prediction_pipeline() (in module pipeline.model_pipeline)": [[12, "pipeline.model_pipeline.create_prediction_pipeline"]], "create_prediction_pipeline_from_file() (in module pipeline.model_pipeline)": [[12, "pipeline.model_pipeline.create_prediction_pipeline_from_file"]], "create_split_dataset_from_metadata() (in module pipeline.model_datasets)": [[12, "pipeline.model_datasets.create_split_dataset_from_metadata"]], "create_splitting() (in module pipeline.splitting)": [[12, "pipeline.splitting.create_splitting"]], "create_transformers() (pipeline.model_wrapper.modelwrapper method)": [[12, "pipeline.model_wrapper.ModelWrapper.create_transformers"]], "create_weight_transformers() (in module pipeline.transformations)": [[12, "pipeline.transformations.create_weight_transformers"]], "dc_restore() (in module pipeline.model_wrapper)": [[12, "pipeline.model_wrapper.dc_restore"]], "dc_torch_restore() (in module pipeline.model_wrapper)": [[12, "pipeline.model_wrapper.dc_torch_restore"]], "del_ignored_params() (in module pipeline.compare_models)": [[12, "pipeline.compare_models.del_ignored_params"]], "desc_type_cols (pipeline.featurization.descriptorfeaturization attribute)": [[12, "pipeline.featurization.DescriptorFeaturization.desc_type_cols"]], "desc_type_scaled (pipeline.featurization.descriptorfeaturization attribute)": [[12, "pipeline.featurization.DescriptorFeaturization.desc_type_scaled"]], "desc_type_source (pipeline.featurization.descriptorfeaturization attribute)": [[12, "pipeline.featurization.DescriptorFeaturization.desc_type_source"]], "dict_to_list() (in module pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.dict_to_list"]], "display_feature_clusters() (in module pipeline.feature_importance)": [[12, "pipeline.feature_importance.display_feature_clusters"]], "diversity_plots() (in module pipeline.diversity_plots)": [[12, "pipeline.diversity_plots.diversity_plots"]], "ensemble_predict() (in module pipeline.model_pipeline)": [[12, "pipeline.model_pipeline.ensemble_predict"]], "expand_selection() (pipeline.splitting.datasetmanager method)": [[12, "pipeline.splitting.DatasetManager.expand_selection"]], "export_model() (in module pipeline.model_tracker)": [[12, "pipeline.model_tracker.export_model"]], "extract_collection_perf_metrics() (in module pipeline.compare_models)": [[12, "pipeline.compare_models.extract_collection_perf_metrics"]], "extract_datastore_model_tarball() (in module pipeline.model_tracker)": [[12, "pipeline.model_tracker.extract_datastore_model_tarball"]], "extract_featurizer_params() (in module pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.extract_featurizer_params"]], "extract_model_and_feature_parameters() (in module pipeline.compare_models)": [[12, "pipeline.compare_models.extract_model_and_feature_parameters"]], "extract_model_params() (in module pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.extract_model_params"]], "extract_params() (pipeline.parameter_parser.autoargumentadder method)": [[12, "pipeline.parameter_parser.AutoArgumentAdder.extract_params"]], "extract_prefeaturized_data() (pipeline.featurization.descriptorfeaturization method)": [[12, "pipeline.featurization.DescriptorFeaturization.extract_prefeaturized_data"]], "extract_prefeaturized_data() (pipeline.featurization.dynamicfeaturization method)": [[12, "pipeline.featurization.DynamicFeaturization.extract_prefeaturized_data"]], "extract_prefeaturized_data() (pipeline.featurization.featurization method)": [[12, "pipeline.featurization.Featurization.extract_prefeaturized_data"]], "extract_prefeaturized_data() (pipeline.featurization.persistentfeaturization method)": [[12, "pipeline.featurization.PersistentFeaturization.extract_prefeaturized_data"]], "featurize() (pipeline.featurization.dynamicfeaturization method)": [[12, "pipeline.featurization.DynamicFeaturization.featurize"]], "featurize() (pipeline.featurization.embeddingfeaturization method)": [[12, "pipeline.featurization.EmbeddingFeaturization.featurize"]], "featurize_data() (pipeline.featurization.computeddescriptorfeaturization method)": [[12, "pipeline.featurization.ComputedDescriptorFeaturization.featurize_data"]], "featurize_data() (pipeline.featurization.descriptorfeaturization method)": [[12, "pipeline.featurization.DescriptorFeaturization.featurize_data"]], "featurize_data() (pipeline.featurization.dynamicfeaturization method)": [[12, "pipeline.featurization.DynamicFeaturization.featurize_data"]], "featurize_data() (pipeline.featurization.embeddingfeaturization method)": [[12, "pipeline.featurization.EmbeddingFeaturization.featurize_data"]], "featurize_data() (pipeline.featurization.featurization method)": [[12, "pipeline.featurization.Featurization.featurize_data"]], "featurize_data() (pipeline.featurization.persistentfeaturization method)": [[12, "pipeline.featurization.PersistentFeaturization.featurize_data"]], "featurize_smiles() (in module pipeline.featurization)": [[12, "pipeline.featurization.featurize_smiles"]], "flatten_dict() (in module pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.flatten_dict"]], "generate_embeddings() (pipeline.model_wrapper.graphconvdcmodelwrapper method)": [[12, "pipeline.model_wrapper.GraphConvDCModelWrapper.generate_embeddings"]], "generate_embeddings() (pipeline.model_wrapper.modelwrapper method)": [[12, "pipeline.model_wrapper.ModelWrapper.generate_embeddings"]], "generate_embeddings() (pipeline.model_wrapper.multitaskdcmodelwrapper method)": [[12, "pipeline.model_wrapper.MultitaskDCModelWrapper.generate_embeddings"]], "generate_predictions() (pipeline.model_wrapper.dcrfmodelwrapper method)": [[12, "pipeline.model_wrapper.DCRFModelWrapper.generate_predictions"]], "generate_predictions() (pipeline.model_wrapper.dcxgboostmodelwrapper method)": [[12, "pipeline.model_wrapper.DCxgboostModelWrapper.generate_predictions"]], "generate_predictions() (pipeline.model_wrapper.hybridmodelwrapper method)": [[12, "pipeline.model_wrapper.HybridModelWrapper.generate_predictions"]], "generate_predictions() (pipeline.model_wrapper.modelwrapper method)": [[12, "pipeline.model_wrapper.ModelWrapper.generate_predictions"]], "generate_predictions() (pipeline.model_wrapper.nnmodelwrapper method)": [[12, "pipeline.model_wrapper.NNModelWrapper.generate_predictions"]], "get_2d_mols() (in module pipeline.featurization)": [[12, "pipeline.featurization.get_2d_mols"]], "get_3d_mols() (in module pipeline.featurization)": [[12, "pipeline.featurization.get_3d_mols"]], "get_best_models_info() (in module pipeline.compare_models)": [[12, "pipeline.compare_models.get_best_models_info"]], "get_best_perf_table() (in module pipeline.compare_models)": [[12, "pipeline.compare_models.get_best_perf_table"]], "get_collection_datasets() (in module pipeline.compare_models)": [[12, "pipeline.compare_models.get_collection_datasets"]], "get_dataset_attributes() (in module pipeline.featurization)": [[12, "pipeline.featurization.get_dataset_attributes"]], "get_dataset_models() (in module pipeline.compare_models)": [[12, "pipeline.compare_models.get_dataset_models"]], "get_dataset_tasks() (pipeline.model_datasets.datastoredataset method)": [[12, "pipeline.model_datasets.DatastoreDataset.get_dataset_tasks"]], "get_dataset_tasks() (pipeline.model_datasets.filedataset method)": [[12, "pipeline.model_datasets.FileDataset.get_dataset_tasks"]], "get_dataset_tasks() (pipeline.model_datasets.minimaldataset method)": [[12, "pipeline.model_datasets.MinimalDataset.get_dataset_tasks"]], "get_dataset_tasks() (pipeline.model_datasets.modeldataset method)": [[12, "pipeline.model_datasets.ModelDataset.get_dataset_tasks"]], "get_feature_columns() (pipeline.featurization.descriptorfeaturization method)": [[12, "pipeline.featurization.DescriptorFeaturization.get_feature_columns"]], "get_feature_columns() (pipeline.featurization.dynamicfeaturization method)": [[12, "pipeline.featurization.DynamicFeaturization.get_feature_columns"]], "get_feature_columns() (pipeline.featurization.featurization method)": [[12, "pipeline.featurization.Featurization.get_feature_columns"]], "get_feature_count() (pipeline.featurization.descriptorfeaturization method)": [[12, "pipeline.featurization.DescriptorFeaturization.get_feature_count"]], "get_feature_count() (pipeline.featurization.dynamicfeaturization method)": [[12, "pipeline.featurization.DynamicFeaturization.get_feature_count"]], "get_feature_count() (pipeline.featurization.embeddingfeaturization method)": [[12, "pipeline.featurization.EmbeddingFeaturization.get_feature_count"]], "get_feature_count() (pipeline.featurization.featurization method)": [[12, "pipeline.featurization.Featurization.get_feature_count"]], "get_feature_specific_metadata() (pipeline.featurization.descriptorfeaturization method)": [[12, "pipeline.featurization.DescriptorFeaturization.get_feature_specific_metadata"]], "get_feature_specific_metadata() (pipeline.featurization.dynamicfeaturization method)": [[12, "pipeline.featurization.DynamicFeaturization.get_feature_specific_metadata"]], "get_feature_specific_metadata() (pipeline.featurization.embeddingfeaturization method)": [[12, "pipeline.featurization.EmbeddingFeaturization.get_feature_specific_metadata"]], "get_feature_specific_metadata() (pipeline.featurization.featurization method)": [[12, "pipeline.featurization.Featurization.get_feature_specific_metadata"]], "get_featurized_data() (pipeline.model_datasets.minimaldataset method)": [[12, "pipeline.model_datasets.MinimalDataset.get_featurized_data"]], "get_featurized_data() (pipeline.model_datasets.modeldataset method)": [[12, "pipeline.model_datasets.ModelDataset.get_featurized_data"]], "get_featurized_data_subdir() (pipeline.featurization.descriptorfeaturization method)": [[12, "pipeline.featurization.DescriptorFeaturization.get_featurized_data_subdir"]], "get_featurized_data_subdir() (pipeline.featurization.dynamicfeaturization method)": [[12, "pipeline.featurization.DynamicFeaturization.get_featurized_data_subdir"]], "get_featurized_data_subdir() (pipeline.featurization.featurization method)": [[12, "pipeline.featurization.Featurization.get_featurized_data_subdir"]], "get_featurized_dset_name() (pipeline.featurization.computeddescriptorfeaturization method)": [[12, "pipeline.featurization.ComputedDescriptorFeaturization.get_featurized_dset_name"]], "get_featurized_dset_name() (pipeline.featurization.descriptorfeaturization method)": [[12, "pipeline.featurization.DescriptorFeaturization.get_featurized_dset_name"]], "get_featurized_dset_name() (pipeline.featurization.dynamicfeaturization method)": [[12, "pipeline.featurization.DynamicFeaturization.get_featurized_dset_name"]], "get_featurized_dset_name() (pipeline.featurization.featurization method)": [[12, "pipeline.featurization.Featurization.get_featurized_dset_name"]], "get_filesystem_models() (in module pipeline.compare_models)": [[12, "pipeline.compare_models.get_filesystem_models"]], "get_filesystem_perf_results() (in module pipeline.compare_models)": [[12, "pipeline.compare_models.get_filesystem_perf_results"]], "get_full_dataset_perf_data() (pipeline.model_wrapper.modelwrapper method)": [[12, "pipeline.model_wrapper.ModelWrapper.get_full_dataset_perf_data"]], "get_full_dataset_pred_results() (pipeline.model_wrapper.modelwrapper method)": [[12, "pipeline.model_wrapper.ModelWrapper.get_full_dataset_pred_results"]], "get_full_metadata() (in module pipeline.model_tracker)": [[12, "pipeline.model_tracker.get_full_metadata"]], "get_full_metadata_by_uuid() (in module pipeline.model_tracker)": [[12, "pipeline.model_tracker.get_full_metadata_by_uuid"]], "get_latest_pytorch_checkpoint() (in module pipeline.model_wrapper)": [[12, "pipeline.model_wrapper.get_latest_pytorch_checkpoint"]], "get_list_args() (pipeline.parameter_parser.autoargumentadder method)": [[12, "pipeline.parameter_parser.AutoArgumentAdder.get_list_args"]], "get_list_float_args() (pipeline.parameter_parser.autoargumentadder method)": [[12, "pipeline.parameter_parser.AutoArgumentAdder.get_list_float_args"]], "get_list_int_args() (pipeline.parameter_parser.autoargumentadder method)": [[12, "pipeline.parameter_parser.AutoArgumentAdder.get_list_int_args"]], "get_metadata_by_uuid() (in module pipeline.model_tracker)": [[12, "pipeline.model_tracker.get_metadata_by_uuid"]], "get_metrics() (pipeline.model_pipeline.modelpipeline method)": [[12, "pipeline.model_pipeline.ModelPipeline.get_metrics"]], "get_model_collection_by_uuid() (in module pipeline.model_tracker)": [[12, "pipeline.model_tracker.get_model_collection_by_uuid"]], "get_model_specific_metadata() (pipeline.model_wrapper.dcrfmodelwrapper method)": [[12, "pipeline.model_wrapper.DCRFModelWrapper.get_model_specific_metadata"]], "get_model_specific_metadata() (pipeline.model_wrapper.dcxgboostmodelwrapper method)": [[12, "pipeline.model_wrapper.DCxgboostModelWrapper.get_model_specific_metadata"]], "get_model_specific_metadata() (pipeline.model_wrapper.graphconvdcmodelwrapper method)": [[12, "pipeline.model_wrapper.GraphConvDCModelWrapper.get_model_specific_metadata"]], "get_model_specific_metadata() (pipeline.model_wrapper.hybridmodelwrapper method)": [[12, "pipeline.model_wrapper.HybridModelWrapper.get_model_specific_metadata"]], "get_model_specific_metadata() (pipeline.model_wrapper.modelwrapper method)": [[12, "pipeline.model_wrapper.ModelWrapper.get_model_specific_metadata"]], "get_model_specific_metadata() (pipeline.model_wrapper.multitaskdcmodelwrapper method)": [[12, "pipeline.model_wrapper.MultitaskDCModelWrapper.get_model_specific_metadata"]], "get_model_specific_metadata() (pipeline.model_wrapper.pytorchdeepchemmodelwrapper method)": [[12, "pipeline.model_wrapper.PytorchDeepChemModelWrapper.get_model_specific_metadata"]], "get_model_training_data_by_uuid() (in module pipeline.model_tracker)": [[12, "pipeline.model_tracker.get_model_training_data_by_uuid"]], "get_mordred_calculator() (in module pipeline.featurization)": [[12, "pipeline.featurization.get_mordred_calculator"]], "get_multitask_perf_from_files() (in module pipeline.compare_models)": [[12, "pipeline.compare_models.get_multitask_perf_from_files"]], "get_multitask_perf_from_files_new() (in module pipeline.compare_models)": [[12, "pipeline.compare_models.get_multitask_perf_from_files_new"]], "get_multitask_perf_from_tracker() (in module pipeline.compare_models)": [[12, "pipeline.compare_models.get_multitask_perf_from_tracker"]], "get_num_features() (pipeline.model_wrapper.modelwrapper method)": [[12, "pipeline.model_wrapper.ModelWrapper.get_num_features"]], "get_parser() (in module pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.get_parser"]], "get_perf_data() (pipeline.model_wrapper.dcxgboostmodelwrapper method)": [[12, "pipeline.model_wrapper.DCxgboostModelWrapper.get_perf_data"]], "get_perf_data() (pipeline.model_wrapper.forestmodelwrapper method)": [[12, "pipeline.model_wrapper.ForestModelWrapper.get_perf_data"]], "get_perf_data() (pipeline.model_wrapper.nnmodelwrapper method)": [[12, "pipeline.model_wrapper.NNModelWrapper.get_perf_data"]], "get_pred_results() (pipeline.model_wrapper.dcxgboostmodelwrapper method)": [[12, "pipeline.model_wrapper.DCxgboostModelWrapper.get_pred_results"]], "get_pred_results() (pipeline.model_wrapper.forestmodelwrapper method)": [[12, "pipeline.model_wrapper.ForestModelWrapper.get_pred_results"]], "get_pred_results() (pipeline.model_wrapper.nnmodelwrapper method)": [[12, "pipeline.model_wrapper.NNModelWrapper.get_pred_results"]], "get_pred_values() (pipeline.perf_data.classificationperfdata method)": [[12, "pipeline.perf_data.ClassificationPerfData.get_pred_values"]], "get_pred_values() (pipeline.perf_data.hybridperfdata method)": [[12, "pipeline.perf_data.HybridPerfData.get_pred_values"]], "get_pred_values() (pipeline.perf_data.kfoldclassificationperfdata method)": [[12, "pipeline.perf_data.KFoldClassificationPerfData.get_pred_values"]], "get_pred_values() (pipeline.perf_data.kfoldregressionperfdata method)": [[12, "pipeline.perf_data.KFoldRegressionPerfData.get_pred_values"]], "get_pred_values() (pipeline.perf_data.perfdata method)": [[12, "pipeline.perf_data.PerfData.get_pred_values"]], "get_pred_values() (pipeline.perf_data.regressionperfdata method)": [[12, "pipeline.perf_data.RegressionPerfData.get_pred_values"]], "get_pred_values() (pipeline.perf_data.simpleclassificationperfdata method)": [[12, "pipeline.perf_data.SimpleClassificationPerfData.get_pred_values"]], "get_pred_values() (pipeline.perf_data.simplehybridperfdata method)": [[12, "pipeline.perf_data.SimpleHybridPerfData.get_pred_values"]], "get_pred_values() (pipeline.perf_data.simpleregressionperfdata method)": [[12, "pipeline.perf_data.SimpleRegressionPerfData.get_pred_values"]], "get_prediction_results() (pipeline.perf_data.classificationperfdata method)": [[12, "pipeline.perf_data.ClassificationPerfData.get_prediction_results"]], "get_prediction_results() (pipeline.perf_data.hybridperfdata method)": [[12, "pipeline.perf_data.HybridPerfData.get_prediction_results"]], "get_prediction_results() (pipeline.perf_data.perfdata method)": [[12, "pipeline.perf_data.PerfData.get_prediction_results"]], "get_prediction_results() (pipeline.perf_data.regressionperfdata method)": [[12, "pipeline.perf_data.RegressionPerfData.get_prediction_results"]], "get_rdkit_calculator() (in module pipeline.featurization)": [[12, "pipeline.featurization.get_rdkit_calculator"]], "get_real_values() (pipeline.perf_data.kfoldclassificationperfdata method)": [[12, "pipeline.perf_data.KFoldClassificationPerfData.get_real_values"]], "get_real_values() (pipeline.perf_data.kfoldregressionperfdata method)": [[12, "pipeline.perf_data.KFoldRegressionPerfData.get_real_values"]], "get_real_values() (pipeline.perf_data.perfdata method)": [[12, "pipeline.perf_data.PerfData.get_real_values"]], "get_real_values() (pipeline.perf_data.simpleclassificationperfdata method)": [[12, "pipeline.perf_data.SimpleClassificationPerfData.get_real_values"]], "get_real_values() (pipeline.perf_data.simplehybridperfdata method)": [[12, "pipeline.perf_data.SimpleHybridPerfData.get_real_values"]], "get_real_values() (pipeline.perf_data.simpleregressionperfdata method)": [[12, "pipeline.perf_data.SimpleRegressionPerfData.get_real_values"]], "get_split_metadata() (pipeline.model_datasets.modeldataset method)": [[12, "pipeline.model_datasets.ModelDataset.get_split_metadata"]], "get_split_prefix() (pipeline.splitting.kfoldsplitting method)": [[12, "pipeline.splitting.KFoldSplitting.get_split_prefix"]], "get_split_prefix() (pipeline.splitting.splitting method)": [[12, "pipeline.splitting.Splitting.get_split_prefix"]], "get_split_prefix() (pipeline.splitting.trainvalidtestsplitting method)": [[12, "pipeline.splitting.TrainValidTestSplitting.get_split_prefix"]], "get_statistics_missing_ydata() (in module pipeline.transformations)": [[12, "pipeline.transformations.get_statistics_missing_ydata"]], "get_subset_responses_and_weights() (pipeline.model_datasets.modeldataset method)": [[12, "pipeline.model_datasets.ModelDataset.get_subset_responses_and_weights"]], "get_summary_metadata_table() (in module pipeline.compare_models)": [[12, "pipeline.compare_models.get_summary_metadata_table"]], "get_summary_perf_tables() (in module pipeline.compare_models)": [[12, "pipeline.compare_models.get_summary_perf_tables"]], "get_tarball_perf_table() (in module pipeline.compare_models)": [[12, "pipeline.compare_models.get_tarball_perf_table"]], "get_test_perf_data() (pipeline.model_wrapper.modelwrapper method)": [[12, "pipeline.model_wrapper.ModelWrapper.get_test_perf_data"]], "get_test_pred_results() (pipeline.model_wrapper.modelwrapper method)": [[12, "pipeline.model_wrapper.ModelWrapper.get_test_pred_results"]], "get_train_valid_pred_results() (pipeline.model_wrapper.modelwrapper method)": [[12, "pipeline.model_wrapper.ModelWrapper.get_train_valid_pred_results"]], "get_training_datasets() (in module pipeline.compare_models)": [[12, "pipeline.compare_models.get_training_datasets"]], "get_training_perf_table() (in module pipeline.compare_models)": [[12, "pipeline.compare_models.get_training_perf_table"]], "get_transformer_specific_metadata() (in module pipeline.transformations)": [[12, "pipeline.transformations.get_transformer_specific_metadata"]], "get_umap_nn_model_perf_table() (in module pipeline.compare_models)": [[12, "pipeline.compare_models.get_umap_nn_model_perf_table"]], "get_user_specified_features() (in module pipeline.featurization)": [[12, "pipeline.featurization.get_user_specified_features"]], "get_weights() (pipeline.perf_data.kfoldclassificationperfdata method)": [[12, "pipeline.perf_data.KFoldClassificationPerfData.get_weights"]], "get_weights() (pipeline.perf_data.kfoldregressionperfdata method)": [[12, "pipeline.perf_data.KFoldRegressionPerfData.get_weights"]], "get_weights() (pipeline.perf_data.perfdata method)": [[12, "pipeline.perf_data.PerfData.get_weights"]], "get_weights() (pipeline.perf_data.simpleclassificationperfdata method)": [[12, "pipeline.perf_data.SimpleClassificationPerfData.get_weights"]], "get_weights() (pipeline.perf_data.simplehybridperfdata method)": [[12, "pipeline.perf_data.SimpleHybridPerfData.get_weights"]], "get_weights() (pipeline.perf_data.simpleregressionperfdata method)": [[12, "pipeline.perf_data.SimpleRegressionPerfData.get_weights"]], "has_all_feature_columns() (pipeline.model_datasets.modeldataset method)": [[12, "pipeline.model_datasets.ModelDataset.has_all_feature_columns"]], "is_list() (in module pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.is_list"]], "is_list_float() (in module pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.is_list_float"]], "is_list_int() (in module pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.is_list_int"]], "is_primative_type() (in module pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.is_primative_type"]], "key_value_list_to_dict() (in module pipeline.model_datasets)": [[12, "pipeline.model_datasets.key_value_list_to_dict"]], "list_defaults() (in module pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.list_defaults"]], "load_dataset_split_table() (pipeline.model_datasets.datastoredataset method)": [[12, "pipeline.model_datasets.DatastoreDataset.load_dataset_split_table"]], "load_dataset_split_table() (pipeline.model_datasets.filedataset method)": [[12, "pipeline.model_datasets.FileDataset.load_dataset_split_table"]], "load_descriptor_spec() (pipeline.featurization.descriptorfeaturization class method)": [[12, "pipeline.featurization.DescriptorFeaturization.load_descriptor_spec"]], "load_descriptor_table() (pipeline.featurization.descriptorfeaturization method)": [[12, "pipeline.featurization.DescriptorFeaturization.load_descriptor_table"]], "load_featurize_data() (pipeline.model_pipeline.modelpipeline method)": [[12, "pipeline.model_pipeline.ModelPipeline.load_featurize_data"]], "load_featurized_data() (pipeline.model_datasets.datastoredataset method)": [[12, "pipeline.model_datasets.DatastoreDataset.load_featurized_data"]], "load_featurized_data() (pipeline.model_datasets.filedataset method)": [[12, "pipeline.model_datasets.FileDataset.load_featurized_data"]], "load_featurized_data() (pipeline.model_datasets.modeldataset method)": [[12, "pipeline.model_datasets.ModelDataset.load_featurized_data"]], "load_from_tracker() (in module pipeline.model_pipeline)": [[12, "pipeline.model_pipeline.load_from_tracker"]], "load_full_dataset() (pipeline.model_datasets.datastoredataset method)": [[12, "pipeline.model_datasets.DatastoreDataset.load_full_dataset"]], "load_full_dataset() (pipeline.model_datasets.filedataset method)": [[12, "pipeline.model_datasets.FileDataset.load_full_dataset"]], "load_full_dataset() (pipeline.model_datasets.modeldataset method)": [[12, "pipeline.model_datasets.ModelDataset.load_full_dataset"]], "load_presplit_dataset() (pipeline.model_datasets.modeldataset method)": [[12, "pipeline.model_datasets.ModelDataset.load_presplit_dataset"]], "main() (in module pipeline.model_pipeline)": [[12, "pipeline.model_pipeline.main"]], "main() (in module pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.main"]], "make_dataset_key_absolute() (in module pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.make_dataset_key_absolute"]], "make_dc_model() (pipeline.model_wrapper.dcrfmodelwrapper method)": [[12, "pipeline.model_wrapper.DCRFModelWrapper.make_dc_model"]], "make_dc_model() (pipeline.model_wrapper.dcxgboostmodelwrapper method)": [[12, "pipeline.model_wrapper.DCxgboostModelWrapper.make_dc_model"]], "make_dc_model() (pipeline.model_wrapper.forestmodelwrapper method)": [[12, "pipeline.model_wrapper.ForestModelWrapper.make_dc_model"]], "make_weights() (in module pipeline.featurization)": [[12, "pipeline.featurization.make_weights"]], "mcs() (in module pipeline.dist_metrics)": [[12, "pipeline.dist_metrics.mcs"]], "model_choice_score() (pipeline.perf_data.classificationperfdata method)": [[12, "pipeline.perf_data.ClassificationPerfData.model_choice_score"]], "model_choice_score() (pipeline.perf_data.hybridperfdata method)": [[12, "pipeline.perf_data.HybridPerfData.model_choice_score"]], "model_choice_score() (pipeline.perf_data.regressionperfdata method)": [[12, "pipeline.perf_data.RegressionPerfData.model_choice_score"]], "model_save() (pipeline.model_wrapper.modelwrapper method)": [[12, "pipeline.model_wrapper.ModelWrapper.model_save"]], "module": [[12, "module-pipeline"], [12, "module-pipeline.ave_splitter"], [12, "module-pipeline.chem_diversity"], [12, "module-pipeline.compare_models"], [12, "module-pipeline.dist_metrics"], [12, "module-pipeline.diversity_plots"], [12, "module-pipeline.feature_importance"], [12, "module-pipeline.featurization"], [12, "module-pipeline.model_datasets"], [12, "module-pipeline.model_pipeline"], [12, "module-pipeline.model_tracker"], [12, "module-pipeline.model_wrapper"], [12, "module-pipeline.parameter_parser"], [12, "module-pipeline.perf_data"], [12, "module-pipeline.perf_plots"], [12, "module-pipeline.splitting"], [12, "module-pipeline.transformations"], [13, "module-utils"], [13, "module-utils.checksum_utils"], [13, "module-utils.compare_split_csv"], [13, "module-utils.compare_splits_plots"], [13, "module-utils.curate_data"], [13, "module-utils.data_curation_functions"], [13, "module-utils.datastore_functions"], [13, "module-utils.file_utils"], [13, "module-utils.genTestset"], [13, "module-utils.hyperparam_search_wrapper"], [13, "module-utils.llnl_utils"], [13, "module-utils.many_to_one"], [13, "module-utils.model_retrain"], [13, "module-utils.model_version_utils"], [13, "module-utils.process_slurm"], [13, "module-utils.pubchem_utils"], [13, "module-utils.rdkit_easy"], [13, "module-utils.struct_utils"]], "my_es_types (pipeline.featurization.atomatomtypeestate attribute)": [[12, "pipeline.featurization.ATOMAtomTypeEState.my_es_types"]], "needs_smiles() (pipeline.splitting.splitting method)": [[12, "pipeline.splitting.Splitting.needs_smiles"]], "negative_predictive_value() (in module pipeline.perf_data)": [[12, "pipeline.perf_data.negative_predictive_value"]], "num_trainable_parameters_from_file() (in module pipeline.compare_models)": [[12, "pipeline.compare_models.num_trainable_parameters_from_file"]], "on_new_best_valid() (pipeline.perf_data.epochmanager method)": [[12, "pipeline.perf_data.EpochManager.on_new_best_valid"]], "parameter_names (pipeline.featurization.atomatomtypeestate attribute)": [[12, "pipeline.featurization.ATOMAtomTypeEState.parameter_names"]], "parameter_names (pipeline.featurization.atommoleculardistanceedge attribute)": [[12, "pipeline.featurization.ATOMMolecularDistanceEdge.parameter_names"]], "parse_command_line() (in module pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.parse_command_line"]], "parse_config_file() (in module pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.parse_config_file"]], "parse_namespace() (in module pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.parse_namespace"]], "permutation() (in module pipeline.ave_splitter)": [[12, "pipeline.ave_splitter.permutation"]], "permutation_feature_importance() (in module pipeline.feature_importance)": [[12, "pipeline.feature_importance.permutation_feature_importance"]], "pipeline": [[12, "module-pipeline"]], "pipeline.ave_splitter": [[12, "module-pipeline.ave_splitter"]], "pipeline.chem_diversity": [[12, "module-pipeline.chem_diversity"]], "pipeline.compare_models": [[12, "module-pipeline.compare_models"]], "pipeline.dist_metrics": [[12, "module-pipeline.dist_metrics"]], "pipeline.diversity_plots": [[12, "module-pipeline.diversity_plots"]], "pipeline.feature_importance": [[12, "module-pipeline.feature_importance"]], "pipeline.featurization": [[12, "module-pipeline.featurization"]], "pipeline.model_datasets": [[12, "module-pipeline.model_datasets"]], "pipeline.model_pipeline": [[12, "module-pipeline.model_pipeline"]], "pipeline.model_tracker": [[12, "module-pipeline.model_tracker"]], "pipeline.model_wrapper": [[12, "module-pipeline.model_wrapper"]], "pipeline.parameter_parser": [[12, "module-pipeline.parameter_parser"]], "pipeline.perf_data": [[12, "module-pipeline.perf_data"]], "pipeline.perf_plots": [[12, "module-pipeline.perf_plots"]], "pipeline.splitting": [[12, "module-pipeline.splitting"]], "pipeline.transformations": [[12, "module-pipeline.transformations"]], "plot_roc_curve() (in module pipeline.perf_plots)": [[12, "pipeline.perf_plots.plot_ROC_curve"]], "plot_dataset_dist_distr() (in module pipeline.diversity_plots)": [[12, "pipeline.diversity_plots.plot_dataset_dist_distr"]], "plot_feature_importances() (in module pipeline.feature_importance)": [[12, "pipeline.feature_importance.plot_feature_importances"]], "plot_perf_vs_epoch() (in module pipeline.perf_plots)": [[12, "pipeline.perf_plots.plot_perf_vs_epoch"]], "plot_prec_recall_curve() (in module pipeline.perf_plots)": [[12, "pipeline.perf_plots.plot_prec_recall_curve"]], "plot_pred_vs_actual() (in module pipeline.perf_plots)": [[12, "pipeline.perf_plots.plot_pred_vs_actual"]], "plot_tani_dist_distr() (in module pipeline.diversity_plots)": [[12, "pipeline.diversity_plots.plot_tani_dist_distr"]], "plot_umap_feature_projections() (in module pipeline.perf_plots)": [[12, "pipeline.perf_plots.plot_umap_feature_projections"]], "plot_umap_train_set_neighbors() (in module pipeline.perf_plots)": [[12, "pipeline.perf_plots.plot_umap_train_set_neighbors"]], "postprocess_args() (in module pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.postprocess_args"]], "predict_embedding() (pipeline.model_pipeline.modelpipeline method)": [[12, "pipeline.model_pipeline.ModelPipeline.predict_embedding"]], "predict_full_dataset() (pipeline.model_pipeline.modelpipeline method)": [[12, "pipeline.model_pipeline.ModelPipeline.predict_full_dataset"]], "predict_on_dataframe() (pipeline.model_pipeline.modelpipeline method)": [[12, "pipeline.model_pipeline.ModelPipeline.predict_on_dataframe"]], "predict_on_smiles() (pipeline.model_pipeline.modelpipeline method)": [[12, "pipeline.model_pipeline.ModelPipeline.predict_on_smiles"]], "preset() (pipeline.featurization.atomatomtypeestate class method)": [[12, "pipeline.featurization.ATOMAtomTypeEState.preset"]], "preset() (pipeline.featurization.atommoleculardistanceedge class method)": [[12, "pipeline.featurization.ATOMMolecularDistanceEdge.preset"]], "primative_type_only() (in module pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.primative_type_only"]], "prune_defaults() (in module pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.prune_defaults"]], "recreate_model() (pipeline.model_wrapper.graphconvdcmodelwrapper method)": [[12, "pipeline.model_wrapper.GraphConvDCModelWrapper.recreate_model"]], "recreate_model() (pipeline.model_wrapper.multitaskdcmodelwrapper method)": [[12, "pipeline.model_wrapper.MultitaskDCModelWrapper.recreate_model"]], "recreate_model() (pipeline.model_wrapper.pytorchdeepchemmodelwrapper method)": [[12, "pipeline.model_wrapper.PytorchDeepChemModelWrapper.recreate_model"]], "regenerate_results() (in module pipeline.model_pipeline)": [[12, "pipeline.model_pipeline.regenerate_results"]], "reload_model() (pipeline.model_wrapper.dcxgboostmodelwrapper method)": [[12, "pipeline.model_wrapper.DCxgboostModelWrapper.reload_model"]], "reload_model() (pipeline.model_wrapper.forestmodelwrapper method)": [[12, "pipeline.model_wrapper.ForestModelWrapper.reload_model"]], "reload_model() (pipeline.model_wrapper.hybridmodelwrapper method)": [[12, "pipeline.model_wrapper.HybridModelWrapper.reload_model"]], "reload_model() (pipeline.model_wrapper.kerasdeepchemmodelwrapper method)": [[12, "pipeline.model_wrapper.KerasDeepChemModelWrapper.reload_model"]], "reload_model() (pipeline.model_wrapper.modelwrapper method)": [[12, "pipeline.model_wrapper.ModelWrapper.reload_model"]], "reload_model() (pipeline.model_wrapper.pytorchdeepchemmodelwrapper method)": [[12, "pipeline.model_wrapper.PytorchDeepChemModelWrapper.reload_model"]], "reload_transformers() (pipeline.model_wrapper.modelwrapper method)": [[12, "pipeline.model_wrapper.ModelWrapper.reload_transformers"]], "remove_duplicate_smiles() (in module pipeline.featurization)": [[12, "pipeline.featurization.remove_duplicate_smiles"]], "remove_unrecognized_arguments() (in module pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.remove_unrecognized_arguments"]], "restore() (pipeline.model_wrapper.kerasdeepchemmodelwrapper method)": [[12, "pipeline.model_wrapper.KerasDeepChemModelWrapper.restore"]], "restore() (pipeline.model_wrapper.nnmodelwrapper method)": [[12, "pipeline.model_wrapper.NNModelWrapper.restore"]], "restore() (pipeline.model_wrapper.pytorchdeepchemmodelwrapper method)": [[12, "pipeline.model_wrapper.PytorchDeepChemModelWrapper.restore"]], "retrain_model() (in module pipeline.model_pipeline)": [[12, "pipeline.model_pipeline.retrain_model"]], "rms_error() (in module pipeline.perf_data)": [[12, "pipeline.perf_data.rms_error"]], "run_models() (in module pipeline.model_pipeline)": [[12, "pipeline.model_pipeline.run_models"]], "run_predictions() (pipeline.model_pipeline.modelpipeline method)": [[12, "pipeline.model_pipeline.ModelPipeline.run_predictions"]], "save_featurized_data() (pipeline.model_datasets.datastoredataset method)": [[12, "pipeline.model_datasets.DatastoreDataset.save_featurized_data"]], "save_featurized_data() (pipeline.model_datasets.filedataset method)": [[12, "pipeline.model_datasets.FileDataset.save_featurized_data"]], "save_featurized_data() (pipeline.model_datasets.minimaldataset method)": [[12, "pipeline.model_datasets.MinimalDataset.save_featurized_data"]], "save_joined_dataset() (in module pipeline.model_datasets)": [[12, "pipeline.model_datasets.save_joined_dataset"]], "save_metrics() (pipeline.model_pipeline.modelpipeline method)": [[12, "pipeline.model_pipeline.ModelPipeline.save_metrics"]], "save_model() (in module pipeline.model_tracker)": [[12, "pipeline.model_tracker.save_model"]], "save_model() (pipeline.model_wrapper.hybridmodelwrapper method)": [[12, "pipeline.model_wrapper.HybridModelWrapper.save_model"]], "save_model_metadata() (pipeline.model_pipeline.modelpipeline method)": [[12, "pipeline.model_pipeline.ModelPipeline.save_model_metadata"]], "save_model_tarball() (in module pipeline.model_tracker)": [[12, "pipeline.model_tracker.save_model_tarball"]], "save_split_dataset() (pipeline.model_datasets.datastoredataset method)": [[12, "pipeline.model_datasets.DatastoreDataset.save_split_dataset"]], "save_split_dataset() (pipeline.model_datasets.filedataset method)": [[12, "pipeline.model_datasets.FileDataset.save_split_dataset"]], "scale_moe_descriptors() (pipeline.featurization.computeddescriptorfeaturization method)": [[12, "pipeline.featurization.ComputedDescriptorFeaturization.scale_moe_descriptors"]], "select_attrs_by_dset_ids() (in module pipeline.splitting)": [[12, "pipeline.splitting.select_attrs_by_dset_ids"]], "select_attrs_by_dset_smiles() (in module pipeline.splitting)": [[12, "pipeline.splitting.select_attrs_by_dset_smiles"]], "select_dset_by_attr_ids() (in module pipeline.splitting)": [[12, "pipeline.splitting.select_dset_by_attr_ids"]], "select_dset_by_id_list() (in module pipeline.splitting)": [[12, "pipeline.splitting.select_dset_by_id_list"]], "set_group_permissions() (in module pipeline.model_datasets)": [[12, "pipeline.model_datasets.set_group_permissions"]], "set_make_pred() (pipeline.perf_data.epochmanager method)": [[12, "pipeline.perf_data.EpochManager.set_make_pred"]], "setup_model_dirs() (pipeline.model_wrapper.modelwrapper method)": [[12, "pipeline.model_wrapper.ModelWrapper.setup_model_dirs"]], "should_stop() (pipeline.perf_data.epochmanager method)": [[12, "pipeline.perf_data.EpochManager.should_stop"]], "shuffle() (in module pipeline.ave_splitter)": [[12, "pipeline.ave_splitter.shuffle"]], "split() (pipeline.ave_splitter.aveminsplitter method)": [[12, "pipeline.ave_splitter.AVEMinSplitter.split"]], "split_dataset() (pipeline.model_datasets.modeldataset method)": [[12, "pipeline.model_datasets.ModelDataset.split_dataset"]], "split_dataset() (pipeline.model_pipeline.modelpipeline method)": [[12, "pipeline.model_pipeline.ModelPipeline.split_dataset"]], "split_dataset() (pipeline.splitting.kfoldsplitting method)": [[12, "pipeline.splitting.KFoldSplitting.split_dataset"]], "split_dataset() (pipeline.splitting.splitting method)": [[12, "pipeline.splitting.Splitting.split_dataset"]], "split_dataset() (pipeline.splitting.trainvalidtestsplitting method)": [[12, "pipeline.splitting.TrainValidTestSplitting.split_dataset"]], "supported_descriptor_types (pipeline.featurization.descriptorfeaturization attribute)": [[12, "pipeline.featurization.DescriptorFeaturization.supported_descriptor_types"]], "tanimoto() (in module pipeline.dist_metrics)": [[12, "pipeline.dist_metrics.tanimoto"]], "tanimoto_single() (in module pipeline.dist_metrics)": [[12, "pipeline.dist_metrics.tanimoto_single"]], "to_str() (in module pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.to_str"]], "train() (pipeline.model_wrapper.dcrfmodelwrapper method)": [[12, "pipeline.model_wrapper.DCRFModelWrapper.train"]], "train() (pipeline.model_wrapper.dcxgboostmodelwrapper method)": [[12, "pipeline.model_wrapper.DCxgboostModelWrapper.train"]], "train() (pipeline.model_wrapper.forestmodelwrapper method)": [[12, "pipeline.model_wrapper.ForestModelWrapper.train"]], "train() (pipeline.model_wrapper.hybridmodelwrapper method)": [[12, "pipeline.model_wrapper.HybridModelWrapper.train"]], "train() (pipeline.model_wrapper.modelwrapper method)": [[12, "pipeline.model_wrapper.ModelWrapper.train"]], "train() (pipeline.model_wrapper.nnmodelwrapper method)": [[12, "pipeline.model_wrapper.NNModelWrapper.train"]], "train_kfold_cv() (pipeline.model_wrapper.nnmodelwrapper method)": [[12, "pipeline.model_wrapper.NNModelWrapper.train_kfold_cv"]], "train_model() (pipeline.model_pipeline.modelpipeline method)": [[12, "pipeline.model_pipeline.ModelPipeline.train_model"]], "train_with_early_stopping() (pipeline.model_wrapper.nnmodelwrapper method)": [[12, "pipeline.model_wrapper.NNModelWrapper.train_with_early_stopping"]], "transform() (pipeline.transformations.normalizationtransformerhybrid method)": [[12, "pipeline.transformations.NormalizationTransformerHybrid.transform"]], "transform() (pipeline.transformations.normalizationtransformermissingdata method)": [[12, "pipeline.transformations.NormalizationTransformerMissingData.transform"]], "transform() (pipeline.transformations.umaptransformer method)": [[12, "pipeline.transformations.UMAPTransformer.transform"]], "transform_array() (pipeline.transformations.normalizationtransformerhybrid method)": [[12, "pipeline.transformations.NormalizationTransformerHybrid.transform_array"]], "transform_array() (pipeline.transformations.normalizationtransformermissingdata method)": [[12, "pipeline.transformations.NormalizationTransformerMissingData.transform_array"]], "transform_array() (pipeline.transformations.umaptransformer method)": [[12, "pipeline.transformations.UMAPTransformer.transform_array"]], "transform_dataset() (pipeline.model_wrapper.modelwrapper method)": [[12, "pipeline.model_wrapper.ModelWrapper.transform_dataset"]], "transformers_needed() (in module pipeline.transformations)": [[12, "pipeline.transformations.transformers_needed"]], "untransform() (pipeline.transformations.normalizationtransformerhybrid method)": [[12, "pipeline.transformations.NormalizationTransformerHybrid.untransform"]], "untransform() (pipeline.transformations.normalizationtransformermissingdata method)": [[12, "pipeline.transformations.NormalizationTransformerMissingData.untransform"]], "untransform() (pipeline.transformations.umaptransformer method)": [[12, "pipeline.transformations.UMAPTransformer.untransform"]], "update() (pipeline.perf_data.epochmanager method)": [[12, "pipeline.perf_data.EpochManager.update"]], "update_epoch() (pipeline.perf_data.epochmanager method)": [[12, "pipeline.perf_data.EpochManager.update_epoch"]], "update_valid() (pipeline.perf_data.epochmanager method)": [[12, "pipeline.perf_data.EpochManager.update_valid"]], "upload_distmatrix_to_ds() (in module pipeline.chem_diversity)": [[12, "pipeline.chem_diversity.upload_distmatrix_to_DS"]], "wrapper() (in module pipeline.parameter_parser)": [[12, "pipeline.parameter_parser.wrapper"]], "geometricsearch (class in utils.hyperparam_search_wrapper)": [[13, "utils.hyperparam_search_wrapper.GeometricSearch"]], "gridsearch (class in utils.hyperparam_search_wrapper)": [[13, "utils.hyperparam_search_wrapper.GridSearch"]], "hyperoptsearch (class in utils.hyperparam_search_wrapper)": [[13, "utils.hyperparam_search_wrapper.HyperOptSearch"]], "hyperparametersearch (class in utils.hyperparam_search_wrapper)": [[13, "utils.hyperparam_search_wrapper.HyperparameterSearch"]], "manytooneexception": [[13, "utils.many_to_one.ManyToOneException"]], "nancompoundidexception": [[13, "utils.many_to_one.NANCompoundIDException"]], "nansmilesexception": [[13, "utils.many_to_one.NANSMILESException"]], "randomsearch (class in utils.hyperparam_search_wrapper)": [[13, "utils.hyperparam_search_wrapper.RandomSearch"]], "splitstats (class in utils.compare_splits_plots)": [[13, "utils.compare_splits_plots.SplitStats"]], "union() (in module utils.gentestset)": [[13, "utils.genTestset.Union"]], "userspecifiedsearch (class in utils.hyperparam_search_wrapper)": [[13, "utils.hyperparam_search_wrapper.UserSpecifiedSearch"]], "add_classification_column() (in module utils.curate_data)": [[13, "utils.curate_data.add_classification_column"]], "add_mol_column() (in module utils.rdkit_easy)": [[13, "utils.rdkit_easy.add_mol_column"]], "aggregate_assay_data() (in module utils.curate_data)": [[13, "utils.curate_data.aggregate_assay_data"]], "aggregate_basesmiles() (in module utils.gentestset)": [[13, "utils.genTestset.aggregate_basesmiles"]], "already_run() (utils.hyperparam_search_wrapper.hyperparametersearch method)": [[13, "utils.hyperparam_search_wrapper.HyperparameterSearch.already_run"]], "assemble_layers() (utils.hyperparam_search_wrapper.hyperparametersearch method)": [[13, "utils.hyperparam_search_wrapper.HyperparameterSearch.assemble_layers"]], "atom_curation() (in module utils.data_curation_functions)": [[13, "utils.data_curation_functions.atom_curation"]], "atom_curation_excape() (in module utils.data_curation_functions)": [[13, "utils.data_curation_functions.atom_curation_excape"]], "average_and_remove_duplicates() (in module utils.curate_data)": [[13, "utils.curate_data.average_and_remove_duplicates"]], "base_mol_from_inchi() (in module utils.struct_utils)": [[13, "utils.struct_utils.base_mol_from_inchi"]], "base_mol_from_smiles() (in module utils.struct_utils)": [[13, "utils.struct_utils.base_mol_from_smiles"]], "base_smiles_from_inchi() (in module utils.struct_utils)": [[13, "utils.struct_utils.base_smiles_from_inchi"]], "base_smiles_from_smiles() (in module utils.struct_utils)": [[13, "utils.struct_utils.base_smiles_from_smiles"]], "build_hyperopt_search_domain() (in module utils.hyperparam_search_wrapper)": [[13, "utils.hyperparam_search_wrapper.build_hyperopt_search_domain"]], "build_jobs() (utils.hyperparam_search_wrapper.hyperparametersearch method)": [[13, "utils.hyperparam_search_wrapper.HyperparameterSearch.build_jobs"]], "build_search() (in module utils.hyperparam_search_wrapper)": [[13, "utils.hyperparam_search_wrapper.build_search"]], "bulk_export_kv_for_files() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.bulk_export_kv_for_files"]], "bulk_update_kv() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.bulk_update_kv"]], "calculate_descriptors() (in module utils.rdkit_easy)": [[13, "utils.rdkit_easy.calculate_descriptors"]], "check_key_val() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.check_key_val"]], "check_version_compatible() (in module utils.model_version_utils)": [[13, "utils.model_version_utils.check_version_compatible"]], "cluster_dataframe() (in module utils.rdkit_easy)": [[13, "utils.rdkit_easy.cluster_dataframe"]], "cluster_fingerprints() (in module utils.rdkit_easy)": [[13, "utils.rdkit_easy.cluster_fingerprints"]], "compare_split_files() (in module utils.compare_split_csv)": [[13, "utils.compare_split_csv.compare_split_files"]], "compare_splits() (in module utils.compare_split_csv)": [[13, "utils.compare_split_csv.compare_splits"]], "config_client() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.config_client"]], "copy_datasets_to_bucket() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.copy_datasets_to_bucket"]], "create_checksum() (in module utils.checksum_utils)": [[13, "utils.checksum_utils.create_checksum"]], "create_new_rows_for_extra_results() (in module utils.curate_data)": [[13, "utils.curate_data.create_new_rows_for_extra_results"]], "dataset_key_exists() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.dataset_key_exists"]], "dist_hist_plot() (utils.compare_splits_plots.splitstats method)": [[13, "utils.compare_splits_plots.SplitStats.dist_hist_plot"]], "down_select() (in module utils.data_curation_functions)": [[13, "utils.data_curation_functions.down_select"]], "download_sid_from_bioactivity_assay() (in module utils.pubchem_utils)": [[13, "utils.pubchem_utils.download_SID_from_bioactivity_assay"]], "download_activitytype() (in module utils.pubchem_utils)": [[13, "utils.pubchem_utils.download_activitytype"]], "download_bioactivity_assay() (in module utils.pubchem_utils)": [[13, "utils.pubchem_utils.download_bioactivity_assay"]], "download_dose_response_from_bioactivity() (in module utils.pubchem_utils)": [[13, "utils.pubchem_utils.download_dose_response_from_bioactivity"]], "download_smiles() (in module utils.pubchem_utils)": [[13, "utils.pubchem_utils.download_smiles"]], "draw_structure() (in module utils.struct_utils)": [[13, "utils.struct_utils.draw_structure"]], "exclude_organometallics() (in module utils.data_curation_functions)": [[13, "utils.data_curation_functions.exclude_organometallics"]], "filter_datasets_interactive() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.filter_datasets_interactive"]], "filter_dtc_data() (in module utils.data_curation_functions)": [[13, "utils.data_curation_functions.filter_dtc_data"]], "filter_in_by_column_values() (in module utils.curate_data)": [[13, "utils.curate_data.filter_in_by_column_values"]], "filter_in_out_by_column_values() (in module utils.curate_data)": [[13, "utils.curate_data.filter_in_out_by_column_values"]], "filter_jobs() (utils.hyperparam_search_wrapper.hyperparametersearch method)": [[13, "utils.hyperparam_search_wrapper.HyperparameterSearch.filter_jobs"]], "filter_out_by_column_values() (in module utils.curate_data)": [[13, "utils.curate_data.filter_out_by_column_values"]], "filter_out_comments() (in module utils.curate_data)": [[13, "utils.curate_data.filter_out_comments"]], "fix_moe_smiles() (in module utils.struct_utils)": [[13, "utils.struct_utils.fix_moe_smiles"]], "freq_table() (in module utils.curate_data)": [[13, "utils.curate_data.freq_table"]], "genunionset() (in module utils.gentestset)": [[13, "utils.genTestset.genUnionSet"]], "gen_maestro_command() (in module utils.hyperparam_search_wrapper)": [[13, "utils.hyperparam_search_wrapper.gen_maestro_command"]], "generatetestset() (in module utils.gentestset)": [[13, "utils.genTestset.generateTestset"]], "generate_assay_list() (utils.hyperparam_search_wrapper.geometricsearch method)": [[13, "utils.hyperparam_search_wrapper.GeometricSearch.generate_assay_list"]], "generate_assay_list() (utils.hyperparam_search_wrapper.gridsearch method)": [[13, "utils.hyperparam_search_wrapper.GridSearch.generate_assay_list"]], "generate_assay_list() (utils.hyperparam_search_wrapper.hyperparametersearch method)": [[13, "utils.hyperparam_search_wrapper.HyperparameterSearch.generate_assay_list"]], "generate_assay_list() (utils.hyperparam_search_wrapper.randomsearch method)": [[13, "utils.hyperparam_search_wrapper.RandomSearch.generate_assay_list"]], "generate_assay_list() (utils.hyperparam_search_wrapper.userspecifiedsearch method)": [[13, "utils.hyperparam_search_wrapper.UserSpecifiedSearch.generate_assay_list"]], "generate_combo() (utils.hyperparam_search_wrapper.geometricsearch method)": [[13, "utils.hyperparam_search_wrapper.GeometricSearch.generate_combo"]], "generate_combo() (utils.hyperparam_search_wrapper.gridsearch method)": [[13, "utils.hyperparam_search_wrapper.GridSearch.generate_combo"]], "generate_combo() (utils.hyperparam_search_wrapper.hyperparametersearch method)": [[13, "utils.hyperparam_search_wrapper.HyperparameterSearch.generate_combo"]], "generate_combo() (utils.hyperparam_search_wrapper.randomsearch method)": [[13, "utils.hyperparam_search_wrapper.RandomSearch.generate_combo"]], "generate_combo() (utils.hyperparam_search_wrapper.userspecifiedsearch method)": [[13, "utils.hyperparam_search_wrapper.UserSpecifiedSearch.generate_combo"]], "generate_combos() (utils.hyperparam_search_wrapper.hyperparametersearch method)": [[13, "utils.hyperparam_search_wrapper.HyperparameterSearch.generate_combos"]], "generate_maestro_commands() (utils.hyperparam_search_wrapper.hyperparametersearch method)": [[13, "utils.hyperparam_search_wrapper.HyperparameterSearch.generate_maestro_commands"]], "generate_param_combos() (utils.hyperparam_search_wrapper.geometricsearch method)": [[13, "utils.hyperparam_search_wrapper.GeometricSearch.generate_param_combos"]], "generate_param_combos() (utils.hyperparam_search_wrapper.gridsearch method)": [[13, "utils.hyperparam_search_wrapper.GridSearch.generate_param_combos"]], "generate_param_combos() (utils.hyperparam_search_wrapper.hyperparametersearch method)": [[13, "utils.hyperparam_search_wrapper.HyperparameterSearch.generate_param_combos"]], "generate_param_combos() (utils.hyperparam_search_wrapper.randomsearch method)": [[13, "utils.hyperparam_search_wrapper.RandomSearch.generate_param_combos"]], "generate_param_combos() (utils.hyperparam_search_wrapper.userspecifiedsearch method)": [[13, "utils.hyperparam_search_wrapper.UserSpecifiedSearch.generate_param_combos"]], "generate_searches() (utils.hyperparam_search_wrapper.hyperparametersearch method)": [[13, "utils.hyperparam_search_wrapper.HyperparameterSearch.generate_searches"]], "generate_split_shortlist() (utils.hyperparam_search_wrapper.hyperparametersearch method)": [[13, "utils.hyperparam_search_wrapper.HyperparameterSearch.generate_split_shortlist"]], "generate_split_shortlist_file() (utils.hyperparam_search_wrapper.hyperparametersearch method)": [[13, "utils.hyperparam_search_wrapper.HyperparameterSearch.generate_split_shortlist_file"]], "get_ampl_version() (in module utils.model_version_utils)": [[13, "utils.model_version_utils.get_ampl_version"]], "get_ampl_version_from_dir() (in module utils.model_version_utils)": [[13, "utils.model_version_utils.get_ampl_version_from_dir"]], "get_ampl_version_from_json() (in module utils.model_version_utils)": [[13, "utils.model_version_utils.get_ampl_version_from_json"]], "get_ampl_version_from_model() (in module utils.model_version_utils)": [[13, "utils.model_version_utils.get_ampl_version_from_model"]], "get_command_output() (in module utils.llnl_utils)": [[13, "utils.llnl_utils.get_command_output"]], "get_dataset_hash_from_tar() (in module utils.checksum_utils)": [[13, "utils.checksum_utils.get_dataset_hash_from_tar"]], "get_dataset_metadata() (utils.hyperparam_search_wrapper.hyperparametersearch method)": [[13, "utils.hyperparam_search_wrapper.HyperparameterSearch.get_dataset_metadata"]], "get_key_val() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.get_key_val"]], "get_keyval() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.get_keyval"]], "get_major_version() (in module utils.model_version_utils)": [[13, "utils.model_version_utils.get_major_version"]], "get_my_username() (in module utils.llnl_utils)": [[13, "utils.llnl_utils.get_my_username"]], "get_num_params() (in module utils.hyperparam_search_wrapper)": [[13, "utils.hyperparam_search_wrapper.get_num_params"]], "get_rdkit_smiles() (in module utils.struct_utils)": [[13, "utils.struct_utils.get_rdkit_smiles"]], "get_rdkit_smiles_parent() (in module utils.curate_data)": [[13, "utils.curate_data.get_rdkit_smiles_parent"]], "get_shortlist_df() (utils.hyperparam_search_wrapper.hyperparametersearch method)": [[13, "utils.hyperparam_search_wrapper.HyperparameterSearch.get_shortlist_df"]], "get_smiles_4dtc_data() (in module utils.data_curation_functions)": [[13, "utils.data_curation_functions.get_smiles_4dtc_data"]], "get_smiles_dtc_data() (in module utils.data_curation_functions)": [[13, "utils.data_curation_functions.get_smiles_dtc_data"]], "get_smiles_excape_data() (in module utils.data_curation_functions)": [[13, "utils.data_curation_functions.get_smiles_excape_data"]], "get_timings() (in module utils.process_slurm)": [[13, "utils.process_slurm.get_timings"]], "has_nans() (in module utils.many_to_one)": [[13, "utils.many_to_one.has_nans"]], "ic50topic50() (in module utils.data_curation_functions)": [[13, "utils.data_curation_functions.ic50topic50"]], "initialize_model_tracker() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.initialize_model_tracker"]], "intersection() (in module utils.gentestset)": [[13, "utils.genTestset.intersection"]], "is_lc_system() (in module utils.llnl_utils)": [[13, "utils.llnl_utils.is_lc_system"]], "is_organometallic() (in module utils.data_curation_functions)": [[13, "utils.data_curation_functions.is_organometallic"]], "is_within_directory() (in module utils.file_utils)": [[13, "utils.file_utils.is_within_directory"]], "kekulize_smiles() (in module utils.struct_utils)": [[13, "utils.struct_utils.kekulize_smiles"]], "key_exists() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.key_exists"]], "labeled_freq_table() (in module utils.curate_data)": [[13, "utils.curate_data.labeled_freq_table"]], "list_key_values() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.list_key_values"]], "main() (in module utils.hyperparam_search_wrapper)": [[13, "utils.hyperparam_search_wrapper.main"]], "main() (in module utils.model_retrain)": [[13, "utils.model_retrain.main"]], "main() (in module utils.model_version_utils)": [[13, "utils.model_version_utils.main"]], "main() (in module utils.process_slurm)": [[13, "utils.process_slurm.main"]], "make_all_plots() (utils.compare_splits_plots.splitstats method)": [[13, "utils.compare_splits_plots.SplitStats.make_all_plots"]], "many_to_one() (in module utils.many_to_one)": [[13, "utils.many_to_one.many_to_one"]], "many_to_one_df() (in module utils.many_to_one)": [[13, "utils.many_to_one.many_to_one_df"]], "matching_atoms_and_bonds() (in module utils.rdkit_easy)": [[13, "utils.rdkit_easy.matching_atoms_and_bonds"]], "mle_censored_mean() (in module utils.curate_data)": [[13, "utils.curate_data.mle_censored_mean"]], "mol_to_html() (in module utils.rdkit_easy)": [[13, "utils.rdkit_easy.mol_to_html"]], "mol_to_pil() (in module utils.rdkit_easy)": [[13, "utils.rdkit_easy.mol_to_pil"]], "mol_to_svg() (in module utils.rdkit_easy)": [[13, "utils.rdkit_easy.mol_to_svg"]], "mol_wt_from_smiles() (in module utils.struct_utils)": [[13, "utils.struct_utils.mol_wt_from_smiles"]], "mols_from_smiles() (in module utils.struct_utils)": [[13, "utils.struct_utils.mols_from_smiles"]], "move_failed_slurm() (in module utils.process_slurm)": [[13, "utils.process_slurm.move_failed_slurm"]], "no_nan_ids_or_smiles() (in module utils.many_to_one)": [[13, "utils.many_to_one.no_nan_ids_or_smiles"]], "parse_args() (in module utils.compare_split_csv)": [[13, "utils.compare_split_csv.parse_args"]], "parse_args() (in module utils.compare_splits_plots)": [[13, "utils.compare_splits_plots.parse_args"]], "parse_params() (in module utils.hyperparam_search_wrapper)": [[13, "utils.hyperparam_search_wrapper.parse_params"]], "permutate_nnlayer_combo_params() (in module utils.hyperparam_search_wrapper)": [[13, "utils.hyperparam_search_wrapper.permutate_NNlayer_combo_params"]], "print_stats() (utils.compare_splits_plots.splitstats method)": [[13, "utils.compare_splits_plots.SplitStats.print_stats"]], "rdkit_smiles_from_smiles() (in module utils.struct_utils)": [[13, "utils.struct_utils.rdkit_smiles_from_smiles"]], "reformat_filter_dict() (in module utils.hyperparam_search_wrapper)": [[13, "utils.hyperparam_search_wrapper.reformat_filter_dict"]], "remove_outlier_replicates() (in module utils.curate_data)": [[13, "utils.curate_data.remove_outlier_replicates"]], "repeat_defined_search() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.repeat_defined_search"]], "replicate_rmsd() (in module utils.curate_data)": [[13, "utils.curate_data.replicate_rmsd"]], "rerun_failed() (in module utils.process_slurm)": [[13, "utils.process_slurm.rerun_failed"]], "retrieve_bucket_names() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.retrieve_bucket_names"]], "retrieve_columns_from_dataset() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.retrieve_columns_from_dataset"]], "retrieve_dataset_by_dataset_oid() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.retrieve_dataset_by_dataset_oid"]], "retrieve_dataset_by_datasetkey() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.retrieve_dataset_by_datasetkey"]], "retrieve_keys() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.retrieve_keys"]], "retrieve_values_for_key() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.retrieve_values_for_key"]], "return_split_uuid() (utils.hyperparam_search_wrapper.hyperparametersearch method)": [[13, "utils.hyperparam_search_wrapper.HyperparameterSearch.return_split_uuid"]], "return_split_uuid_file() (utils.hyperparam_search_wrapper.hyperparametersearch method)": [[13, "utils.hyperparam_search_wrapper.HyperparameterSearch.return_split_uuid_file"]], "run_cmd() (in module utils.hyperparam_search_wrapper)": [[13, "utils.hyperparam_search_wrapper.run_cmd"]], "run_cmd() (in module utils.process_slurm)": [[13, "utils.process_slurm.run_cmd"]], "run_command() (in module utils.hyperparam_search_wrapper)": [[13, "utils.hyperparam_search_wrapper.run_command"]], "run_command() (in module utils.process_slurm)": [[13, "utils.process_slurm.run_command"]], "run_search() (utils.hyperparam_search_wrapper.hyperoptsearch method)": [[13, "utils.hyperparam_search_wrapper.HyperOptSearch.run_search"]], "run_search() (utils.hyperparam_search_wrapper.hyperparametersearch method)": [[13, "utils.hyperparam_search_wrapper.HyperparameterSearch.run_search"]], "safe_extract() (in module utils.file_utils)": [[13, "utils.file_utils.safe_extract"]], "save_figure() (in module utils.compare_splits_plots)": [[13, "utils.compare_splits_plots.save_figure"]], "save_png() (in module utils.rdkit_easy)": [[13, "utils.rdkit_easy.save_png"]], "save_svg() (in module utils.rdkit_easy)": [[13, "utils.rdkit_easy.save_svg"]], "search_datasets_by_key_value() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.search_datasets_by_key_value"]], "search_files_interactive() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.search_files_interactive"]], "set_data_root() (in module utils.data_curation_functions)": [[13, "utils.data_curation_functions.set_data_root"]], "set_group_permissions() (in module utils.curate_data)": [[13, "utils.curate_data.set_group_permissions"]], "setup_notebook() (in module utils.rdkit_easy)": [[13, "utils.rdkit_easy.setup_notebook"]], "show_df() (in module utils.rdkit_easy)": [[13, "utils.rdkit_easy.show_df"]], "show_html() (in module utils.rdkit_easy)": [[13, "utils.rdkit_easy.show_html"]], "smiles_to_inchi_key() (in module utils.struct_utils)": [[13, "utils.struct_utils.smiles_to_inchi_key"]], "split() (in module utils.compare_splits_plots)": [[13, "utils.compare_splits_plots.split"]], "split_and_save_dataset() (utils.hyperparam_search_wrapper.geometricsearch method)": [[13, "utils.hyperparam_search_wrapper.GeometricSearch.split_and_save_dataset"]], "split_and_save_dataset() (utils.hyperparam_search_wrapper.gridsearch method)": [[13, "utils.hyperparam_search_wrapper.GridSearch.split_and_save_dataset"]], "split_and_save_dataset() (utils.hyperparam_search_wrapper.hyperparametersearch method)": [[13, "utils.hyperparam_search_wrapper.HyperparameterSearch.split_and_save_dataset"]], "split_and_save_dataset() (utils.hyperparam_search_wrapper.randomsearch method)": [[13, "utils.hyperparam_search_wrapper.RandomSearch.split_and_save_dataset"]], "split_and_save_dataset() (utils.hyperparam_search_wrapper.userspecifiedsearch method)": [[13, "utils.hyperparam_search_wrapper.UserSpecifiedSearch.split_and_save_dataset"]], "standardize_relations() (in module utils.data_curation_functions)": [[13, "utils.data_curation_functions.standardize_relations"]], "string_to_dict() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.string_to_dict"]], "string_to_list() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.string_to_list"]], "submit_jobs() (utils.hyperparam_search_wrapper.hyperparametersearch method)": [[13, "utils.hyperparam_search_wrapper.HyperparameterSearch.submit_jobs"]], "subset_frac_plot() (utils.compare_splits_plots.splitstats method)": [[13, "utils.compare_splits_plots.SplitStats.subset_frac_plot"]], "summarize_data() (in module utils.curate_data)": [[13, "utils.curate_data.summarize_data"]], "summarize_datasets() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.summarize_datasets"]], "throttle_jobs() (in module utils.llnl_utils)": [[13, "utils.llnl_utils.throttle_jobs"]], "train_model() (in module utils.model_retrain)": [[13, "utils.model_retrain.train_model"]], "train_model_from_tar() (in module utils.model_retrain)": [[13, "utils.model_retrain.train_model_from_tar"]], "train_model_from_tracker() (in module utils.model_retrain)": [[13, "utils.model_retrain.train_model_from_tracker"]], "train_models_from_dataset_keys() (in module utils.model_retrain)": [[13, "utils.model_retrain.train_models_from_dataset_keys"]], "umap_plot() (utils.compare_splits_plots.splitstats method)": [[13, "utils.compare_splits_plots.SplitStats.umap_plot"]], "update_distribution_kv() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.update_distribution_kv"]], "update_kv() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.update_kv"]], "upload_df_dtc_base_smiles_all() (in module utils.data_curation_functions)": [[13, "utils.data_curation_functions.upload_df_dtc_base_smiles_all"]], "upload_df_dtc_mleqonly() (in module utils.data_curation_functions)": [[13, "utils.data_curation_functions.upload_df_dtc_mleqonly"]], "upload_df_dtc_mleqonly_class() (in module utils.data_curation_functions)": [[13, "utils.data_curation_functions.upload_df_dtc_mleqonly_class"]], "upload_df_dtc_smiles() (in module utils.data_curation_functions)": [[13, "utils.data_curation_functions.upload_df_dtc_smiles"]], "upload_df_dtc_smiles_regr_all_class() (in module utils.data_curation_functions)": [[13, "utils.data_curation_functions.upload_df_dtc_smiles_regr_all_class"]], "upload_df_excape_mleqonly() (in module utils.data_curation_functions)": [[13, "utils.data_curation_functions.upload_df_excape_mleqonly"]], "upload_df_excape_mleqonly_class() (in module utils.data_curation_functions)": [[13, "utils.data_curation_functions.upload_df_excape_mleqonly_class"]], "upload_df_excape_smiles() (in module utils.data_curation_functions)": [[13, "utils.data_curation_functions.upload_df_excape_smiles"]], "upload_df_to_ds() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.upload_df_to_DS"]], "upload_file_dtc_raw_data() (in module utils.data_curation_functions)": [[13, "utils.data_curation_functions.upload_file_dtc_raw_data"]], "upload_file_dtc_smiles_regr_all() (in module utils.data_curation_functions)": [[13, "utils.data_curation_functions.upload_file_dtc_smiles_regr_all"]], "upload_file_excape_raw_data() (in module utils.data_curation_functions)": [[13, "utils.data_curation_functions.upload_file_excape_raw_data"]], "upload_file_to_ds() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.upload_file_to_DS"]], "upload_pickle_to_ds() (in module utils.datastore_functions)": [[13, "utils.datastore_functions.upload_pickle_to_DS"]], "uses_same_training_data_by_datasets() (in module utils.checksum_utils)": [[13, "utils.checksum_utils.uses_same_training_data_by_datasets"]], "uses_same_training_data_by_tarballs() (in module utils.checksum_utils)": [[13, "utils.checksum_utils.uses_same_training_data_by_tarballs"]], "utils": [[13, "module-utils"]], "utils.checksum_utils": [[13, "module-utils.checksum_utils"]], "utils.compare_split_csv": [[13, "module-utils.compare_split_csv"]], "utils.compare_splits_plots": [[13, "module-utils.compare_splits_plots"]], "utils.curate_data": [[13, "module-utils.curate_data"]], "utils.data_curation_functions": [[13, "module-utils.data_curation_functions"]], "utils.datastore_functions": [[13, "module-utils.datastore_functions"]], "utils.file_utils": [[13, "module-utils.file_utils"]], "utils.gentestset": [[13, "module-utils.genTestset"]], "utils.hyperparam_search_wrapper": [[13, "module-utils.hyperparam_search_wrapper"]], "utils.llnl_utils": [[13, "module-utils.llnl_utils"]], "utils.many_to_one": [[13, "module-utils.many_to_one"]], "utils.model_retrain": [[13, "module-utils.model_retrain"]], "utils.model_version_utils": [[13, "module-utils.model_version_utils"]], "utils.process_slurm": [[13, "module-utils.process_slurm"]], "utils.pubchem_utils": [[13, "module-utils.pubchem_utils"]], "utils.rdkit_easy": [[13, "module-utils.rdkit_easy"]], "utils.struct_utils": [[13, "module-utils.struct_utils"]], "validate_version() (in module utils.model_version_utils)": [[13, "utils.model_version_utils.validate_version"]], "xc50topxc50_for_nm() (in module utils.curate_data)": [[13, "utils.curate_data.xc50topxc50_for_nm"]]}})